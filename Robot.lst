;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 04/05/2019 15:32:03
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2BC7      	GOTO       967
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00C1      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x1283      	BCF        STATUS, 5
0x000B	0x00EF      	MOVWF      ___savePCLATH
0x000C	0x018A      	CLRF       PCLATH
;Sensor.c,22 :: 		void interrupt (void) {
;Sensor.c,24 :: 		if(INTCON.INTF){
0x000D	0x1C8B      	BTFSS      INTCON, 1
0x000E	0x2812      	GOTO       L_interrupt0
;Sensor.c,26 :: 		INT_NUM = 5;    //INFRA
0x000F	0x3005      	MOVLW      5
0x0010	0x00C3      	MOVWF      _INT_NUM
;Sensor.c,27 :: 		INTCON.INTF = 0;   //REST
0x0011	0x108B      	BCF        INTCON, 1
;Sensor.c,28 :: 		}
L_interrupt0:
;Sensor.c,30 :: 		if (INTCON.RBIF){
0x0012	0x1C0B      	BTFSS      INTCON, 0
0x0013	0x2825      	GOTO       L_interrupt1
;Sensor.c,32 :: 		if (PORTB.RB4){
0x0014	0x1E06      	BTFSS      PORTB, 4
0x0015	0x2818      	GOTO       L_interrupt2
;Sensor.c,33 :: 		INT_NUM = 1;     // BUM1
0x0016	0x3001      	MOVLW      1
0x0017	0x00C3      	MOVWF      _INT_NUM
;Sensor.c,34 :: 		}
L_interrupt2:
;Sensor.c,35 :: 		if (PORTB.RB5){
0x0018	0x1E86      	BTFSS      PORTB, 5
0x0019	0x281C      	GOTO       L_interrupt3
;Sensor.c,36 :: 		INT_NUM = 2;      // BUM2
0x001A	0x3002      	MOVLW      2
0x001B	0x00C3      	MOVWF      _INT_NUM
;Sensor.c,37 :: 		}
L_interrupt3:
;Sensor.c,38 :: 		if (PORTB.RB6){
0x001C	0x1F06      	BTFSS      PORTB, 6
0x001D	0x2820      	GOTO       L_interrupt4
;Sensor.c,39 :: 		INT_NUM = 3;       // BUM3
0x001E	0x3003      	MOVLW      3
0x001F	0x00C3      	MOVWF      _INT_NUM
;Sensor.c,40 :: 		}
L_interrupt4:
;Sensor.c,41 :: 		if (PORTB.RB7){
0x0020	0x1F86      	BTFSS      PORTB, 7
0x0021	0x2824      	GOTO       L_interrupt5
;Sensor.c,42 :: 		INT_NUM = 4;         // BUM4
0x0022	0x3004      	MOVLW      4
0x0023	0x00C3      	MOVWF      _INT_NUM
;Sensor.c,43 :: 		}
L_interrupt5:
;Sensor.c,44 :: 		INTCON.RBIF  = 0; //REST INTERRUPT
0x0024	0x100B      	BCF        INTCON, 0
;Sensor.c,45 :: 		}
L_interrupt1:
;Sensor.c,49 :: 		}
L_end_interrupt:
L__interrupt11:
0x0025	0x086F      	MOVF       ___savePCLATH, 0
0x0026	0x008A      	MOVWF      PCLATH
0x0027	0x1683      	BSF        STATUS, 5
0x0028	0x0E41      	SWAPF      ___saveSTATUS, 0
0x0029	0x0083      	MOVWF      STATUS
0x002A	0x0EFF      	SWAPF      R15, 1
0x002B	0x0E7F      	SWAPF      R15, 0
0x002C	0x0009      	RETFIE
; end of _interrupt
_RES032:
;__Lib_MathDouble.c,123 :: 		
;__Lib_MathDouble.c,128 :: 		
0x002D	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,129 :: 		
0x002E	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,130 :: 		
0x002F	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,131 :: 		
0x0030	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,132 :: 		
0x0031	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,133 :: 		
0x0032	0x3000      	MOVLW      0
;__Lib_MathDouble.c,135 :: 		
L_end_RES032:
0x0033	0x0008      	RETURN
; end of _RES032
_SETFUN32:
;__Lib_MathDouble.c,138 :: 		
;__Lib_MathDouble.c,145 :: 		
0x0034	0x157B      	BSF        R11, 2
;__Lib_MathDouble.c,146 :: 		
0x0035	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,147 :: 		
0x0036	0x283E      	GOTO       SETFUN32EEE
;__Lib_MathDouble.c,148 :: 		
0x0037	0x3001      	MOVLW      1
;__Lib_MathDouble.c,149 :: 		
0x0038	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,150 :: 		
0x0039	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,151 :: 		
0x003A	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,152 :: 		
0x003B	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,153 :: 		
0x003C	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,154 :: 		
0x003D	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,155 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,156 :: 		
0x003E	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,158 :: 		
L_end_SETFUN32:
0x003F	0x0008      	RETURN
; end of _SETFUN32
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0040	0x3042      	MOVLW      66
0x0041	0x1283      	BCF        STATUS, 5
0x0042	0x1303      	BCF        STATUS, 6
0x0043	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0044	0x0BFD      	DECFSZ     R13, 1
0x0045	0x2844      	GOTO       L_Delay_50us2
0x0046	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0047	0x0008      	RETURN
; end of _Delay_50us
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0048	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0049	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x004A	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x004B	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x004C	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x004D	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x004E	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x004F	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x0050	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0051	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0052	0x285C      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0053	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0054	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0055	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0056	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0057	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0058	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0059	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x005A	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x005B	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x005C	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x005D	0x2864      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x005E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x005F	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x0060	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0061	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0062	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0063	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0064	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0065	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0066	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0067	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0068	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0069	0x284F      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x006A	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x006B	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x006C	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x006D	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x006E	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x006F	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x0070	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0071	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x0072	0x0008      	RETURN
; end of _Mul_16X16_U
_FIXSIGN32:
;__Lib_MathDouble.c,112 :: 		
;__Lib_MathDouble.c,116 :: 		
0x0073	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,117 :: 		
0x0074	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,118 :: 		
0x0075	0x3000      	MOVLW      0
;__Lib_MathDouble.c,120 :: 		
L_end_FIXSIGN32:
0x0076	0x0008      	RETURN
; end of _FIXSIGN32
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0077	0x0000      	NOP
0x0078	0x0000      	NOP
0x0079	0x0000      	NOP
0x007A	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x007B	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x007C	0x301D      	MOVLW      29
0x007D	0x1283      	BCF        STATUS, 5
0x007E	0x1303      	BCF        STATUS, 6
0x007F	0x00FC      	MOVWF      R12
0x0080	0x3091      	MOVLW      145
0x0081	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0082	0x0BFD      	DECFSZ     R13, 1
0x0083	0x2882      	GOTO       L_Delay_5500us5
0x0084	0x0BFC      	DECFSZ     R12, 1
0x0085	0x2882      	GOTO       L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0086	0x0008      	RETURN
; end of _Delay_5500us
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,39 :: 		
;__Lib_PWM_c21.c,43 :: 		
0x0087	0x1683      	BSF        STATUS, 5
0x0088	0x1303      	BCF        STATUS, 6
0x0089	0x0812      	MOVF       PR2, 0
0x008A	0x3E01      	ADDLW      1
0x008B	0x00F0      	MOVWF      R0
0x008C	0x01F1      	CLRF       R0+1
0x008D	0x1803      	BTFSC      STATUS, 0
0x008E	0x0AF1      	INCF       R0+1, 1
0x008F	0x084E      	MOVF       FARG_PWM1_Set_Duty_new_duty, 0
0x0090	0x00F4      	MOVWF      R4
0x0091	0x01F5      	CLRF       R4+1
0x0092	0x2048      	CALL       _Mul_16X16_U
0x0093	0x3006      	MOVLW      6
0x0094	0x00F2      	MOVWF      R2
0x0095	0x0870      	MOVF       R0, 0
0x0096	0x00F4      	MOVWF      R4
0x0097	0x0871      	MOVF       R0+1, 0
0x0098	0x00F5      	MOVWF      R4+1
0x0099	0x0872      	MOVF       R2, 0
L__PWM1_Set_Duty10:
0x009A	0x1903      	BTFSC      STATUS, 2
0x009B	0x28A1      	GOTO       L__PWM1_Set_Duty11
0x009C	0x0CF5      	RRF        R4+1, 1
0x009D	0x0CF4      	RRF        R4, 1
0x009E	0x13F5      	BCF        R4+1, 7
0x009F	0x3EFF      	ADDLW      255
0x00A0	0x289A      	GOTO       L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,44 :: 		
0x00A1	0x3004      	MOVLW      4
0x00A2	0x00F1      	MOVWF      R1
0x00A3	0x0874      	MOVF       R4, 0
0x00A4	0x00F0      	MOVWF      R0
0x00A5	0x0871      	MOVF       R1, 0
L__PWM1_Set_Duty12:
0x00A6	0x1903      	BTFSC      STATUS, 2
0x00A7	0x28AC      	GOTO       L__PWM1_Set_Duty13
0x00A8	0x0DF0      	RLF        R0, 1
0x00A9	0x1070      	BCF        R0, 0
0x00AA	0x3EFF      	ADDLW      255
0x00AB	0x28A6      	GOTO       L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x00AC	0x3030      	MOVLW      48
0x00AD	0x0570      	ANDWF      R0, 0
0x00AE	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,45 :: 		
0x00AF	0x0874      	MOVF       R4, 0
0x00B0	0x00F0      	MOVWF      R0
0x00B1	0x0875      	MOVF       R4+1, 0
0x00B2	0x00F1      	MOVWF      R0+1
0x00B3	0x0CF1      	RRF        R0+1, 1
0x00B4	0x0CF0      	RRF        R0, 1
0x00B5	0x13F1      	BCF        R0+1, 7
0x00B6	0x0CF1      	RRF        R0+1, 1
0x00B7	0x0CF0      	RRF        R0, 1
0x00B8	0x13F1      	BCF        R0+1, 7
0x00B9	0x0870      	MOVF       R0, 0
0x00BA	0x0095      	MOVWF      CCPR1L
;__Lib_PWM_c21.c,46 :: 		
0x00BB	0x300F      	MOVLW      15
0x00BC	0x0597      	ANDWF      CCP1CON, 1
;__Lib_PWM_c21.c,47 :: 		
0x00BD	0x0873      	MOVF       R3, 0
0x00BE	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,48 :: 		
L_end_PWM1_Set_Duty:
0x00BF	0x0008      	RETURN
; end of _PWM1_Set_Duty
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x00C0	0x1683      	BSF        STATUS, 5
0x00C1	0x1303      	BCF        STATUS, 6
0x00C2	0x1BCE      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x00C3	0x28C7      	GOTO       L__Lcd_Cmd21
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1288      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x00C6	0x28C9      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x00C7	0x1283      	BCF        STATUS, 5
0x00C8	0x1688      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x00C9	0x1683      	BSF        STATUS, 5
0x00CA	0x1B4E      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x00CB	0x28CF      	GOTO       L__Lcd_Cmd23
0x00CC	0x1283      	BCF        STATUS, 5
0x00CD	0x1208      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x00CE	0x28D1      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x00CF	0x1283      	BCF        STATUS, 5
0x00D0	0x1608      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x00D1	0x1683      	BSF        STATUS, 5
0x00D2	0x1ACE      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x00D3	0x28D7      	GOTO       L__Lcd_Cmd25
0x00D4	0x1283      	BCF        STATUS, 5
0x00D5	0x1188      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x00D6	0x28D9      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x00D7	0x1283      	BCF        STATUS, 5
0x00D8	0x1588      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x00D9	0x1683      	BSF        STATUS, 5
0x00DA	0x1A4E      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x00DB	0x28DF      	GOTO       L__Lcd_Cmd27
0x00DC	0x1283      	BCF        STATUS, 5
0x00DD	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x00DE	0x28E1      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x00DF	0x1283      	BCF        STATUS, 5
0x00E0	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x00E1	0x1683      	BSF        STATUS, 5
0x00E2	0x1845      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00E3	0x28E7      	GOTO       L__Lcd_Cmd29
0x00E4	0x1283      	BCF        STATUS, 5
0x00E5	0x1488      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x00E6	0x28E9      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00E7	0x1283      	BCF        STATUS, 5
0x00E8	0x1088      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00E9	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x00EA	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00EB	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x00EC	0x1683      	BSF        STATUS, 5
0x00ED	0x19CE      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x00EE	0x28F2      	GOTO       L__Lcd_Cmd31
0x00EF	0x1283      	BCF        STATUS, 5
0x00F0	0x1288      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x00F1	0x28F4      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00F2	0x1283      	BCF        STATUS, 5
0x00F3	0x1688      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00F4	0x1683      	BSF        STATUS, 5
0x00F5	0x194E      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x00F6	0x28FA      	GOTO       L__Lcd_Cmd33
0x00F7	0x1283      	BCF        STATUS, 5
0x00F8	0x1208      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x00F9	0x28FC      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00FA	0x1283      	BCF        STATUS, 5
0x00FB	0x1608      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00FC	0x1683      	BSF        STATUS, 5
0x00FD	0x18CE      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x00FE	0x2902      	GOTO       L__Lcd_Cmd35
0x00FF	0x1283      	BCF        STATUS, 5
0x0100	0x1188      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0101	0x2904      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0102	0x1283      	BCF        STATUS, 5
0x0103	0x1588      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0104	0x1683      	BSF        STATUS, 5
0x0105	0x184E      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x0106	0x290A      	GOTO       L__Lcd_Cmd37
0x0107	0x1283      	BCF        STATUS, 5
0x0108	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x0109	0x290C      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x010A	0x1283      	BCF        STATUS, 5
0x010B	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x010C	0x1683      	BSF        STATUS, 5
0x010D	0x1845      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x010E	0x2912      	GOTO       L__Lcd_Cmd39
0x010F	0x1283      	BCF        STATUS, 5
0x0110	0x1488      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0111	0x2914      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0112	0x1283      	BCF        STATUS, 5
0x0113	0x1088      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0114	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x0115	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0116	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x0117	0x1683      	BSF        STATUS, 5
0x0118	0x1C45      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0119	0x291C      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x011A	0x207C      	CALL       _Delay_5500us
0x011B	0x291D      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x011C	0x2040      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x011D	0x0008      	RETURN
; end of _Lcd_Cmd
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x011E	0x1683      	BSF        STATUS, 5
0x011F	0x1303      	BCF        STATUS, 6
0x0120	0x0812      	MOVF       PR2, 0
0x0121	0x3E01      	ADDLW      1
0x0122	0x00F0      	MOVWF      R0
0x0123	0x01F1      	CLRF       R0+1
0x0124	0x1803      	BTFSC      STATUS, 0
0x0125	0x0AF1      	INCF       R0+1, 1
0x0126	0x084E      	MOVF       FARG_PWM2_Set_Duty_new_duty, 0
0x0127	0x00F4      	MOVWF      R4
0x0128	0x01F5      	CLRF       R4+1
0x0129	0x2048      	CALL       _Mul_16X16_U
0x012A	0x3006      	MOVLW      6
0x012B	0x00F2      	MOVWF      R2
0x012C	0x0870      	MOVF       R0, 0
0x012D	0x00F4      	MOVWF      R4
0x012E	0x0871      	MOVF       R0+1, 0
0x012F	0x00F5      	MOVWF      R4+1
0x0130	0x0872      	MOVF       R2, 0
L__PWM2_Set_Duty2:
0x0131	0x1903      	BTFSC      STATUS, 2
0x0132	0x2938      	GOTO       L__PWM2_Set_Duty3
0x0133	0x0CF5      	RRF        R4+1, 1
0x0134	0x0CF4      	RRF        R4, 1
0x0135	0x13F5      	BCF        R4+1, 7
0x0136	0x3EFF      	ADDLW      255
0x0137	0x2931      	GOTO       L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
;__Lib_PWM_c21.c,13 :: 		
0x0138	0x3004      	MOVLW      4
0x0139	0x00F1      	MOVWF      R1
0x013A	0x0874      	MOVF       R4, 0
0x013B	0x00F0      	MOVWF      R0
0x013C	0x0871      	MOVF       R1, 0
L__PWM2_Set_Duty4:
0x013D	0x1903      	BTFSC      STATUS, 2
0x013E	0x2943      	GOTO       L__PWM2_Set_Duty5
0x013F	0x0DF0      	RLF        R0, 1
0x0140	0x1070      	BCF        R0, 0
0x0141	0x3EFF      	ADDLW      255
0x0142	0x293D      	GOTO       L__PWM2_Set_Duty4
L__PWM2_Set_Duty5:
0x0143	0x3030      	MOVLW      48
0x0144	0x0570      	ANDWF      R0, 0
0x0145	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,14 :: 		
0x0146	0x0874      	MOVF       R4, 0
0x0147	0x00F0      	MOVWF      R0
0x0148	0x0875      	MOVF       R4+1, 0
0x0149	0x00F1      	MOVWF      R0+1
0x014A	0x0CF1      	RRF        R0+1, 1
0x014B	0x0CF0      	RRF        R0, 1
0x014C	0x13F1      	BCF        R0+1, 7
0x014D	0x0CF1      	RRF        R0+1, 1
0x014E	0x0CF0      	RRF        R0, 1
0x014F	0x13F1      	BCF        R0+1, 7
0x0150	0x0870      	MOVF       R0, 0
0x0151	0x009B      	MOVWF      CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x0152	0x300F      	MOVLW      15
0x0153	0x059D      	ANDWF      CCP2CON, 1
;__Lib_PWM_c21.c,16 :: 		
0x0154	0x0873      	MOVF       R3, 0
0x0155	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,17 :: 		
L_end_PWM2_Set_Duty:
0x0156	0x0008      	RETURN
; end of _PWM2_Set_Duty
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0157	0x301D      	MOVLW      29
0x0158	0x1283      	BCF        STATUS, 5
0x0159	0x1303      	BCF        STATUS, 6
0x015A	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x015B	0x0BFD      	DECFSZ     R13, 1
0x015C	0x295B      	GOTO       L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x015D	0x0008      	RETURN
; end of _Delay_22us
_NRM3232:
;__Lib_MathDouble.c,167 :: 		
;__Lib_MathDouble.c,173 :: 		
;__Lib_MathDouble.c,175 :: 		
0x015E	0x01A0      	CLRF       __math_tempbD
;__Lib_MathDouble.c,176 :: 		
0x015F	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,177 :: 		
0x0160	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,178 :: 		
0x0161	0x2973      	GOTO       NORM3232
;__Lib_MathDouble.c,179 :: 		
0x0162	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,180 :: 		
0x0163	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,181 :: 		
0x0164	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,182 :: 		
0x0165	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,183 :: 		
0x0166	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,184 :: 		
0x0167	0x15A0      	BSF        __math_tempbD, 3
;__Lib_MathDouble.c,186 :: 		
0x0168	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,187 :: 		
0x0169	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,188 :: 		
0x016A	0x2973      	GOTO       NORM3232
;__Lib_MathDouble.c,189 :: 		
0x016B	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,190 :: 		
0x016C	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,191 :: 		
0x016D	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,192 :: 		
0x016E	0x11A0      	BCF        __math_tempbD, 3
;__Lib_MathDouble.c,193 :: 		
0x016F	0x1620      	BSF        __math_tempbD, 4
;__Lib_MathDouble.c,195 :: 		
0x0170	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,196 :: 		
0x0171	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,197 :: 		
0x0172	0x2981      	GOTO       JPNRES032
;__Lib_MathDouble.c,198 :: 		
NORM3232:
;__Lib_MathDouble.c,199 :: 		
0x0173	0x0820      	MOVF       __math_tempbD, 0
;__Lib_MathDouble.c,200 :: 		
0x0174	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,201 :: 		
0x0175	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,202 :: 		
0x0176	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,203 :: 		
0x0177	0x2985      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,204 :: 		
0x0178	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,205 :: 		
NORM3232A:
;__Lib_MathDouble.c,206 :: 		
0x0179	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,207 :: 		
0x017A	0x2989      	GOTO       JMPNFIXSIGN32
;__Lib_MathDouble.c,208 :: 		
0x017B	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,209 :: 		
0x017C	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,210 :: 		
0x017D	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,211 :: 		
0x017E	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,212 :: 		
0x017F	0x2979      	GOTO       NORM3232A
;__Lib_MathDouble.c,213 :: 		
0x0180	0x2985      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,214 :: 		
JPNRES032:
;__Lib_MathDouble.c,215 :: 		
0x0181	0x3001      	MOVLW      1
;__Lib_MathDouble.c,216 :: 		
0x0182	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,218 :: 		
0x0183	0x202D      	CALL       _RES032
;__Lib_MathDouble.c,220 :: 		
0x0184	0x298C      	GOTO       NORM32EEE
;__Lib_MathDouble.c,221 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,222 :: 		
0x0185	0x3002      	MOVLW      2
;__Lib_MathDouble.c,223 :: 		
0x0186	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,225 :: 		
0x0187	0x2034      	CALL       _SETFUN32
;__Lib_MathDouble.c,227 :: 		
0x0188	0x298C      	GOTO       NORM32EEE
;__Lib_MathDouble.c,228 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,229 :: 		
0x0189	0x3004      	MOVLW      4
;__Lib_MathDouble.c,230 :: 		
0x018A	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,232 :: 		
0x018B	0x2073      	CALL       _FIXSIGN32
;__Lib_MathDouble.c,234 :: 		
NORM32EEE:
;__Lib_MathDouble.c,236 :: 		
L_end_NRM3232:
0x018C	0x0008      	RETURN
; end of _NRM3232
_MOTORS_Stop:
;Motors.c,38 :: 		void MOTORS_Stop(){
;Motors.c,39 :: 		PWM1_Set_Duty(0);
0x018D	0x1683      	BSF        STATUS, 5
0x018E	0x1303      	BCF        STATUS, 6
0x018F	0x01CE      	CLRF       FARG_PWM1_Set_Duty_new_duty
0x0190	0x2087      	CALL       _PWM1_Set_Duty
;Motors.c,40 :: 		PWM2_Set_Duty(0);
0x0191	0x1683      	BSF        STATUS, 5
0x0192	0x01CE      	CLRF       FARG_PWM2_Set_Duty_new_duty
0x0193	0x211E      	CALL       _PWM2_Set_Duty
;Motors.c,41 :: 		PORTC.RC3 = 0;
0x0194	0x1187      	BCF        PORTC, 3
;Motors.c,42 :: 		PORTC.RC4 = 0;
0x0195	0x1207      	BCF        PORTC, 4
;Motors.c,43 :: 		}
L_end_MOTORS_Stop:
0x0196	0x0008      	RETURN
; end of _MOTORS_Stop
_MOTOR_Aspirator:
;Motors.c,5 :: 		void MOTOR_Aspirator(unsigned short F){
;Motors.c,6 :: 		if (F == 1){
0x0197	0x1683      	BSF        STATUS, 5
0x0198	0x1303      	BCF        STATUS, 6
0x0199	0x084A      	MOVF       FARG_MOTOR_Aspirator_F, 0
0x019A	0x3A01      	XORLW      1
0x019B	0x1D03      	BTFSS      STATUS, 2
0x019C	0x29A0      	GOTO       L_MOTOR_Aspirator0
;Motors.c,7 :: 		PORTD.RD6 = 1;
0x019D	0x1283      	BCF        STATUS, 5
0x019E	0x1708      	BSF        PORTD, 6
;Motors.c,8 :: 		}else{
0x019F	0x29A2      	GOTO       L_MOTOR_Aspirator1
L_MOTOR_Aspirator0:
0x01A0	0x1283      	BCF        STATUS, 5
;Motors.c,9 :: 		PORTD.RD6 = 0;
0x01A1	0x1308      	BCF        PORTD, 6
;Motors.c,10 :: 		}
L_MOTOR_Aspirator1:
;Motors.c,11 :: 		}
L_end_MOTOR_Aspirator:
0x01A2	0x0008      	RETURN
; end of _MOTOR_Aspirator
_MOTOR_Blades:
;Motors.c,13 :: 		void MOTOR_Blades(unsigned short F){
;Motors.c,14 :: 		if (F == 1){
0x01A3	0x1683      	BSF        STATUS, 5
0x01A4	0x1303      	BCF        STATUS, 6
0x01A5	0x084A      	MOVF       FARG_MOTOR_Blades_F, 0
0x01A6	0x3A01      	XORLW      1
0x01A7	0x1D03      	BTFSS      STATUS, 2
0x01A8	0x29AC      	GOTO       L_MOTOR_Blades2
;Motors.c,15 :: 		PORTD.RD7 = 1;
0x01A9	0x1283      	BCF        STATUS, 5
0x01AA	0x1788      	BSF        PORTD, 7
;Motors.c,16 :: 		}else{
0x01AB	0x29AE      	GOTO       L_MOTOR_Blades3
L_MOTOR_Blades2:
0x01AC	0x1283      	BCF        STATUS, 5
;Motors.c,17 :: 		PORTD.RD7 = 0;
0x01AD	0x1388      	BCF        PORTD, 7
;Motors.c,18 :: 		}
L_MOTOR_Blades3:
;Motors.c,19 :: 		}
L_end_MOTOR_Blades:
0x01AE	0x0008      	RETURN
; end of _MOTOR_Blades
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x01AF	0x1283      	BCF        STATUS, 5
0x01B0	0x1303      	BCF        STATUS, 6
0x01B1	0x019B      	CLRF       CCPR2L
;__Lib_PWM_c21.c,4 :: 		
0x01B2	0x121D      	BCF        CCP2CON, 4
;__Lib_PWM_c21.c,5 :: 		
0x01B3	0x129D      	BCF        CCP2CON, 5
;__Lib_PWM_c21.c,6 :: 		
L_end_PWM2_Init:
0x01B4	0x0008      	RETURN
; end of _PWM2_Init
_EEPROM_Read:
;__Lib_EEPROM.c,4 :: 		
;__Lib_EEPROM.c,5 :: 		
0x01B5	0x1683      	BSF        STATUS, 5
0x01B6	0x1303      	BCF        STATUS, 6
0x01B7	0x084A      	MOVF       FARG_EEPROM_Read_Address, 0
0x01B8	0x1283      	BCF        STATUS, 5
0x01B9	0x1703      	BSF        STATUS, 6
0x01BA	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,6 :: 		
0x01BB	0x1683      	BSF        STATUS, 5
0x01BC	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,12 :: 		
0x01BD	0x140C      	BSF        EECON1, 0
;__Lib_EEPROM.c,13 :: 		
0x01BE	0x1283      	BCF        STATUS, 5
0x01BF	0x080C      	MOVF       EEDATA, 0
0x01C0	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,14 :: 		
L_end_EEPROM_Read:
0x01C1	0x0008      	RETURN
; end of _EEPROM_Read
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x01C2	0x1683      	BSF        STATUS, 5
0x01C3	0x1303      	BCF        STATUS, 6
0x01C4	0x1008      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x01C5	0x1088      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x01C6	0x1108      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x01C7	0x1188      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x01C8	0x1208      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x01C9	0x1288      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x01CA	0x1283      	BCF        STATUS, 5
0x01CB	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x01CC	0x1088      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x01CD	0x1288      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x01CE	0x1208      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x01CF	0x1188      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x01D0	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x01D1	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x01D2	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x01D3	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x01D4	0x1588      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x01D5	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x01D6	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x01D7	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x01D8	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x01D9	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x01DA	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x01DB	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x01DC	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x01DD	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x01DE	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x01DF	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x01E0	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x01E1	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x01E2	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x01E3	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x01E4	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x01E5	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x01E6	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x01E7	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x01E8	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x01E9	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x01EA	0x1188      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x01EB	0x1688      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x01EC	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x01ED	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x01EE	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x01EF	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x01F0	0x1288      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x01F1	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x01F2	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x01F3	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x01F4	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x01F5	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x01F6	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x01F7	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x01F8	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x01F9	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x01FA	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x01FB	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x01FC	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x01FD	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x01FE	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x01FF	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0200	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x0201	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0202	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0203	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x0204	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0205	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0206	0x1688      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0207	0x1608      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0208	0x1588      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0209	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x020A	0x1408      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x020B	0x2077      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x020C	0x1008      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x020D	0x207C      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x020E	0x1683      	BSF        STATUS, 5
0x020F	0x1445      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0210	0x0008      	RETURN
; end of _Lcd_Init
_ADC_Init:
;__Lib_ADC_A_C.c,19 :: 		
;__Lib_ADC_A_C.c,20 :: 		
0x0211	0x30FF      	MOVLW      _ADC_Get_Sample
0x0212	0x1683      	BSF        STATUS, 5
0x0213	0x1303      	BCF        STATUS, 6
0x0214	0x00C2      	MOVWF      _ADC_Get_Sample_Ptr
0x0215	0x30FF      	MOVLW      hi_addr(_ADC_Get_Sample)
0x0216	0x00C3      	MOVWF      _ADC_Get_Sample_Ptr+1
0x0217	0x30FF      	MOVLW      FARG_ADC_Get_Sample_channel
0x0218	0x00C4      	MOVWF      _ADC_Get_Sample_Ptr+2
0x0219	0x30FF      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
;__Lib_ADC_A_C.c,22 :: 		
0x021A	0x1283      	BCF        STATUS, 5
0x021B	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,23 :: 		
0x021C	0x30C0      	MOVLW      192
0x021D	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,24 :: 		
0x021E	0x0944      	COMF       _vref_mask, 0
0x021F	0x00F0      	MOVWF      R0
0x0220	0x0870      	MOVF       R0, 0
0x0221	0x1683      	BSF        STATUS, 5
0x0222	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,25 :: 		
0x0223	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,26 :: 		
0x0224	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,29 :: 		
0x0225	0x1283      	BCF        STATUS, 5
0x0226	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,30 :: 		
L_end_ADC_Init:
0x0227	0x0008      	RETURN
; end of _ADC_Init
_ADC_Read:
;__Lib_ADC_A_C.c,68 :: 		
;__Lib_ADC_A_C.c,70 :: 		
0x0228	0x1283      	BCF        STATUS, 5
0x0229	0x1303      	BCF        STATUS, 6
0x022A	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,71 :: 		
0x022B	0x30C0      	MOVLW      192
0x022C	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,72 :: 		
0x022D	0x0944      	COMF       _vref_mask, 0
0x022E	0x00F0      	MOVWF      R0
0x022F	0x0870      	MOVF       R0, 0
0x0230	0x1683      	BSF        STATUS, 5
0x0231	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,73 :: 		
0x0232	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,74 :: 		
0x0233	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,75 :: 		
0x0234	0x084A      	MOVF       FARG_ADC_Read_channel, 0
0x0235	0x00F0      	MOVWF      R0
0x0236	0x0DF0      	RLF        R0, 1
0x0237	0x1070      	BCF        R0, 0
0x0238	0x0DF0      	RLF        R0, 1
0x0239	0x1070      	BCF        R0, 0
0x023A	0x0DF0      	RLF        R0, 1
0x023B	0x1070      	BCF        R0, 0
0x023C	0x0870      	MOVF       R0, 0
0x023D	0x1283      	BCF        STATUS, 5
0x023E	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,78 :: 		
0x023F	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,81 :: 		
0x0240	0x2157      	CALL       _Delay_22us
;__Lib_ADC_A_C.c,84 :: 		
0x0241	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_C.c,87 :: 		
L_ADC_Read2:
0x0242	0x1D1F      	BTFSS      ADCON0, 2
0x0243	0x2A46      	GOTO       L_ADC_Read3
;__Lib_ADC_A_C.c,88 :: 		
0x0244	0x0000      	NOP
0x0245	0x2A42      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,91 :: 		
0x0246	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_C.c,94 :: 		
0x0247	0x081E      	MOVF       ADRESH, 0
0x0248	0x00F1      	MOVWF      R0+1
0x0249	0x01F0      	CLRF       R0
0x024A	0x1683      	BSF        STATUS, 5
0x024B	0x081E      	MOVF       ADRESL, 0
0x024C	0x04F0      	IORWF      R0, 1
0x024D	0x3000      	MOVLW      0
0x024E	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_A_C.c,95 :: 		
L_end_ADC_Read:
0x024F	0x0008      	RETURN
; end of _ADC_Read
_word2double:
;__Lib_MathDouble.c,1862 :: 		
;__Lib_MathDouble.c,1868 :: 		
0x0250	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.c,1869 :: 		
0x0251	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.c,1870 :: 		
0x0252	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1871 :: 		
0x0253	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,1872 :: 		
0x0254	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,1873 :: 		
0x0255	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1874 :: 		
0x0256	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1875 :: 		
0x0257	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1876 :: 		
0x0258	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,1879 :: 		
0x0259	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,1880 :: 		
0x025A	0x01FC      	CLRF       R12
;__Lib_MathDouble.c,1882 :: 		
0x025B	0x3096      	MOVLW      150
;__Lib_MathDouble.c,1883 :: 		
0x025C	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1884 :: 		
0x025D	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,1886 :: 		
0x025E	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1887 :: 		
0x025F	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1888 :: 		
0x0260	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.c,1889 :: 		
0x0261	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1890 :: 		
0x0262	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,1891 :: 		
0x0263	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1893 :: 		
0x0264	0x215E      	CALL       _NRM3232
;__Lib_MathDouble.c,1894 :: 		
L_end_word2double:
0x0265	0x0008      	RETURN
; end of _word2double
_PWM1_Start:
;__Lib_PWM_c21.c,50 :: 		
;__Lib_PWM_c21.c,51 :: 		
0x0266	0x1683      	BSF        STATUS, 5
0x0267	0x1303      	BCF        STATUS, 6
0x0268	0x1107      	BCF        TRISC2_bit, BitPos(TRISC2_bit+0)
;__Lib_PWM_c21.c,52 :: 		
0x0269	0x1283      	BCF        STATUS, 5
0x026A	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,53 :: 		
0x026B	0x300C      	MOVLW      12
0x026C	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,54 :: 		
L_end_PWM1_Start:
0x026D	0x0008      	RETURN
; end of _PWM1_Start
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x026E	0x1683      	BSF        STATUS, 5
0x026F	0x1303      	BCF        STATUS, 6
0x0270	0x1045      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x0271	0x084A      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x0272	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x0273	0x20C0      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0274	0x1683      	BSF        STATUS, 5
0x0275	0x1445      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0276	0x0008      	RETURN
; end of _Lcd_Chr_CP
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0277	0x1683      	BSF        STATUS, 5
0x0278	0x1303      	BCF        STATUS, 6
0x0279	0x1087      	BCF        TRISC1_bit, BitPos(TRISC1_bit+0)
;__Lib_PWM_c21.c,21 :: 		
0x027A	0x1283      	BCF        STATUS, 5
0x027B	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,22 :: 		
0x027C	0x300C      	MOVLW      12
0x027D	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,23 :: 		
L_end_PWM2_Start:
0x027E	0x0008      	RETURN
; end of _PWM2_Start
_PWM1_Init:
;__Lib_PWM_c21.c,32 :: 		
;__Lib_PWM_c21.c,33 :: 		
;__Lib_PWM_c21.c,34 :: 		
0x027F	0x1283      	BCF        STATUS, 5
0x0280	0x1303      	BCF        STATUS, 6
0x0281	0x0195      	CLRF       CCPR1L
;__Lib_PWM_c21.c,35 :: 		
0x0282	0x1217      	BCF        CCP1CON, 4
;__Lib_PWM_c21.c,36 :: 		
0x0283	0x1297      	BCF        CCP1CON, 5
;__Lib_PWM_c21.c,37 :: 		
L_end_PWM1_Init:
0x0284	0x0008      	RETURN
; end of _PWM1_Init
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0285	0x1683      	BSF        STATUS, 5
0x0286	0x1303      	BCF        STATUS, 6
0x0287	0x0837      	MOVF       ___DoICPAddr+1, 0
0x0288	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0289	0x0836      	MOVF       ___DoICPAddr, 0
0x028A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x028B	0x0008      	RETURN
; end of _____DoICP
_SPEED_Read:
;EEPROM.c,7 :: 		unsigned short SPEED_Read(){
;EEPROM.c,9 :: 		return EEPROM_Read(SPEED);
0x028C	0x3010      	MOVLW      16
0x028D	0x1683      	BSF        STATUS, 5
0x028E	0x1303      	BCF        STATUS, 6
0x028F	0x00CA      	MOVWF      FARG_EEPROM_Read_Address
0x0290	0x21B5      	CALL       _EEPROM_Read
;EEPROM.c,10 :: 		}
L_end_SPEED_Read:
0x0291	0x0008      	RETURN
; end of _SPEED_Read
_SENSOR_Init:
;Sensor.c,5 :: 		void SENSOR_Init()
;Sensor.c,7 :: 		INTCON = 0b10011000; // RB interruption
0x0292	0x3098      	MOVLW      152
0x0293	0x008B      	MOVWF      INTCON
;Sensor.c,8 :: 		OPTION_REG.INTEDG = 1;  // Falling Edge
0x0294	0x1683      	BSF        STATUS, 5
0x0295	0x1303      	BCF        STATUS, 6
0x0296	0x1701      	BSF        OPTION_REG, 6
;Sensor.c,9 :: 		ADCON1 = 0x02;   //ONLY A0;A1,A2 As Analog
0x0297	0x3002      	MOVLW      2
0x0298	0x009F      	MOVWF      ADCON1
;Sensor.c,10 :: 		ADC_Init();
0x0299	0x2211      	CALL       _ADC_Init
;Sensor.c,11 :: 		}
L_end_SENSOR_Init:
0x029A	0x0008      	RETURN
; end of _SENSOR_Init
_MOTORS_Right:
;Motors.c,33 :: 		void MOTORS_Right(unsigned short v){
;Motors.c,34 :: 		PWM1_Set_Duty(0);
0x029B	0x1683      	BSF        STATUS, 5
0x029C	0x1303      	BCF        STATUS, 6
0x029D	0x01CE      	CLRF       FARG_PWM1_Set_Duty_new_duty
0x029E	0x2087      	CALL       _PWM1_Set_Duty
;Motors.c,35 :: 		PWM2_Set_Duty(v);
0x029F	0x1683      	BSF        STATUS, 5
0x02A0	0x0846      	MOVF       FARG_MOTORS_Right_v, 0
0x02A1	0x00CE      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x02A2	0x211E      	CALL       _PWM2_Set_Duty
;Motors.c,36 :: 		}
L_end_MOTORS_Right:
0x02A3	0x0008      	RETURN
; end of _MOTORS_Right
_DIRECTION_Read:
;EEPROM.c,11 :: 		unsigned short DIRECTION_Read(){
;EEPROM.c,13 :: 		return EEPROM_Read(DIRECTION);
0x02A4	0x3040      	MOVLW      64
0x02A5	0x1683      	BSF        STATUS, 5
0x02A6	0x1303      	BCF        STATUS, 6
0x02A7	0x00CA      	MOVWF      FARG_EEPROM_Read_Address
0x02A8	0x21B5      	CALL       _EEPROM_Read
;EEPROM.c,14 :: 		}
L_end_DIRECTION_Read:
0x02A9	0x0008      	RETURN
; end of _DIRECTION_Read
_SENSOR_R2:
;Sensor.c,16 :: 		float SENSOR_R2(){
;Sensor.c,17 :: 		return ADC_Read(1);
0x02AA	0x3001      	MOVLW      1
0x02AB	0x1683      	BSF        STATUS, 5
0x02AC	0x1303      	BCF        STATUS, 6
0x02AD	0x00CA      	MOVWF      FARG_ADC_Read_channel
0x02AE	0x2228      	CALL       _ADC_Read
0x02AF	0x2250      	CALL       _word2double
;Sensor.c,18 :: 		}
L_end_SENSOR_R2:
0x02B0	0x0008      	RETURN
; end of _SENSOR_R2
_SENSOR_R1:
;Sensor.c,13 :: 		float SENSOR_R1(){
;Sensor.c,14 :: 		return ADC_Read(0);
0x02B1	0x1683      	BSF        STATUS, 5
0x02B2	0x1303      	BCF        STATUS, 6
0x02B3	0x01CA      	CLRF       FARG_ADC_Read_channel
0x02B4	0x2228      	CALL       _ADC_Read
0x02B5	0x2250      	CALL       _word2double
;Sensor.c,15 :: 		}
L_end_SENSOR_R1:
0x02B6	0x0008      	RETURN
; end of _SENSOR_R1
_strcpy:
;__Lib_CString.c,126 :: 		
;__Lib_CString.c,129 :: 		
0x02B7	0x1683      	BSF        STATUS, 5
0x02B8	0x1303      	BCF        STATUS, 6
0x02B9	0x0846      	MOVF       FARG_strcpy_to, 0
0x02BA	0x00F2      	MOVWF      R2
;__Lib_CString.c,130 :: 		
L_strcpy34:
0x02BB	0x0872      	MOVF       R2, 0
0x02BC	0x00F1      	MOVWF      R1
0x02BD	0x0AF2      	INCF       R2, 1
0x02BE	0x0847      	MOVF       FARG_strcpy_from, 0
0x02BF	0x00F0      	MOVWF      R0
0x02C0	0x0AC7      	INCF       FARG_strcpy_from, 1
0x02C1	0x0870      	MOVF       R0, 0
0x02C2	0x0084      	MOVWF      FSR
0x02C3	0x0800      	MOVF       INDF, 0
0x02C4	0x00F0      	MOVWF      R0
0x02C5	0x0871      	MOVF       R1, 0
0x02C6	0x0084      	MOVWF      FSR
0x02C7	0x0870      	MOVF       R0, 0
0x02C8	0x0080      	MOVWF      INDF
0x02C9	0x0871      	MOVF       R1, 0
0x02CA	0x0084      	MOVWF      FSR
0x02CB	0x0800      	MOVF       INDF, 0
0x02CC	0x1903      	BTFSC      STATUS, 2
0x02CD	0x2ACF      	GOTO       L_strcpy35
;__Lib_CString.c,131 :: 		
0x02CE	0x2ABB      	GOTO       L_strcpy34
L_strcpy35:
;__Lib_CString.c,132 :: 		
0x02CF	0x0846      	MOVF       FARG_strcpy_to, 0
0x02D0	0x00F0      	MOVWF      R0
;__Lib_CString.c,133 :: 		
L_end_strcpy:
0x02D1	0x0008      	RETURN
; end of _strcpy
_SENSOR_R3:
;Sensor.c,19 :: 		float SENSOR_R3(){
;Sensor.c,20 :: 		return ADC_Read(2);
0x02D2	0x3002      	MOVLW      2
0x02D3	0x1683      	BSF        STATUS, 5
0x02D4	0x1303      	BCF        STATUS, 6
0x02D5	0x00CA      	MOVWF      FARG_ADC_Read_channel
0x02D6	0x2228      	CALL       _ADC_Read
0x02D7	0x2250      	CALL       _word2double
;Sensor.c,21 :: 		}
L_end_SENSOR_R3:
0x02D8	0x0008      	RETURN
; end of _SENSOR_R3
_MOTORS_Mill_Around:
;Motors.c,46 :: 		void MOTORS_Mill_Around(){
;Motors.c,48 :: 		MOTORS_Stop();
0x02D9	0x218D      	CALL       _MOTORS_Stop
;Motors.c,50 :: 		PWM1_Set_Duty(0);
0x02DA	0x1683      	BSF        STATUS, 5
0x02DB	0x01CE      	CLRF       FARG_PWM1_Set_Duty_new_duty
0x02DC	0x2087      	CALL       _PWM1_Set_Duty
;Motors.c,51 :: 		PWM2_Set_Duty(255);
0x02DD	0x30FF      	MOVLW      255
0x02DE	0x1683      	BSF        STATUS, 5
0x02DF	0x00CE      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x02E0	0x211E      	CALL       _PWM2_Set_Duty
;Motors.c,52 :: 		PORTC.RC3 = 0;
0x02E1	0x1187      	BCF        PORTC, 3
;Motors.c,53 :: 		PORTC.RC4 = 1;
0x02E2	0x1607      	BSF        PORTC, 4
;Motors.c,54 :: 		Delay_ms(800);
0x02E3	0x3011      	MOVLW      17
0x02E4	0x00FB      	MOVWF      R11
0x02E5	0x303C      	MOVLW      60
0x02E6	0x00FC      	MOVWF      R12
0x02E7	0x30CB      	MOVLW      203
0x02E8	0x00FD      	MOVWF      R13
L_MOTORS_Mill_Around4:
0x02E9	0x0BFD      	DECFSZ     R13, 1
0x02EA	0x2AE9      	GOTO       L_MOTORS_Mill_Around4
0x02EB	0x0BFC      	DECFSZ     R12, 1
0x02EC	0x2AE9      	GOTO       L_MOTORS_Mill_Around4
0x02ED	0x0BFB      	DECFSZ     R11, 1
0x02EE	0x2AE9      	GOTO       L_MOTORS_Mill_Around4
;Motors.c,55 :: 		MOTORS_Stop();
0x02EF	0x218D      	CALL       _MOTORS_Stop
;Motors.c,56 :: 		}
L_end_MOTORS_Mill_Around:
0x02F0	0x0008      	RETURN
; end of _MOTORS_Mill_Around
_MOTORS_Init:
;Motors.c,59 :: 		void MOTORS_Init(){
;Motors.c,60 :: 		TRISC = 0x00; // TRIC C AS OUTPUT
0x02F1	0x1683      	BSF        STATUS, 5
0x02F2	0x1303      	BCF        STATUS, 6
0x02F3	0x0187      	CLRF       TRISC
;Motors.c,61 :: 		TRISD.RD6 = 0; // PIN D6 AS OUTPUT
0x02F4	0x1308      	BCF        TRISD, 6
;Motors.c,62 :: 		TRISD.RD7 = 0; // PIN D7 As OUTPUT
0x02F5	0x1388      	BCF        TRISD, 7
;Motors.c,63 :: 		PWM1_Init(5000);                    // Initialize PWM1 module at 5KHz
0x02F6	0x1283      	BCF        STATUS, 5
0x02F7	0x1412      	BSF        T2CON, 0
0x02F8	0x1092      	BCF        T2CON, 1
0x02F9	0x30C7      	MOVLW      199
0x02FA	0x1683      	BSF        STATUS, 5
0x02FB	0x0092      	MOVWF      PR2
0x02FC	0x227F      	CALL       _PWM1_Init
;Motors.c,64 :: 		PWM2_Init(5000);
0x02FD	0x1412      	BSF        T2CON, 0
0x02FE	0x1092      	BCF        T2CON, 1
0x02FF	0x30C7      	MOVLW      199
0x0300	0x1683      	BSF        STATUS, 5
0x0301	0x0092      	MOVWF      PR2
0x0302	0x21AF      	CALL       _PWM2_Init
;Motors.c,65 :: 		PWM1_Start();
0x0303	0x2266      	CALL       _PWM1_Start
;Motors.c,66 :: 		PWM2_Start();
0x0304	0x2277      	CALL       _PWM2_Start
;Motors.c,67 :: 		MOTOR_Blades(0);
0x0305	0x1683      	BSF        STATUS, 5
0x0306	0x01CA      	CLRF       FARG_MOTOR_Blades_F
0x0307	0x21A3      	CALL       _MOTOR_Blades
;Motors.c,68 :: 		MOTOR_Aspirator(0);
0x0308	0x1683      	BSF        STATUS, 5
0x0309	0x01CA      	CLRF       FARG_MOTOR_Aspirator_F
0x030A	0x2197      	CALL       _MOTOR_Aspirator
;Motors.c,69 :: 		MOTORS_Stop();
0x030B	0x218D      	CALL       _MOTORS_Stop
;Motors.c,71 :: 		}
L_end_MOTORS_Init:
0x030C	0x0008      	RETURN
; end of _MOTORS_Init
_Compare_Double:
;__Lib_MathDouble.c,2053 :: 		
;__Lib_MathDouble.c,2062 :: 		
;__Lib_MathDouble.c,2064 :: 		
0x030D	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.c,2065 :: 		
0x030E	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.c,2067 :: 		
0x030F	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,2068 :: 		
0x0310	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,2069 :: 		
0x0311	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,2070 :: 		
0x0312	0x147A      	BSF        R10, 0
;__Lib_MathDouble.c,2071 :: 		
0x0313	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,2072 :: 		
0x0314	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,2073 :: 		
0x0315	0x14FA      	BSF        R10, 1
;__Lib_MathDouble.c,2075 :: 		
0x0316	0x087A      	MOVF       R10, 0
;__Lib_MathDouble.c,2076 :: 		
0x0317	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2077 :: 		
0x0318	0x2B59      	GOTO       COMPARE_EQU
;__Lib_MathDouble.c,2078 :: 		
0x0319	0x3A03      	XORLW      3
;__Lib_MathDouble.c,2079 :: 		
0x031A	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2080 :: 		
0x031B	0x2B24      	GOTO       COMPARE_NOTZERO
;__Lib_MathDouble.c,2082 :: 		
0x031C	0x187A      	BTFSC      R10, 0
;__Lib_MathDouble.c,2083 :: 		
0x031D	0x2B21      	GOTO       COMPARE_XNOTZERO
;__Lib_MathDouble.c,2085 :: 		
0x031E	0x1FF6      	BTFSS      R6, 7
;__Lib_MathDouble.c,2086 :: 		
0x031F	0x2B57      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2087 :: 		
0x0320	0x2B55      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2088 :: 		
COMPARE_XNOTZERO:
;__Lib_MathDouble.c,2089 :: 		
0x0321	0x1FF2      	BTFSS      R2, 7
;__Lib_MathDouble.c,2090 :: 		
0x0322	0x2B55      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2091 :: 		
0x0323	0x2B57      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2093 :: 		
COMPARE_NOTZERO:
;__Lib_MathDouble.c,2094 :: 		
0x0324	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,2095 :: 		
0x0325	0x3980      	ANDLW      128
;__Lib_MathDouble.c,2096 :: 		
0x0326	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,2097 :: 		
0x0327	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,2099 :: 		
0x0328	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,2100 :: 		
0x0329	0x3980      	ANDLW      128
;__Lib_MathDouble.c,2101 :: 		
0x032A	0x13F6      	BCF        R6, 7
;__Lib_MathDouble.c,2103 :: 		
0x032B	0x067A      	XORWF      R10, 0
;__Lib_MathDouble.c,2104 :: 		
0x032C	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2105 :: 		
0x032D	0x2B32      	GOTO       COMPARE_TESTALL
;__Lib_MathDouble.c,2107 :: 		
0x032E	0x087A      	MOVF       R10, 0
;__Lib_MathDouble.c,2108 :: 		
0x032F	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2109 :: 		
0x0330	0x2B55      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2110 :: 		
0x0331	0x2B57      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2112 :: 		
COMPARE_TESTALL:
;__Lib_MathDouble.c,2113 :: 		
0x0332	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,2114 :: 		
0x0333	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,2115 :: 		
0x0334	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2116 :: 		
0x0335	0x2B39      	GOTO       COMPARE_C1
;__Lib_MathDouble.c,2117 :: 		
0x0336	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2118 :: 		
0x0337	0x2B4D      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2119 :: 		
0x0338	0x2B51      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2120 :: 		
COMPARE_C1:
;__Lib_MathDouble.c,2121 :: 		
0x0339	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,2122 :: 		
0x033A	0x0272      	SUBWF      R2, 0
;__Lib_MathDouble.c,2123 :: 		
0x033B	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2124 :: 		
0x033C	0x2B40      	GOTO       COMPARE_C2
;__Lib_MathDouble.c,2125 :: 		
0x033D	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2126 :: 		
0x033E	0x2B4D      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2127 :: 		
0x033F	0x2B51      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2128 :: 		
COMPARE_C2:
;__Lib_MathDouble.c,2129 :: 		
0x0340	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,2130 :: 		
0x0341	0x0271      	SUBWF      R1, 0
;__Lib_MathDouble.c,2131 :: 		
0x0342	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2132 :: 		
0x0343	0x2B47      	GOTO       COMPARE_C3
;__Lib_MathDouble.c,2133 :: 		
0x0344	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2134 :: 		
0x0345	0x2B4D      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2135 :: 		
0x0346	0x2B51      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2136 :: 		
COMPARE_C3:
;__Lib_MathDouble.c,2137 :: 		
0x0347	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,2138 :: 		
0x0348	0x0270      	SUBWF      R0, 0
;__Lib_MathDouble.c,2139 :: 		
0x0349	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2140 :: 		
0x034A	0x2B59      	GOTO       COMPARE_EQU
;__Lib_MathDouble.c,2141 :: 		
0x034B	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,2142 :: 		
0x034C	0x2B51      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2144 :: 		
GT_FALSE:
;__Lib_MathDouble.c,2145 :: 		
0x034D	0x08FA      	MOVF       R10, 1
;__Lib_MathDouble.c,2146 :: 		
0x034E	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2147 :: 		
0x034F	0x2B57      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2148 :: 		
0x0350	0x2B55      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2149 :: 		
GT_TRUE:
;__Lib_MathDouble.c,2150 :: 		
0x0351	0x08FA      	MOVF       R10, 1
;__Lib_MathDouble.c,2151 :: 		
0x0352	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2152 :: 		
0x0353	0x2B55      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2153 :: 		
0x0354	0x2B57      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2155 :: 		
COMPARE_GT:
;__Lib_MathDouble.c,2158 :: 		
0x0355	0x1403      	BSF        STATUS, 0
;__Lib_MathDouble.c,2159 :: 		
0x0356	0x0008      	RETURN
;__Lib_MathDouble.c,2160 :: 		
COMPARE_LT:
;__Lib_MathDouble.c,2163 :: 		
0x0357	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,2164 :: 		
0x0358	0x0008      	RETURN
;__Lib_MathDouble.c,2165 :: 		
COMPARE_EQU:
;__Lib_MathDouble.c,2168 :: 		
0x0359	0x1403      	BSF        STATUS, 0
;__Lib_MathDouble.c,2169 :: 		
0x035A	0x1503      	BSF        STATUS, 2
;__Lib_MathDouble.c,2170 :: 		
0x035B	0x0008      	RETURN
;__Lib_MathDouble.c,2172 :: 		
L_end_Compare_Double:
0x035C	0x0008      	RETURN
; end of _Compare_Double
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x035D	0x2285      	CALL       _____DoICP
0x035E	0x118A      	BCF        PCLATH, 3
0x035F	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0360	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0361	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0362	0x0AB6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0363	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0364	0x0AB7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0365	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0366	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0367	0x2B5D      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0368	0x0008      	RETURN
; end of ___CC2DW
_LCD_Init_P:
;LCD.c,5 :: 		void LCD_Init_P()
;LCD.c,8 :: 		LCD_Init(); // LCD: Initialize LCD
0x0369	0x21C2      	CALL       _Lcd_Init
;LCD.c,9 :: 		LCD_Cmd(_LCD_CLEAR); // LCD: Clear LCD
0x036A	0x3001      	MOVLW      1
0x036B	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x036C	0x20C0      	CALL       _Lcd_Cmd
;LCD.c,10 :: 		LCD_Cmd(_LCD_CURSOR_OFF); // LCD: Disable Cursor LCD
0x036D	0x300C      	MOVLW      12
0x036E	0x1683      	BSF        STATUS, 5
0x036F	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x0370	0x20C0      	CALL       _Lcd_Cmd
;LCD.c,11 :: 		LED = 1; //
0x0371	0x1407      	BSF        PORTC, 0
;LCD.c,12 :: 		}
L_end_LCD_Init_P:
0x0372	0x0008      	RETURN
; end of _LCD_Init_P
_MOTORS_Left:
;Motors.c,28 :: 		void MOTORS_Left(unsigned short v){
;Motors.c,29 :: 		PWM1_Set_Duty(v);;
0x0373	0x1683      	BSF        STATUS, 5
0x0374	0x1303      	BCF        STATUS, 6
0x0375	0x0846      	MOVF       FARG_MOTORS_Left_v, 0
0x0376	0x00CE      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0377	0x2087      	CALL       _PWM1_Set_Duty
;Motors.c,30 :: 		PWM2_Set_Duty(0);
0x0378	0x1683      	BSF        STATUS, 5
0x0379	0x01CE      	CLRF       FARG_PWM2_Set_Duty_new_duty
0x037A	0x211E      	CALL       _PWM2_Set_Duty
;Motors.c,31 :: 		}
L_end_MOTORS_Left:
0x037B	0x0008      	RETURN
; end of _MOTORS_Left
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x037C	0x2B8E      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x037D	0x3080      	MOVLW      128
0x037E	0x1683      	BSF        STATUS, 5
0x037F	0x1303      	BCF        STATUS, 6
0x0380	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0381	0x2BA1      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0382	0x30C0      	MOVLW      192
0x0383	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0384	0x2BA1      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0385	0x3094      	MOVLW      148
0x0386	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0387	0x2BA1      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0388	0x30D4      	MOVLW      212
0x0389	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x038A	0x2BA1      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x038B	0x3080      	MOVLW      128
0x038C	0x00C6      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x038D	0x2BA1      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x038E	0x1683      	BSF        STATUS, 5
0x038F	0x1303      	BCF        STATUS, 6
0x0390	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x0391	0x3A01      	XORLW      1
0x0392	0x1903      	BTFSC      STATUS, 2
0x0393	0x2B7D      	GOTO       L_Lcd_Out13
0x0394	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x0395	0x3A02      	XORLW      2
0x0396	0x1903      	BTFSC      STATUS, 2
0x0397	0x2B82      	GOTO       L_Lcd_Out14
0x0398	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x0399	0x3A03      	XORLW      3
0x039A	0x1903      	BTFSC      STATUS, 2
0x039B	0x2B85      	GOTO       L_Lcd_Out15
0x039C	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x039D	0x3A04      	XORLW      4
0x039E	0x1903      	BTFSC      STATUS, 2
0x039F	0x2B88      	GOTO       L_Lcd_Out16
0x03A0	0x2B8B      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x03A1	0x0347      	DECF       FARG_Lcd_Out_column, 0
0x03A2	0x00F0      	MOVWF      R0
0x03A3	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x03A4	0x07F0      	ADDWF      R0, 1
0x03A5	0x0870      	MOVF       R0, 0
0x03A6	0x00C6      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x03A7	0x0870      	MOVF       R0, 0
0x03A8	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x03A9	0x20C0      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x03AA	0x1683      	BSF        STATUS, 5
0x03AB	0x1045      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x03AC	0x01C9      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x03AD	0x0849      	MOVF       Lcd_Out_i_L0, 0
0x03AE	0x0748      	ADDWF      FARG_Lcd_Out_text, 0
0x03AF	0x0084      	MOVWF      FSR
0x03B0	0x0800      	MOVF       INDF, 0
0x03B1	0x1903      	BTFSC      STATUS, 2
0x03B2	0x2BBB      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x03B3	0x0849      	MOVF       Lcd_Out_i_L0, 0
0x03B4	0x0748      	ADDWF      FARG_Lcd_Out_text, 0
0x03B5	0x0084      	MOVWF      FSR
0x03B6	0x0800      	MOVF       INDF, 0
0x03B7	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03B8	0x226E      	CALL       _Lcd_Chr_CP
0x03B9	0x0AC9      	INCF       Lcd_Out_i_L0, 1
0x03BA	0x2BAD      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x03BB	0x1445      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x03BC	0x0008      	RETURN
; end of _Lcd_Out
_MOTROS_Start:
;Motors.c,21 :: 		void MOTROS_Start(unsigned short v)
;Motors.c,23 :: 		PWM1_Set_Duty(v);
0x03BD	0x1683      	BSF        STATUS, 5
0x03BE	0x1303      	BCF        STATUS, 6
0x03BF	0x0846      	MOVF       FARG_MOTROS_Start_v, 0
0x03C0	0x00CE      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x03C1	0x2087      	CALL       _PWM1_Set_Duty
;Motors.c,24 :: 		PWM2_Set_Duty(v);
0x03C2	0x1683      	BSF        STATUS, 5
0x03C3	0x0846      	MOVF       FARG_MOTROS_Start_v, 0
0x03C4	0x00CE      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x03C5	0x211E      	CALL       _PWM2_Set_Duty
;Motors.c,25 :: 		}
L_end_MOTROS_Start:
0x03C6	0x0008      	RETURN
; end of _MOTROS_Start
_main:
0x03C7	0x2670      	CALL       1648
;Robot.c,16 :: 		void main() {
;Robot.c,18 :: 		MOTORS_Init();
0x03C8	0x22F1      	CALL       _MOTORS_Init
;Robot.c,19 :: 		LCD_Init_P();
0x03C9	0x2369      	CALL       _LCD_Init_P
;Robot.c,20 :: 		SENSOR_Init();
0x03CA	0x2292      	CALL       _SENSOR_Init
;Robot.c,23 :: 		Speed = SPEED_Read();
0x03CB	0x228C      	CALL       _SPEED_Read
0x03CC	0x0870      	MOVF       R0, 0
0x03CD	0x1303      	BCF        STATUS, 6
0x03CE	0x00B4      	MOVWF      _Speed
;Robot.c,24 :: 		Direction = DIRECTION_Read();
0x03CF	0x22A4      	CALL       _DIRECTION_Read
0x03D0	0x0870      	MOVF       R0, 0
0x03D1	0x1303      	BCF        STATUS, 6
0x03D2	0x00B5      	MOVWF      _Direction
;Robot.c,26 :: 		if (Direction == 0)
0x03D3	0x0870      	MOVF       R0, 0
0x03D4	0x3A00      	XORLW      0
0x03D5	0x1D03      	BTFSS      STATUS, 2
0x03D6	0x2BE1      	GOTO       L_main0
;Robot.c,28 :: 		strcpy(TXT1,"LEFT");
0x03D7	0x30B8      	MOVLW      _TXT1
0x03D8	0x1683      	BSF        STATUS, 5
0x03D9	0x00C6      	MOVWF      FARG_strcpy_to
0x03DA	0x3037      	MOVLW      ?lstr1_Robot
0x03DB	0x00C7      	MOVWF      FARG_strcpy_from
0x03DC	0x22B7      	CALL       _strcpy
;Robot.c,29 :: 		Dn = 1;  // LEFT
0x03DD	0x3001      	MOVLW      1
0x03DE	0x1283      	BCF        STATUS, 5
0x03DF	0x00B6      	MOVWF      _Dn
;Robot.c,30 :: 		}else{
0x03E0	0x2BEA      	GOTO       L_main1
L_main0:
;Robot.c,31 :: 		strcpy(TXT1,"RIGHT");
0x03E1	0x30B8      	MOVLW      _TXT1
0x03E2	0x1683      	BSF        STATUS, 5
0x03E3	0x00C6      	MOVWF      FARG_strcpy_to
0x03E4	0x302E      	MOVLW      ?lstr2_Robot
0x03E5	0x00C7      	MOVWF      FARG_strcpy_from
0x03E6	0x22B7      	CALL       _strcpy
;Robot.c,32 :: 		Dn = 2; // RIGHT
0x03E7	0x3002      	MOVLW      2
0x03E8	0x1283      	BCF        STATUS, 5
0x03E9	0x00B6      	MOVWF      _Dn
;Robot.c,33 :: 		}
L_main1:
;Robot.c,35 :: 		if (Speed == 0)
0x03EA	0x0834      	MOVF       _Speed, 0
0x03EB	0x3A00      	XORLW      0
0x03EC	0x1D03      	BTFSS      STATUS, 2
0x03ED	0x2BF8      	GOTO       L_main2
;Robot.c,37 :: 		strcpy(TXT2,"MIN");
0x03EE	0x30AB      	MOVLW      _TXT2
0x03EF	0x1683      	BSF        STATUS, 5
0x03F0	0x00C6      	MOVWF      FARG_strcpy_to
0x03F1	0x3022      	MOVLW      ?lstr3_Robot
0x03F2	0x00C7      	MOVWF      FARG_strcpy_from
0x03F3	0x22B7      	CALL       _strcpy
;Robot.c,38 :: 		Sd = 80;
0x03F4	0x3050      	MOVLW      80
0x03F5	0x1283      	BCF        STATUS, 5
0x03F6	0x00A1      	MOVWF      _Sd
;Robot.c,40 :: 		}else if (Speed == 1){
0x03F7	0x2C0F      	GOTO       L_main3
L_main2:
0x03F8	0x0834      	MOVF       _Speed, 0
0x03F9	0x3A01      	XORLW      1
0x03FA	0x1D03      	BTFSS      STATUS, 2
0x03FB	0x2C06      	GOTO       L_main4
;Robot.c,42 :: 		strcpy(TXT2,"MOY");
0x03FC	0x30AB      	MOVLW      _TXT2
0x03FD	0x1683      	BSF        STATUS, 5
0x03FE	0x00C6      	MOVWF      FARG_strcpy_to
0x03FF	0x3026      	MOVLW      ?lstr4_Robot
0x0400	0x00C7      	MOVWF      FARG_strcpy_from
0x0401	0x22B7      	CALL       _strcpy
;Robot.c,43 :: 		Sd = 160;
0x0402	0x30A0      	MOVLW      160
0x0403	0x1283      	BCF        STATUS, 5
0x0404	0x00A1      	MOVWF      _Sd
;Robot.c,45 :: 		}else{
0x0405	0x2C0F      	GOTO       L_main5
L_main4:
;Robot.c,46 :: 		strcpy(TXT2,"MAX");
0x0406	0x30AB      	MOVLW      _TXT2
0x0407	0x1683      	BSF        STATUS, 5
0x0408	0x00C6      	MOVWF      FARG_strcpy_to
0x0409	0x302A      	MOVLW      ?lstr5_Robot
0x040A	0x00C7      	MOVWF      FARG_strcpy_from
0x040B	0x22B7      	CALL       _strcpy
;Robot.c,47 :: 		Sd = 255;
0x040C	0x30FF      	MOVLW      255
0x040D	0x1283      	BCF        STATUS, 5
0x040E	0x00A1      	MOVWF      _Sd
;Robot.c,48 :: 		}
L_main5:
L_main3:
;Robot.c,49 :: 		MOTOR_Aspirator(1);
0x040F	0x3001      	MOVLW      1
0x0410	0x1683      	BSF        STATUS, 5
0x0411	0x00CA      	MOVWF      FARG_MOTOR_Aspirator_F
0x0412	0x2197      	CALL       _MOTOR_Aspirator
;Robot.c,50 :: 		MOTOR_Blades(1);
0x0413	0x3001      	MOVLW      1
0x0414	0x1683      	BSF        STATUS, 5
0x0415	0x00CA      	MOVWF      FARG_MOTOR_Blades_F
0x0416	0x21A3      	CALL       _MOTOR_Blades
;Robot.c,52 :: 		for(;;){
L_main6:
;Robot.c,53 :: 		IR1 =  SENSOR_R1();
0x0417	0x22B1      	CALL       _SENSOR_R1
0x0418	0x0870      	MOVF       R0, 0
0x0419	0x1683      	BSF        STATUS, 5
0x041A	0x00B2      	MOVWF      _IR1
0x041B	0x0871      	MOVF       R0+1, 0
0x041C	0x00B3      	MOVWF      _IR1+1
0x041D	0x0872      	MOVF       R0+2, 0
0x041E	0x00B4      	MOVWF      _IR1+2
0x041F	0x0873      	MOVF       R0+3, 0
0x0420	0x00B5      	MOVWF      _IR1+3
;Robot.c,54 :: 		IR2 =  SENSOR_R2();
0x0421	0x22AA      	CALL       _SENSOR_R2
0x0422	0x0870      	MOVF       R0, 0
0x0423	0x1683      	BSF        STATUS, 5
0x0424	0x00AE      	MOVWF      _IR2
0x0425	0x0871      	MOVF       R0+1, 0
0x0426	0x00AF      	MOVWF      _IR2+1
0x0427	0x0872      	MOVF       R0+2, 0
0x0428	0x00B0      	MOVWF      _IR2+2
0x0429	0x0873      	MOVF       R0+3, 0
0x042A	0x00B1      	MOVWF      _IR2+3
;Robot.c,55 :: 		IR3 =  SENSOR_R3();
0x042B	0x22D2      	CALL       _SENSOR_R3
0x042C	0x0870      	MOVF       R0, 0
0x042D	0x1683      	BSF        STATUS, 5
0x042E	0x00BD      	MOVWF      _IR3
0x042F	0x0871      	MOVF       R0+1, 0
0x0430	0x00BE      	MOVWF      _IR3+1
0x0431	0x0872      	MOVF       R0+2, 0
0x0432	0x00BF      	MOVWF      _IR3+2
0x0433	0x0873      	MOVF       R0+3, 0
0x0434	0x00C0      	MOVWF      _IR3+3
;Robot.c,56 :: 		switch (Etat) {
0x0435	0x2DF3      	GOTO       L_main9
;Robot.c,58 :: 		case 0:     // ETAT 0  // INIT
L_main11:
;Robot.c,60 :: 		MOTROS_Start(sd);
0x0436	0x1283      	BCF        STATUS, 5
0x0437	0x0821      	MOVF       _Sd, 0
0x0438	0x1683      	BSF        STATUS, 5
0x0439	0x00C6      	MOVWF      FARG_MOTROS_Start_v
0x043A	0x23BD      	CALL       _MOTROS_Start
;Robot.c,61 :: 		LCD_Out(1,1,"SPEED :");
0x043B	0x3001      	MOVLW      1
0x043C	0x1683      	BSF        STATUS, 5
0x043D	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x043E	0x3001      	MOVLW      1
0x043F	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x0440	0x3054      	MOVLW      ?lstr6_Robot
0x0441	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0442	0x237C      	CALL       _Lcd_Out
;Robot.c,62 :: 		LCD_Out(1,8,TXT1);
0x0443	0x3001      	MOVLW      1
0x0444	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0445	0x3008      	MOVLW      8
0x0446	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x0447	0x30B8      	MOVLW      _TXT1
0x0448	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0449	0x237C      	CALL       _Lcd_Out
;Robot.c,63 :: 		LCD_Out(2,1,"DIRCT :");
0x044A	0x3002      	MOVLW      2
0x044B	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x044C	0x3001      	MOVLW      1
0x044D	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x044E	0x304C      	MOVLW      ?lstr7_Robot
0x044F	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0450	0x237C      	CALL       _Lcd_Out
;Robot.c,64 :: 		LCD_Out(2,8,TXT2);
0x0451	0x3002      	MOVLW      2
0x0452	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0453	0x3008      	MOVLW      8
0x0454	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x0455	0x30AB      	MOVLW      _TXT2
0x0456	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0457	0x237C      	CALL       _Lcd_Out
;Robot.c,66 :: 		if ( IR1 > 600 ){
0x0458	0x0832      	MOVF       _IR1, 0
0x0459	0x00F4      	MOVWF      R4
0x045A	0x0833      	MOVF       _IR1+1, 0
0x045B	0x00F5      	MOVWF      R4+1
0x045C	0x0834      	MOVF       _IR1+2, 0
0x045D	0x00F6      	MOVWF      R4+2
0x045E	0x0835      	MOVF       _IR1+3, 0
0x045F	0x00F7      	MOVWF      R4+3
0x0460	0x3000      	MOVLW      0
0x0461	0x00F0      	MOVWF      R0
0x0462	0x3000      	MOVLW      0
0x0463	0x00F1      	MOVWF      R0+1
0x0464	0x3016      	MOVLW      22
0x0465	0x00F2      	MOVWF      R0+2
0x0466	0x3088      	MOVLW      136
0x0467	0x00F3      	MOVWF      R0+3
0x0468	0x230D      	CALL       _Compare_Double
0x0469	0x3001      	MOVLW      1
0x046A	0x1803      	BTFSC      STATUS, 0
0x046B	0x3000      	MOVLW      0
0x046C	0x00F0      	MOVWF      R0
0x046D	0x0870      	MOVF       R0, 0
0x046E	0x1903      	BTFSC      STATUS, 2
0x046F	0x2CE4      	GOTO       L_main12
;Robot.c,68 :: 		if ((IR2 < 512) && (IR3 < 512)) Etat = 3;
0x0470	0x3000      	MOVLW      0
0x0471	0x00F4      	MOVWF      R4
0x0472	0x3000      	MOVLW      0
0x0473	0x00F5      	MOVWF      R4+1
0x0474	0x3000      	MOVLW      0
0x0475	0x00F6      	MOVWF      R4+2
0x0476	0x3088      	MOVLW      136
0x0477	0x00F7      	MOVWF      R4+3
0x0478	0x1683      	BSF        STATUS, 5
0x0479	0x082E      	MOVF       _IR2, 0
0x047A	0x00F0      	MOVWF      R0
0x047B	0x082F      	MOVF       _IR2+1, 0
0x047C	0x00F1      	MOVWF      R0+1
0x047D	0x0830      	MOVF       _IR2+2, 0
0x047E	0x00F2      	MOVWF      R0+2
0x047F	0x0831      	MOVF       _IR2+3, 0
0x0480	0x00F3      	MOVWF      R0+3
0x0481	0x230D      	CALL       _Compare_Double
0x0482	0x3001      	MOVLW      1
0x0483	0x1803      	BTFSC      STATUS, 0
0x0484	0x3000      	MOVLW      0
0x0485	0x00F0      	MOVWF      R0
0x0486	0x0870      	MOVF       R0, 0
0x0487	0x1903      	BTFSC      STATUS, 2
0x0488	0x2CA5      	GOTO       L_main15
0x0489	0x3000      	MOVLW      0
0x048A	0x00F4      	MOVWF      R4
0x048B	0x3000      	MOVLW      0
0x048C	0x00F5      	MOVWF      R4+1
0x048D	0x3000      	MOVLW      0
0x048E	0x00F6      	MOVWF      R4+2
0x048F	0x3088      	MOVLW      136
0x0490	0x00F7      	MOVWF      R4+3
0x0491	0x1683      	BSF        STATUS, 5
0x0492	0x083D      	MOVF       _IR3, 0
0x0493	0x00F0      	MOVWF      R0
0x0494	0x083E      	MOVF       _IR3+1, 0
0x0495	0x00F1      	MOVWF      R0+1
0x0496	0x083F      	MOVF       _IR3+2, 0
0x0497	0x00F2      	MOVWF      R0+2
0x0498	0x0840      	MOVF       _IR3+3, 0
0x0499	0x00F3      	MOVWF      R0+3
0x049A	0x230D      	CALL       _Compare_Double
0x049B	0x3001      	MOVLW      1
0x049C	0x1803      	BTFSC      STATUS, 0
0x049D	0x3000      	MOVLW      0
0x049E	0x00F0      	MOVWF      R0
0x049F	0x0870      	MOVF       R0, 0
0x04A0	0x1903      	BTFSC      STATUS, 2
0x04A1	0x2CA5      	GOTO       L_main15
L__main40:
0x04A2	0x3003      	MOVLW      3
0x04A3	0x00DC      	MOVWF      _Etat
0x04A4	0x2CDF      	GOTO       L_main16
L_main15:
;Robot.c,69 :: 		else if  (IR3 < 512) Etat = 2;
0x04A5	0x3000      	MOVLW      0
0x04A6	0x00F4      	MOVWF      R4
0x04A7	0x3000      	MOVLW      0
0x04A8	0x00F5      	MOVWF      R4+1
0x04A9	0x3000      	MOVLW      0
0x04AA	0x00F6      	MOVWF      R4+2
0x04AB	0x3088      	MOVLW      136
0x04AC	0x00F7      	MOVWF      R4+3
0x04AD	0x1683      	BSF        STATUS, 5
0x04AE	0x083D      	MOVF       _IR3, 0
0x04AF	0x00F0      	MOVWF      R0
0x04B0	0x083E      	MOVF       _IR3+1, 0
0x04B1	0x00F1      	MOVWF      R0+1
0x04B2	0x083F      	MOVF       _IR3+2, 0
0x04B3	0x00F2      	MOVWF      R0+2
0x04B4	0x0840      	MOVF       _IR3+3, 0
0x04B5	0x00F3      	MOVWF      R0+3
0x04B6	0x230D      	CALL       _Compare_Double
0x04B7	0x3001      	MOVLW      1
0x04B8	0x1803      	BTFSC      STATUS, 0
0x04B9	0x3000      	MOVLW      0
0x04BA	0x00F0      	MOVWF      R0
0x04BB	0x0870      	MOVF       R0, 0
0x04BC	0x1903      	BTFSC      STATUS, 2
0x04BD	0x2CC1      	GOTO       L_main17
0x04BE	0x3002      	MOVLW      2
0x04BF	0x00DC      	MOVWF      _Etat
0x04C0	0x2CDF      	GOTO       L_main18
L_main17:
;Robot.c,70 :: 		else if  (IR2 < 512) Etat = 1;
0x04C1	0x3000      	MOVLW      0
0x04C2	0x00F4      	MOVWF      R4
0x04C3	0x3000      	MOVLW      0
0x04C4	0x00F5      	MOVWF      R4+1
0x04C5	0x3000      	MOVLW      0
0x04C6	0x00F6      	MOVWF      R4+2
0x04C7	0x3088      	MOVLW      136
0x04C8	0x00F7      	MOVWF      R4+3
0x04C9	0x1683      	BSF        STATUS, 5
0x04CA	0x082E      	MOVF       _IR2, 0
0x04CB	0x00F0      	MOVWF      R0
0x04CC	0x082F      	MOVF       _IR2+1, 0
0x04CD	0x00F1      	MOVWF      R0+1
0x04CE	0x0830      	MOVF       _IR2+2, 0
0x04CF	0x00F2      	MOVWF      R0+2
0x04D0	0x0831      	MOVF       _IR2+3, 0
0x04D1	0x00F3      	MOVWF      R0+3
0x04D2	0x230D      	CALL       _Compare_Double
0x04D3	0x3001      	MOVLW      1
0x04D4	0x1803      	BTFSC      STATUS, 0
0x04D5	0x3000      	MOVLW      0
0x04D6	0x00F0      	MOVWF      R0
0x04D7	0x0870      	MOVF       R0, 0
0x04D8	0x1903      	BTFSC      STATUS, 2
0x04D9	0x2CDD      	GOTO       L_main19
0x04DA	0x3001      	MOVLW      1
0x04DB	0x00DC      	MOVWF      _Etat
0x04DC	0x2CDF      	GOTO       L_main20
L_main19:
;Robot.c,71 :: 		else  Etat = 4;
0x04DD	0x3004      	MOVLW      4
0x04DE	0x00DC      	MOVWF      _Etat
L_main20:
L_main18:
L_main16:
;Robot.c,73 :: 		LCD_Cmd(_LCD_CLEAR);
0x04DF	0x3001      	MOVLW      1
0x04E0	0x1683      	BSF        STATUS, 5
0x04E1	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x04E2	0x20C0      	CALL       _Lcd_Cmd
;Robot.c,74 :: 		}
0x04E3	0x2D23      	GOTO       L_main21
L_main12:
;Robot.c,77 :: 		else if ( IR2 > 900){     // LEFT
0x04E4	0x1683      	BSF        STATUS, 5
0x04E5	0x082E      	MOVF       _IR2, 0
0x04E6	0x00F4      	MOVWF      R4
0x04E7	0x082F      	MOVF       _IR2+1, 0
0x04E8	0x00F5      	MOVWF      R4+1
0x04E9	0x0830      	MOVF       _IR2+2, 0
0x04EA	0x00F6      	MOVWF      R4+2
0x04EB	0x0831      	MOVF       _IR2+3, 0
0x04EC	0x00F7      	MOVWF      R4+3
0x04ED	0x3000      	MOVLW      0
0x04EE	0x00F0      	MOVWF      R0
0x04EF	0x3000      	MOVLW      0
0x04F0	0x00F1      	MOVWF      R0+1
0x04F1	0x3061      	MOVLW      97
0x04F2	0x00F2      	MOVWF      R0+2
0x04F3	0x3088      	MOVLW      136
0x04F4	0x00F3      	MOVWF      R0+3
0x04F5	0x230D      	CALL       _Compare_Double
0x04F6	0x3001      	MOVLW      1
0x04F7	0x1803      	BTFSC      STATUS, 0
0x04F8	0x3000      	MOVLW      0
0x04F9	0x00F0      	MOVWF      R0
0x04FA	0x0870      	MOVF       R0, 0
0x04FB	0x1903      	BTFSC      STATUS, 2
0x04FC	0x2D04      	GOTO       L_main22
;Robot.c,79 :: 		Etat = 5;
0x04FD	0x3005      	MOVLW      5
0x04FE	0x00DC      	MOVWF      _Etat
;Robot.c,80 :: 		LCD_Cmd(_LCD_CLEAR);
0x04FF	0x3001      	MOVLW      1
0x0500	0x1683      	BSF        STATUS, 5
0x0501	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x0502	0x20C0      	CALL       _Lcd_Cmd
;Robot.c,81 :: 		}
0x0503	0x2D23      	GOTO       L_main23
L_main22:
;Robot.c,83 :: 		else if (IR3 > 900){     // RIGHT
0x0504	0x1683      	BSF        STATUS, 5
0x0505	0x083D      	MOVF       _IR3, 0
0x0506	0x00F4      	MOVWF      R4
0x0507	0x083E      	MOVF       _IR3+1, 0
0x0508	0x00F5      	MOVWF      R4+1
0x0509	0x083F      	MOVF       _IR3+2, 0
0x050A	0x00F6      	MOVWF      R4+2
0x050B	0x0840      	MOVF       _IR3+3, 0
0x050C	0x00F7      	MOVWF      R4+3
0x050D	0x3000      	MOVLW      0
0x050E	0x00F0      	MOVWF      R0
0x050F	0x3000      	MOVLW      0
0x0510	0x00F1      	MOVWF      R0+1
0x0511	0x3061      	MOVLW      97
0x0512	0x00F2      	MOVWF      R0+2
0x0513	0x3088      	MOVLW      136
0x0514	0x00F3      	MOVWF      R0+3
0x0515	0x230D      	CALL       _Compare_Double
0x0516	0x3001      	MOVLW      1
0x0517	0x1803      	BTFSC      STATUS, 0
0x0518	0x3000      	MOVLW      0
0x0519	0x00F0      	MOVWF      R0
0x051A	0x0870      	MOVF       R0, 0
0x051B	0x1903      	BTFSC      STATUS, 2
0x051C	0x2D23      	GOTO       L_main24
;Robot.c,85 :: 		Etat = 6;
0x051D	0x3006      	MOVLW      6
0x051E	0x00DC      	MOVWF      _Etat
;Robot.c,86 :: 		LCD_Cmd(_LCD_CLEAR);
0x051F	0x3001      	MOVLW      1
0x0520	0x1683      	BSF        STATUS, 5
0x0521	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x0522	0x20C0      	CALL       _Lcd_Cmd
;Robot.c,88 :: 		}
L_main24:
L_main23:
L_main21:
;Robot.c,89 :: 		if (PORTE.RE0)      // CONFIG MODE
0x0523	0x1C09      	BTFSS      PORTE, 0
0x0524	0x2D27      	GOTO       L_main25
;Robot.c,90 :: 		Etat = 7;
0x0525	0x3007      	MOVLW      7
0x0526	0x00DC      	MOVWF      _Etat
L_main25:
;Robot.c,92 :: 		break;
0x0527	0x2E10      	GOTO       L_main10
;Robot.c,94 :: 		case 1:   // ETAT 1   //LEFT
L_main26:
;Robot.c,96 :: 		if ( IR1 > 600 ) {
0x0528	0x1683      	BSF        STATUS, 5
0x0529	0x0832      	MOVF       _IR1, 0
0x052A	0x00F4      	MOVWF      R4
0x052B	0x0833      	MOVF       _IR1+1, 0
0x052C	0x00F5      	MOVWF      R4+1
0x052D	0x0834      	MOVF       _IR1+2, 0
0x052E	0x00F6      	MOVWF      R4+2
0x052F	0x0835      	MOVF       _IR1+3, 0
0x0530	0x00F7      	MOVWF      R4+3
0x0531	0x3000      	MOVLW      0
0x0532	0x00F0      	MOVWF      R0
0x0533	0x3000      	MOVLW      0
0x0534	0x00F1      	MOVWF      R0+1
0x0535	0x3016      	MOVLW      22
0x0536	0x00F2      	MOVWF      R0+2
0x0537	0x3088      	MOVLW      136
0x0538	0x00F3      	MOVWF      R0+3
0x0539	0x230D      	CALL       _Compare_Double
0x053A	0x3001      	MOVLW      1
0x053B	0x1803      	BTFSC      STATUS, 0
0x053C	0x3000      	MOVLW      0
0x053D	0x00F0      	MOVWF      R0
0x053E	0x0870      	MOVF       R0, 0
0x053F	0x1903      	BTFSC      STATUS, 2
0x0540	0x2D51      	GOTO       L_main27
;Robot.c,97 :: 		MOTORS_Left(sd);
0x0541	0x0821      	MOVF       _Sd, 0
0x0542	0x1683      	BSF        STATUS, 5
0x0543	0x00C6      	MOVWF      FARG_MOTORS_Left_v
0x0544	0x2373      	CALL       _MOTORS_Left
;Robot.c,98 :: 		LCD_Out(1,1,"Obstacle R");
0x0545	0x3001      	MOVLW      1
0x0546	0x1683      	BSF        STATUS, 5
0x0547	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0548	0x3001      	MOVLW      1
0x0549	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x054A	0x305D      	MOVLW      ?lstr8_Robot
0x054B	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x054C	0x237C      	CALL       _Lcd_Out
;Robot.c,99 :: 		Led = ~ Led;
0x054D	0x3001      	MOVLW      1
0x054E	0x1283      	BCF        STATUS, 5
0x054F	0x0687      	XORWF      PORTC, 1
;Robot.c,100 :: 		}else{
0x0550	0x2D56      	GOTO       L_main28
L_main27:
;Robot.c,101 :: 		Etat = 0;
0x0551	0x01DC      	CLRF       _Etat
;Robot.c,102 :: 		LCD_Cmd(_LCD_CLEAR);
0x0552	0x3001      	MOVLW      1
0x0553	0x1683      	BSF        STATUS, 5
0x0554	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x0555	0x20C0      	CALL       _Lcd_Cmd
;Robot.c,103 :: 		}
L_main28:
;Robot.c,105 :: 		break;
0x0556	0x2E10      	GOTO       L_main10
;Robot.c,107 :: 		case 2: // ETAT 2  //RIGHT
L_main29:
;Robot.c,109 :: 		if ( IR1 > 600 ) {
0x0557	0x1683      	BSF        STATUS, 5
0x0558	0x0832      	MOVF       _IR1, 0
0x0559	0x00F4      	MOVWF      R4
0x055A	0x0833      	MOVF       _IR1+1, 0
0x055B	0x00F5      	MOVWF      R4+1
0x055C	0x0834      	MOVF       _IR1+2, 0
0x055D	0x00F6      	MOVWF      R4+2
0x055E	0x0835      	MOVF       _IR1+3, 0
0x055F	0x00F7      	MOVWF      R4+3
0x0560	0x3000      	MOVLW      0
0x0561	0x00F0      	MOVWF      R0
0x0562	0x3000      	MOVLW      0
0x0563	0x00F1      	MOVWF      R0+1
0x0564	0x3016      	MOVLW      22
0x0565	0x00F2      	MOVWF      R0+2
0x0566	0x3088      	MOVLW      136
0x0567	0x00F3      	MOVWF      R0+3
0x0568	0x230D      	CALL       _Compare_Double
0x0569	0x3001      	MOVLW      1
0x056A	0x1803      	BTFSC      STATUS, 0
0x056B	0x3000      	MOVLW      0
0x056C	0x00F0      	MOVWF      R0
0x056D	0x0870      	MOVF       R0, 0
0x056E	0x1903      	BTFSC      STATUS, 2
0x056F	0x2D80      	GOTO       L_main30
;Robot.c,110 :: 		MOTORS_Right(sd);
0x0570	0x0821      	MOVF       _Sd, 0
0x0571	0x1683      	BSF        STATUS, 5
0x0572	0x00C6      	MOVWF      FARG_MOTORS_Right_v
0x0573	0x229B      	CALL       _MOTORS_Right
;Robot.c,111 :: 		LCD_Out(1,1,"Obstacle L");
0x0574	0x3001      	MOVLW      1
0x0575	0x1683      	BSF        STATUS, 5
0x0576	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0577	0x3001      	MOVLW      1
0x0578	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x0579	0x30A0      	MOVLW      ?lstr9_Robot
0x057A	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x057B	0x237C      	CALL       _Lcd_Out
;Robot.c,112 :: 		Led = ~ Led;
0x057C	0x3001      	MOVLW      1
0x057D	0x1283      	BCF        STATUS, 5
0x057E	0x0687      	XORWF      PORTC, 1
;Robot.c,113 :: 		}else{
0x057F	0x2D85      	GOTO       L_main31
L_main30:
;Robot.c,114 :: 		Etat = 0;
0x0580	0x01DC      	CLRF       _Etat
;Robot.c,115 :: 		LCD_Cmd(_LCD_CLEAR);
0x0581	0x3001      	MOVLW      1
0x0582	0x1683      	BSF        STATUS, 5
0x0583	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x0584	0x20C0      	CALL       _Lcd_Cmd
;Robot.c,116 :: 		}
L_main31:
;Robot.c,118 :: 		break;
0x0585	0x2E10      	GOTO       L_main10
;Robot.c,120 :: 		case 3:  // ETAT 3  //SELECT BY USER
L_main32:
;Robot.c,122 :: 		if (Dn  == 1) Etat = 1;  //LEFT
0x0586	0x0836      	MOVF       _Dn, 0
0x0587	0x3A01      	XORLW      1
0x0588	0x1D03      	BTFSS      STATUS, 2
0x0589	0x2D8D      	GOTO       L_main33
0x058A	0x3001      	MOVLW      1
0x058B	0x00DC      	MOVWF      _Etat
0x058C	0x2D8F      	GOTO       L_main34
L_main33:
;Robot.c,123 :: 		else Etat = 2;          //RIGHT
0x058D	0x3002      	MOVLW      2
0x058E	0x00DC      	MOVWF      _Etat
L_main34:
;Robot.c,125 :: 		break;
0x058F	0x2E10      	GOTO       L_main10
;Robot.c,128 :: 		case 4:  // ETAT 4 # RETURN ARROUND
L_main35:
;Robot.c,130 :: 		LCD_Out(1,1,"Around");
0x0590	0x3001      	MOVLW      1
0x0591	0x1683      	BSF        STATUS, 5
0x0592	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0593	0x3001      	MOVLW      1
0x0594	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x0595	0x3068      	MOVLW      ?lstr10_Robot
0x0596	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0597	0x237C      	CALL       _Lcd_Out
;Robot.c,131 :: 		MOTORS_Mill_Around();
0x0598	0x22D9      	CALL       _MOTORS_Mill_Around
;Robot.c,132 :: 		Etat = 0;
0x0599	0x01DC      	CLRF       _Etat
;Robot.c,133 :: 		LCD_Cmd(_LCD_CLEAR);
0x059A	0x3001      	MOVLW      1
0x059B	0x1683      	BSF        STATUS, 5
0x059C	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x059D	0x20C0      	CALL       _Lcd_Cmd
;Robot.c,135 :: 		break;
0x059E	0x2E10      	GOTO       L_main10
;Robot.c,138 :: 		case 5:    // ETAT 5 #SKIP LEFT
L_main36:
;Robot.c,140 :: 		MOTORS_Left(sd);
0x059F	0x0821      	MOVF       _Sd, 0
0x05A0	0x1683      	BSF        STATUS, 5
0x05A1	0x00C6      	MOVWF      FARG_MOTORS_Left_v
0x05A2	0x2373      	CALL       _MOTORS_Left
;Robot.c,141 :: 		LCD_Out(1,1,"Skip L");
0x05A3	0x3001      	MOVLW      1
0x05A4	0x1683      	BSF        STATUS, 5
0x05A5	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x05A6	0x3001      	MOVLW      1
0x05A7	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x05A8	0x3045      	MOVLW      ?lstr11_Robot
0x05A9	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x05AA	0x237C      	CALL       _Lcd_Out
;Robot.c,142 :: 		if (IR2 < 512){
0x05AB	0x3000      	MOVLW      0
0x05AC	0x00F4      	MOVWF      R4
0x05AD	0x3000      	MOVLW      0
0x05AE	0x00F5      	MOVWF      R4+1
0x05AF	0x3000      	MOVLW      0
0x05B0	0x00F6      	MOVWF      R4+2
0x05B1	0x3088      	MOVLW      136
0x05B2	0x00F7      	MOVWF      R4+3
0x05B3	0x082E      	MOVF       _IR2, 0
0x05B4	0x00F0      	MOVWF      R0
0x05B5	0x082F      	MOVF       _IR2+1, 0
0x05B6	0x00F1      	MOVWF      R0+1
0x05B7	0x0830      	MOVF       _IR2+2, 0
0x05B8	0x00F2      	MOVWF      R0+2
0x05B9	0x0831      	MOVF       _IR2+3, 0
0x05BA	0x00F3      	MOVWF      R0+3
0x05BB	0x230D      	CALL       _Compare_Double
0x05BC	0x3001      	MOVLW      1
0x05BD	0x1803      	BTFSC      STATUS, 0
0x05BE	0x3000      	MOVLW      0
0x05BF	0x00F0      	MOVWF      R0
0x05C0	0x0870      	MOVF       R0, 0
0x05C1	0x1903      	BTFSC      STATUS, 2
0x05C2	0x2DC8      	GOTO       L_main37
;Robot.c,143 :: 		Etat = 0;
0x05C3	0x01DC      	CLRF       _Etat
;Robot.c,144 :: 		LCD_Cmd(_LCD_CLEAR);
0x05C4	0x3001      	MOVLW      1
0x05C5	0x1683      	BSF        STATUS, 5
0x05C6	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x05C7	0x20C0      	CALL       _Lcd_Cmd
;Robot.c,145 :: 		}
L_main37:
;Robot.c,147 :: 		break;
0x05C8	0x2E10      	GOTO       L_main10
;Robot.c,151 :: 		case 6:   // ETAT 6 #SKIP RIGHT
L_main38:
;Robot.c,152 :: 		MOTORS_Right(sd);
0x05C9	0x0821      	MOVF       _Sd, 0
0x05CA	0x1683      	BSF        STATUS, 5
0x05CB	0x00C6      	MOVWF      FARG_MOTORS_Right_v
0x05CC	0x229B      	CALL       _MOTORS_Right
;Robot.c,153 :: 		LCD_Out(1,1,"Skip R");
0x05CD	0x3001      	MOVLW      1
0x05CE	0x1683      	BSF        STATUS, 5
0x05CF	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x05D0	0x3001      	MOVLW      1
0x05D1	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x05D2	0x303C      	MOVLW      ?lstr12_Robot
0x05D3	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x05D4	0x237C      	CALL       _Lcd_Out
;Robot.c,154 :: 		if (IR3 < 512){
0x05D5	0x3000      	MOVLW      0
0x05D6	0x00F4      	MOVWF      R4
0x05D7	0x3000      	MOVLW      0
0x05D8	0x00F5      	MOVWF      R4+1
0x05D9	0x3000      	MOVLW      0
0x05DA	0x00F6      	MOVWF      R4+2
0x05DB	0x3088      	MOVLW      136
0x05DC	0x00F7      	MOVWF      R4+3
0x05DD	0x083D      	MOVF       _IR3, 0
0x05DE	0x00F0      	MOVWF      R0
0x05DF	0x083E      	MOVF       _IR3+1, 0
0x05E0	0x00F1      	MOVWF      R0+1
0x05E1	0x083F      	MOVF       _IR3+2, 0
0x05E2	0x00F2      	MOVWF      R0+2
0x05E3	0x0840      	MOVF       _IR3+3, 0
0x05E4	0x00F3      	MOVWF      R0+3
0x05E5	0x230D      	CALL       _Compare_Double
0x05E6	0x3001      	MOVLW      1
0x05E7	0x1803      	BTFSC      STATUS, 0
0x05E8	0x3000      	MOVLW      0
0x05E9	0x00F0      	MOVWF      R0
0x05EA	0x0870      	MOVF       R0, 0
0x05EB	0x1903      	BTFSC      STATUS, 2
0x05EC	0x2DF2      	GOTO       L_main39
;Robot.c,155 :: 		Etat = 0;
0x05ED	0x01DC      	CLRF       _Etat
;Robot.c,156 :: 		LCD_Cmd(_LCD_CLEAR);
0x05EE	0x3001      	MOVLW      1
0x05EF	0x1683      	BSF        STATUS, 5
0x05F0	0x00CE      	MOVWF      FARG_Lcd_Cmd_out_char
0x05F1	0x20C0      	CALL       _Lcd_Cmd
;Robot.c,157 :: 		}
L_main39:
;Robot.c,159 :: 		break;
0x05F2	0x2E10      	GOTO       L_main10
;Robot.c,162 :: 		}
L_main9:
0x05F3	0x1283      	BCF        STATUS, 5
0x05F4	0x085C      	MOVF       _Etat, 0
0x05F5	0x3A00      	XORLW      0
0x05F6	0x1903      	BTFSC      STATUS, 2
0x05F7	0x2C36      	GOTO       L_main11
0x05F8	0x085C      	MOVF       _Etat, 0
0x05F9	0x3A01      	XORLW      1
0x05FA	0x1903      	BTFSC      STATUS, 2
0x05FB	0x2D28      	GOTO       L_main26
0x05FC	0x085C      	MOVF       _Etat, 0
0x05FD	0x3A02      	XORLW      2
0x05FE	0x1903      	BTFSC      STATUS, 2
0x05FF	0x2D57      	GOTO       L_main29
0x0600	0x085C      	MOVF       _Etat, 0
0x0601	0x3A03      	XORLW      3
0x0602	0x1903      	BTFSC      STATUS, 2
0x0603	0x2D86      	GOTO       L_main32
0x0604	0x085C      	MOVF       _Etat, 0
0x0605	0x3A04      	XORLW      4
0x0606	0x1903      	BTFSC      STATUS, 2
0x0607	0x2D90      	GOTO       L_main35
0x0608	0x085C      	MOVF       _Etat, 0
0x0609	0x3A05      	XORLW      5
0x060A	0x1903      	BTFSC      STATUS, 2
0x060B	0x2D9F      	GOTO       L_main36
0x060C	0x085C      	MOVF       _Etat, 0
0x060D	0x3A06      	XORLW      6
0x060E	0x1903      	BTFSC      STATUS, 2
0x060F	0x2DC9      	GOTO       L_main38
L_main10:
;Robot.c,165 :: 		};
0x0610	0x2C17      	GOTO       L_main6
;Robot.c,169 :: 		}
L_end_main:
0x0611	0x2E11      	GOTO       $+0
; end of _main
0x0670	0x3021      	MOVLW      33
0x0671	0x0084      	MOVWF      FSR
0x0672	0x304E      	MOVLW      78
0x0673	0x1283      	BCF        STATUS, 5
0x0674	0x1303      	BCF        STATUS, 6
0x0675	0x00F0      	MOVWF      R0
0x0676	0x3017      	MOVLW      23
0x0677	0x1683      	BSF        STATUS, 5
0x0678	0x00B6      	MOVWF      ___DoICPAddr
0x0679	0x3006      	MOVLW      6
0x067A	0x00B7      	MOVWF      183
0x067B	0x235D      	CALL       861
0x067C	0x30A0      	MOVLW      160
0x067D	0x0084      	MOVWF      FSR
0x067E	0x300B      	MOVLW      11
0x067F	0x1283      	BCF        STATUS, 5
0x0680	0x00F0      	MOVWF      R0
0x0681	0x3065      	MOVLW      101
0x0682	0x1683      	BSF        STATUS, 5
0x0683	0x00B6      	MOVWF      ___DoICPAddr
0x0684	0x3006      	MOVLW      6
0x0685	0x00B7      	MOVWF      183
0x0686	0x235D      	CALL       861
0x0687	0x0008      	RETURN
;Robot.c,0 :: ?ICS_Sd
0x0617	0x3400 ;?ICS_Sd+0
; end of ?ICS_Sd
;Robot.c,0 :: ?ICS?lstr3_Robot
0x0618	0x344D ;?ICS?lstr3_Robot+0
0x0619	0x3449 ;?ICS?lstr3_Robot+1
0x061A	0x344E ;?ICS?lstr3_Robot+2
0x061B	0x3400 ;?ICS?lstr3_Robot+3
; end of ?ICS?lstr3_Robot
;Robot.c,0 :: ?ICS?lstr4_Robot
0x061C	0x344D ;?ICS?lstr4_Robot+0
0x061D	0x344F ;?ICS?lstr4_Robot+1
0x061E	0x3459 ;?ICS?lstr4_Robot+2
0x061F	0x3400 ;?ICS?lstr4_Robot+3
; end of ?ICS?lstr4_Robot
;Robot.c,0 :: ?ICS?lstr5_Robot
0x0620	0x344D ;?ICS?lstr5_Robot+0
0x0621	0x3441 ;?ICS?lstr5_Robot+1
0x0622	0x3458 ;?ICS?lstr5_Robot+2
0x0623	0x3400 ;?ICS?lstr5_Robot+3
; end of ?ICS?lstr5_Robot
;Robot.c,0 :: ?ICS?lstr2_Robot
0x0624	0x3452 ;?ICS?lstr2_Robot+0
0x0625	0x3449 ;?ICS?lstr2_Robot+1
0x0626	0x3447 ;?ICS?lstr2_Robot+2
0x0627	0x3448 ;?ICS?lstr2_Robot+3
0x0628	0x3454 ;?ICS?lstr2_Robot+4
0x0629	0x3400 ;?ICS?lstr2_Robot+5
; end of ?ICS?lstr2_Robot
;Robot.c,0 :: ?ICS_Speed
0x062A	0x3400 ;?ICS_Speed+0
; end of ?ICS_Speed
;Robot.c,0 :: ?ICS_Direction
0x062B	0x3400 ;?ICS_Direction+0
; end of ?ICS_Direction
;Robot.c,0 :: ?ICS_Dn
0x062C	0x3400 ;?ICS_Dn+0
; end of ?ICS_Dn
;Robot.c,0 :: ?ICS?lstr1_Robot
0x062D	0x344C ;?ICS?lstr1_Robot+0
0x062E	0x3445 ;?ICS?lstr1_Robot+1
0x062F	0x3446 ;?ICS?lstr1_Robot+2
0x0630	0x3454 ;?ICS?lstr1_Robot+3
0x0631	0x3400 ;?ICS?lstr1_Robot+4
; end of ?ICS?lstr1_Robot
;Robot.c,0 :: ?ICS?lstr12_Robot
0x0632	0x3453 ;?ICS?lstr12_Robot+0
0x0633	0x346B ;?ICS?lstr12_Robot+1
0x0634	0x3469 ;?ICS?lstr12_Robot+2
0x0635	0x3470 ;?ICS?lstr12_Robot+3
0x0636	0x3420 ;?ICS?lstr12_Robot+4
0x0637	0x3452 ;?ICS?lstr12_Robot+5
0x0638	0x3400 ;?ICS?lstr12_Robot+6
; end of ?ICS?lstr12_Robot
;Sensor.c,0 :: ?ICS_INT_NUM
0x0639	0x3400 ;?ICS_INT_NUM+0
; end of ?ICS_INT_NUM
;__Lib_ADC_A_C.c,0 :: ?ICS_vref_mask
0x063A	0x340F ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
;Robot.c,0 :: ?ICS?lstr11_Robot
0x063B	0x3453 ;?ICS?lstr11_Robot+0
0x063C	0x346B ;?ICS?lstr11_Robot+1
0x063D	0x3469 ;?ICS?lstr11_Robot+2
0x063E	0x3470 ;?ICS?lstr11_Robot+3
0x063F	0x3420 ;?ICS?lstr11_Robot+4
0x0640	0x344C ;?ICS?lstr11_Robot+5
0x0641	0x3400 ;?ICS?lstr11_Robot+6
; end of ?ICS?lstr11_Robot
;Robot.c,0 :: ?ICS?lstr7_Robot
0x0642	0x3444 ;?ICS?lstr7_Robot+0
0x0643	0x3449 ;?ICS?lstr7_Robot+1
0x0644	0x3452 ;?ICS?lstr7_Robot+2
0x0645	0x3443 ;?ICS?lstr7_Robot+3
0x0646	0x3454 ;?ICS?lstr7_Robot+4
0x0647	0x3420 ;?ICS?lstr7_Robot+5
0x0648	0x343A ;?ICS?lstr7_Robot+6
0x0649	0x3400 ;?ICS?lstr7_Robot+7
; end of ?ICS?lstr7_Robot
;Robot.c,0 :: ?ICS?lstr6_Robot
0x064A	0x3453 ;?ICS?lstr6_Robot+0
0x064B	0x3450 ;?ICS?lstr6_Robot+1
0x064C	0x3445 ;?ICS?lstr6_Robot+2
0x064D	0x3445 ;?ICS?lstr6_Robot+3
0x064E	0x3444 ;?ICS?lstr6_Robot+4
0x064F	0x3420 ;?ICS?lstr6_Robot+5
0x0650	0x343A ;?ICS?lstr6_Robot+6
0x0651	0x3400 ;?ICS?lstr6_Robot+7
; end of ?ICS?lstr6_Robot
;Robot.c,0 :: ?ICS_Etat
0x0652	0x3400 ;?ICS_Etat+0
; end of ?ICS_Etat
;Robot.c,0 :: ?ICS?lstr8_Robot
0x0653	0x344F ;?ICS?lstr8_Robot+0
0x0654	0x3462 ;?ICS?lstr8_Robot+1
0x0655	0x3473 ;?ICS?lstr8_Robot+2
0x0656	0x3474 ;?ICS?lstr8_Robot+3
0x0657	0x3461 ;?ICS?lstr8_Robot+4
0x0658	0x3463 ;?ICS?lstr8_Robot+5
0x0659	0x346C ;?ICS?lstr8_Robot+6
0x065A	0x3465 ;?ICS?lstr8_Robot+7
0x065B	0x3420 ;?ICS?lstr8_Robot+8
0x065C	0x3452 ;?ICS?lstr8_Robot+9
0x065D	0x3400 ;?ICS?lstr8_Robot+10
; end of ?ICS?lstr8_Robot
;Robot.c,0 :: ?ICS?lstr10_Robot
0x065E	0x3441 ;?ICS?lstr10_Robot+0
0x065F	0x3472 ;?ICS?lstr10_Robot+1
0x0660	0x346F ;?ICS?lstr10_Robot+2
0x0661	0x3475 ;?ICS?lstr10_Robot+3
0x0662	0x346E ;?ICS?lstr10_Robot+4
0x0663	0x3464 ;?ICS?lstr10_Robot+5
0x0664	0x3400 ;?ICS?lstr10_Robot+6
; end of ?ICS?lstr10_Robot
;Robot.c,0 :: ?ICS?lstr9_Robot
0x0665	0x344F ;?ICS?lstr9_Robot+0
0x0666	0x3462 ;?ICS?lstr9_Robot+1
0x0667	0x3473 ;?ICS?lstr9_Robot+2
0x0668	0x3474 ;?ICS?lstr9_Robot+3
0x0669	0x3461 ;?ICS?lstr9_Robot+4
0x066A	0x3463 ;?ICS?lstr9_Robot+5
0x066B	0x346C ;?ICS?lstr9_Robot+6
0x066C	0x3465 ;?ICS?lstr9_Robot+7
0x066D	0x3420 ;?ICS?lstr9_Robot+8
0x066E	0x344C ;?ICS?lstr9_Robot+9
0x066F	0x3400 ;?ICS?lstr9_Robot+10
; end of ?ICS?lstr9_Robot
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [41]    _interrupt
0x002D       [7]    _RES032
0x0034      [12]    _SETFUN32
0x0040       [8]    _Delay_50us
0x0048      [43]    _Mul_16X16_U
0x0073       [4]    _FIXSIGN32
0x0077       [5]    _Delay_1us
0x007C      [11]    _Delay_5500us
0x0087      [57]    _PWM1_Set_Duty
0x00C0      [94]    _Lcd_Cmd
0x011E      [57]    _PWM2_Set_Duty
0x0157       [7]    _Delay_22us
0x015E      [47]    _NRM3232
0x018D      [10]    _MOTORS_Stop
0x0197      [12]    _MOTOR_Aspirator
0x01A3      [12]    _MOTOR_Blades
0x01AF       [6]    _PWM2_Init
0x01B5      [13]    _EEPROM_Read
0x01C2      [79]    _Lcd_Init
0x0211      [23]    _ADC_Init
0x0228      [40]    _ADC_Read
0x0250      [22]    _word2double
0x0266       [8]    _PWM1_Start
0x026E       [9]    _Lcd_Chr_CP
0x0277       [8]    _PWM2_Start
0x027F       [6]    _PWM1_Init
0x0285       [7]    _____DoICP
0x028C       [6]    _SPEED_Read
0x0292       [9]    _SENSOR_Init
0x029B       [9]    _MOTORS_Right
0x02A4       [6]    _DIRECTION_Read
0x02AA       [7]    _SENSOR_R2
0x02B1       [6]    _SENSOR_R1
0x02B7      [27]    _strcpy
0x02D2       [7]    _SENSOR_R3
0x02D9      [24]    _MOTORS_Mill_Around
0x02F1      [28]    _MOTORS_Init
0x030D      [80]    _Compare_Double
0x035D      [12]    ___CC2DW
0x0369      [10]    _LCD_Init_P
0x0373       [9]    _MOTORS_Left
0x037C      [65]    _Lcd_Out
0x03BD      [10]    _MOTROS_Start
0x03C7     [586]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0007       [0]    LED
0x0007       [0]    LED
0x0008       [0]    RD4_bit
0x0008       [0]    RD1_bit
0x0008       [0]    RD2_bit
0x0008       [0]    RD3_bit
0x0008       [0]    RD0_bit
0x0008       [0]    RD5_bit
0x0008       [0]    LCD_RS
0x0008       [0]    LCD_D4
0x0008       [0]    LCD_D7
0x0008       [0]    LCD_D6
0x0008       [0]    LCD_D5
0x0008       [1]    PORTD
0x0008       [0]    LCD_EN
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x001B       [1]    CCPR2L
0x001D       [1]    CCP2CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [1]    __math_tempbD
0x0021       [1]    _Sd
0x0022       [4]    ?lstr3_Robot
0x0026       [4]    ?lstr4_Robot
0x002A       [4]    ?lstr5_Robot
0x002E       [6]    ?lstr2_Robot
0x0034       [1]    _Speed
0x0035       [1]    _Direction
0x0036       [1]    _Dn
0x0037       [5]    ?lstr1_Robot
0x003C       [7]    ?lstr12_Robot
0x0043       [1]    _INT_NUM
0x0044       [1]    _vref_mask
0x0045       [7]    ?lstr11_Robot
0x004C       [8]    ?lstr7_Robot
0x0054       [8]    ?lstr6_Robot
0x005C       [1]    _Etat
0x005D      [11]    ?lstr8_Robot
0x0068       [7]    ?lstr10_Robot
0x006F       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0087       [1]    TRISC
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC2_bit
0x0088       [0]    LCD_D5_Direction
0x0088       [0]    LCD_D6_Direction
0x0088       [0]    LCD_D7_Direction
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    TRISD0_bit
0x0088       [0]    LCD_RS_Direction
0x0088       [0]    LCD_D4_Direction
0x0088       [0]    TRISD1_bit
0x0088       [0]    LCD_EN_Direction
0x0088       [0]    TRISD5_bit
0x0088       [0]    TRISD4_bit
0x0088       [1]    TRISD
0x0092       [1]    PR2
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x00A0      [11]    ?lstr9_Robot
0x00AB       [3]    _TXT2
0x00AE       [4]    _IR2
0x00B2       [4]    _IR1
0x00B6       [2]    ___DoICPAddr
0x00B8       [5]    _TXT1
0x00BD       [4]    _IR3
0x00C1       [1]    ___saveSTATUS
0x00C2       [3]    _ADC_Get_Sample_Ptr
0x00C5       [0]    __Lib_Lcd_cmd_status
0x00C6       [1]    FARG_strcpy_to
0x00C6       [1]    FARG_MOTORS_Right_v
0x00C6       [1]    FARG_Lcd_Out_row
0x00C6       [1]    FARG_MOTROS_Start_v
0x00C6       [1]    FARG_MOTORS_Left_v
0x00C7       [1]    FARG_Lcd_Out_column
0x00C7       [1]    FARG_strcpy_from
0x00C8       [1]    FARG_Lcd_Out_text
0x00C9       [1]    Lcd_Out_i_L0
0x00CA       [1]    FARG_MOTOR_Blades_F
0x00CA       [1]    FARG_Lcd_Chr_CP_out_char
0x00CA       [4]    FARG_PWM1_Init_PWM_Freq
0x00CA       [4]    FARG_PWM2_Init_PWM_Freq
0x00CA       [1]    FARG_MOTOR_Aspirator_F
0x00CA       [1]    FARG_EEPROM_Read_Address
0x00CA       [1]    FARG_ADC_Read_channel
0x00CE       [1]    FARG_PWM1_Set_Duty_new_duty
0x00CE       [1]    FARG_Lcd_Cmd_out_char
0x00CE       [1]    FARG_PWM2_Set_Duty_new_duty
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x018C       [1]    EECON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0617       [1]    ?ICS_Sd
0x0618       [4]    ?ICS?lstr3_Robot
0x061C       [4]    ?ICS?lstr4_Robot
0x0620       [4]    ?ICS?lstr5_Robot
0x0624       [6]    ?ICS?lstr2_Robot
0x062A       [1]    ?ICS_Speed
0x062B       [1]    ?ICS_Direction
0x062C       [1]    ?ICS_Dn
0x062D       [5]    ?ICS?lstr1_Robot
0x0632       [7]    ?ICS?lstr12_Robot
0x0639       [1]    ?ICS_INT_NUM
0x063A       [1]    ?ICS_vref_mask
0x063B       [7]    ?ICS?lstr11_Robot
0x0642       [8]    ?ICS?lstr7_Robot
0x064A       [8]    ?ICS?lstr6_Robot
0x0652       [1]    ?ICS_Etat
0x0653      [11]    ?ICS?lstr8_Robot
0x065E       [7]    ?ICS?lstr10_Robot
0x0665      [11]    ?ICS?lstr9_Robot
