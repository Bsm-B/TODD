;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 07/05/2019 20:20:44
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x158A      	BSF        PCLATH, 3
0x0001	0x2800      	GOTO       2048
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00EF      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x1683      	BSF        STATUS, 5
0x000A	0x00DC      	MOVWF      ___savePCLATH
0x000B	0x018A      	CLRF       PCLATH
;Robot.c,368 :: 		void interrupt (void) {
;Robot.c,370 :: 		if(INTCON.INTF){
0x000C	0x1C8B      	BTFSS      INTCON, 1
0x000D	0x2812      	GOTO       L_interrupt87
;Robot.c,371 :: 		Flag = 3;
0x000E	0x3003      	MOVLW      3
0x000F	0x1283      	BCF        STATUS, 5
0x0010	0x00C1      	MOVWF      _Flag
;Robot.c,373 :: 		INTCON.INTF = 0;   //REST
0x0011	0x108B      	BCF        INTCON, 1
;Robot.c,374 :: 		}
L_interrupt87:
;Robot.c,376 :: 		if (INTCON.RBIF){
0x0012	0x1C0B      	BTFSS      INTCON, 0
0x0013	0x2826      	GOTO       L_interrupt88
;Robot.c,378 :: 		if (PORTB.RB4){
0x0014	0x1283      	BCF        STATUS, 5
0x0015	0x1E06      	BTFSS      PORTB, 4
0x0016	0x2819      	GOTO       L_interrupt89
;Robot.c,379 :: 		Flag = 1;
0x0017	0x3001      	MOVLW      1
0x0018	0x00C1      	MOVWF      _Flag
;Robot.c,381 :: 		}
L_interrupt89:
;Robot.c,382 :: 		if (PORTB.RB5){
0x0019	0x1E86      	BTFSS      PORTB, 5
0x001A	0x281D      	GOTO       L_interrupt90
;Robot.c,383 :: 		Flag = 3;
0x001B	0x3003      	MOVLW      3
0x001C	0x00C1      	MOVWF      _Flag
;Robot.c,385 :: 		}
L_interrupt90:
;Robot.c,386 :: 		if (PORTB.RB6){
0x001D	0x1F06      	BTFSS      PORTB, 6
0x001E	0x2821      	GOTO       L_interrupt91
;Robot.c,387 :: 		Flag = 3;
0x001F	0x3003      	MOVLW      3
0x0020	0x00C1      	MOVWF      _Flag
;Robot.c,389 :: 		}
L_interrupt91:
;Robot.c,390 :: 		if (PORTB.RB7){
0x0021	0x1F86      	BTFSS      PORTB, 7
0x0022	0x2825      	GOTO       L_interrupt92
;Robot.c,391 :: 		Flag = 2;
0x0023	0x3002      	MOVLW      2
0x0024	0x00C1      	MOVWF      _Flag
;Robot.c,393 :: 		}
L_interrupt92:
;Robot.c,394 :: 		INTCON.RBIF  = 0; //REST INTERRUPT
0x0025	0x100B      	BCF        INTCON, 0
;Robot.c,395 :: 		}
L_interrupt88:
;Robot.c,397 :: 		}
L_end_interrupt:
L__interrupt96:
0x0026	0x1683      	BSF        STATUS, 5
0x0027	0x085C      	MOVF       ___savePCLATH, 0
0x0028	0x008A      	MOVWF      PCLATH
0x0029	0x1283      	BCF        STATUS, 5
0x002A	0x0E6F      	SWAPF      ___saveSTATUS, 0
0x002B	0x0083      	MOVWF      STATUS
0x002C	0x0EFF      	SWAPF      R15, 1
0x002D	0x0E7F      	SWAPF      R15, 0
0x002E	0x0009      	RETFIE
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x002F	0x0000      	NOP
0x0030	0x0000      	NOP
0x0031	0x0000      	NOP
0x0032	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0033	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0034	0x301D      	MOVLW      29
0x0035	0x1283      	BCF        STATUS, 5
0x0036	0x1303      	BCF        STATUS, 6
0x0037	0x00FC      	MOVWF      R12
0x0038	0x3091      	MOVLW      145
0x0039	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x003A	0x0BFD      	DECFSZ     R13, 1
0x003B	0x283A      	GOTO       L_Delay_5500us5
0x003C	0x0BFC      	DECFSZ     R12, 1
0x003D	0x283A      	GOTO       L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x003E	0x0008      	RETURN
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x003F	0x3042      	MOVLW      66
0x0040	0x1283      	BCF        STATUS, 5
0x0041	0x1303      	BCF        STATUS, 6
0x0042	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0043	0x0BFD      	DECFSZ     R13, 1
0x0044	0x2843      	GOTO       L_Delay_50us2
0x0045	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0046	0x0008      	RETURN
; end of _Delay_50us
_SETFUN32:
;__Lib_MathDouble.c,138 :: 		
;__Lib_MathDouble.c,145 :: 		
0x0047	0x157B      	BSF        R11, 2
;__Lib_MathDouble.c,146 :: 		
0x0048	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,147 :: 		
0x0049	0x2851      	GOTO       SETFUN32EEE
;__Lib_MathDouble.c,148 :: 		
0x004A	0x3001      	MOVLW      1
;__Lib_MathDouble.c,149 :: 		
0x004B	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,150 :: 		
0x004C	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,151 :: 		
0x004D	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,152 :: 		
0x004E	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,153 :: 		
0x004F	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,154 :: 		
0x0050	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,155 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,156 :: 		
0x0051	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,158 :: 		
L_end_SETFUN32:
0x0052	0x0008      	RETURN
; end of _SETFUN32
_FIXSIGN32:
;__Lib_MathDouble.c,112 :: 		
;__Lib_MathDouble.c,116 :: 		
0x0053	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,117 :: 		
0x0054	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,118 :: 		
0x0055	0x3000      	MOVLW      0
;__Lib_MathDouble.c,120 :: 		
L_end_FIXSIGN32:
0x0056	0x0008      	RETURN
; end of _FIXSIGN32
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0057	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0058	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x0059	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x005A	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x005B	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x005C	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x005D	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x005E	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x005F	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0060	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0061	0x286B      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0062	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0063	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0064	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0065	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0066	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0067	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0068	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0069	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x006A	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x006B	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x006C	0x2873      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x006D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x006E	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x006F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0070	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0071	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0072	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0073	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0074	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0075	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0076	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0077	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0078	0x285E      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0079	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x007A	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x007B	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x007C	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x007D	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x007E	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x007F	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0080	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x0081	0x0008      	RETURN
; end of _Mul_16X16_U
_RES032:
;__Lib_MathDouble.c,123 :: 		
;__Lib_MathDouble.c,128 :: 		
0x0082	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,129 :: 		
0x0083	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,130 :: 		
0x0084	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,131 :: 		
0x0085	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,132 :: 		
0x0086	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,133 :: 		
0x0087	0x3000      	MOVLW      0
;__Lib_MathDouble.c,135 :: 		
L_end_RES032:
0x0088	0x0008      	RETURN
; end of _RES032
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0089	0x1283      	BCF        STATUS, 5
0x008A	0x1703      	BSF        STATUS, 6
0x008B	0x1B90      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x008C	0x2890      	GOTO       L__Lcd_Cmd21
0x008D	0x1303      	BCF        STATUS, 6
0x008E	0x1288      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x008F	0x2892      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0090	0x1303      	BCF        STATUS, 6
0x0091	0x1688      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0092	0x1703      	BSF        STATUS, 6
0x0093	0x1B10      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0094	0x2898      	GOTO       L__Lcd_Cmd23
0x0095	0x1303      	BCF        STATUS, 6
0x0096	0x1208      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0097	0x289A      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0098	0x1303      	BCF        STATUS, 6
0x0099	0x1608      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x009A	0x1703      	BSF        STATUS, 6
0x009B	0x1A90      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x009C	0x28A0      	GOTO       L__Lcd_Cmd25
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x1188      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x009F	0x28A2      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x00A0	0x1303      	BCF        STATUS, 6
0x00A1	0x1588      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x00A2	0x1703      	BSF        STATUS, 6
0x00A3	0x1A10      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x00A4	0x28A8      	GOTO       L__Lcd_Cmd27
0x00A5	0x1303      	BCF        STATUS, 6
0x00A6	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x00A7	0x28AA      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x00A8	0x1303      	BCF        STATUS, 6
0x00A9	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x00AA	0x1683      	BSF        STATUS, 5
0x00AB	0x1862      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00AC	0x28B0      	GOTO       L__Lcd_Cmd29
0x00AD	0x1283      	BCF        STATUS, 5
0x00AE	0x1408      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x00AF	0x28B2      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00B0	0x1283      	BCF        STATUS, 5
0x00B1	0x1008      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00B2	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x00B3	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00B4	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x00B5	0x1703      	BSF        STATUS, 6
0x00B6	0x1990      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x00B7	0x28BB      	GOTO       L__Lcd_Cmd31
0x00B8	0x1303      	BCF        STATUS, 6
0x00B9	0x1288      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x00BA	0x28BD      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00BB	0x1303      	BCF        STATUS, 6
0x00BC	0x1688      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00BD	0x1703      	BSF        STATUS, 6
0x00BE	0x1910      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x00BF	0x28C3      	GOTO       L__Lcd_Cmd33
0x00C0	0x1303      	BCF        STATUS, 6
0x00C1	0x1208      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x00C2	0x28C5      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00C3	0x1303      	BCF        STATUS, 6
0x00C4	0x1608      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00C5	0x1703      	BSF        STATUS, 6
0x00C6	0x1890      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x00C7	0x28CB      	GOTO       L__Lcd_Cmd35
0x00C8	0x1303      	BCF        STATUS, 6
0x00C9	0x1188      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x00CA	0x28CD      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00CB	0x1303      	BCF        STATUS, 6
0x00CC	0x1588      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00CD	0x1703      	BSF        STATUS, 6
0x00CE	0x1810      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x00CF	0x28D3      	GOTO       L__Lcd_Cmd37
0x00D0	0x1303      	BCF        STATUS, 6
0x00D1	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x00D2	0x28D5      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00D3	0x1303      	BCF        STATUS, 6
0x00D4	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00D5	0x1683      	BSF        STATUS, 5
0x00D6	0x1862      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00D7	0x28DB      	GOTO       L__Lcd_Cmd39
0x00D8	0x1283      	BCF        STATUS, 5
0x00D9	0x1408      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x00DA	0x28DD      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00DB	0x1283      	BCF        STATUS, 5
0x00DC	0x1008      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00DD	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x00DE	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00DF	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x00E0	0x1683      	BSF        STATUS, 5
0x00E1	0x1C62      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00E2	0x28E5      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00E3	0x2034      	CALL       _Delay_5500us
0x00E4	0x28E6      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00E5	0x203F      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00E6	0x0008      	RETURN
; end of _Lcd_Cmd
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x00E7	0x1683      	BSF        STATUS, 5
0x00E8	0x1303      	BCF        STATUS, 6
0x00E9	0x0812      	MOVF       PR2, 0
0x00EA	0x3E01      	ADDLW      1
0x00EB	0x00F0      	MOVWF      R0
0x00EC	0x01F1      	CLRF       R0+1
0x00ED	0x1803      	BTFSC      STATUS, 0
0x00EE	0x0AF1      	INCF       R0+1, 1
0x00EF	0x1283      	BCF        STATUS, 5
0x00F0	0x1703      	BSF        STATUS, 6
0x00F1	0x0810      	MOVF       FARG_PWM2_Set_Duty_new_duty, 0
0x00F2	0x00F4      	MOVWF      R4
0x00F3	0x01F5      	CLRF       R4+1
0x00F4	0x2057      	CALL       _Mul_16X16_U
0x00F5	0x3006      	MOVLW      6
0x00F6	0x00F2      	MOVWF      R2
0x00F7	0x0870      	MOVF       R0, 0
0x00F8	0x00F4      	MOVWF      R4
0x00F9	0x0871      	MOVF       R0+1, 0
0x00FA	0x00F5      	MOVWF      R4+1
0x00FB	0x0872      	MOVF       R2, 0
L__PWM2_Set_Duty2:
0x00FC	0x1903      	BTFSC      STATUS, 2
0x00FD	0x2903      	GOTO       L__PWM2_Set_Duty3
0x00FE	0x0CF5      	RRF        R4+1, 1
0x00FF	0x0CF4      	RRF        R4, 1
0x0100	0x13F5      	BCF        R4+1, 7
0x0101	0x3EFF      	ADDLW      255
0x0102	0x28FC      	GOTO       L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
;__Lib_PWM_c21.c,13 :: 		
0x0103	0x3004      	MOVLW      4
0x0104	0x00F1      	MOVWF      R1
0x0105	0x0874      	MOVF       R4, 0
0x0106	0x00F0      	MOVWF      R0
0x0107	0x0871      	MOVF       R1, 0
L__PWM2_Set_Duty4:
0x0108	0x1903      	BTFSC      STATUS, 2
0x0109	0x290E      	GOTO       L__PWM2_Set_Duty5
0x010A	0x0DF0      	RLF        R0, 1
0x010B	0x1070      	BCF        R0, 0
0x010C	0x3EFF      	ADDLW      255
0x010D	0x2908      	GOTO       L__PWM2_Set_Duty4
L__PWM2_Set_Duty5:
0x010E	0x3030      	MOVLW      48
0x010F	0x0570      	ANDWF      R0, 0
0x0110	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,14 :: 		
0x0111	0x0874      	MOVF       R4, 0
0x0112	0x00F0      	MOVWF      R0
0x0113	0x0875      	MOVF       R4+1, 0
0x0114	0x00F1      	MOVWF      R0+1
0x0115	0x0CF1      	RRF        R0+1, 1
0x0116	0x0CF0      	RRF        R0, 1
0x0117	0x13F1      	BCF        R0+1, 7
0x0118	0x0CF1      	RRF        R0+1, 1
0x0119	0x0CF0      	RRF        R0, 1
0x011A	0x13F1      	BCF        R0+1, 7
0x011B	0x0870      	MOVF       R0, 0
0x011C	0x009B      	MOVWF      CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x011D	0x300F      	MOVLW      15
0x011E	0x059D      	ANDWF      CCP2CON, 1
;__Lib_PWM_c21.c,16 :: 		
0x011F	0x0873      	MOVF       R3, 0
0x0120	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,17 :: 		
L_end_PWM2_Set_Duty:
0x0121	0x0008      	RETURN
; end of _PWM2_Set_Duty
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,39 :: 		
;__Lib_PWM_c21.c,43 :: 		
0x0122	0x1683      	BSF        STATUS, 5
0x0123	0x1303      	BCF        STATUS, 6
0x0124	0x0812      	MOVF       PR2, 0
0x0125	0x3E01      	ADDLW      1
0x0126	0x00F0      	MOVWF      R0
0x0127	0x01F1      	CLRF       R0+1
0x0128	0x1803      	BTFSC      STATUS, 0
0x0129	0x0AF1      	INCF       R0+1, 1
0x012A	0x1283      	BCF        STATUS, 5
0x012B	0x1703      	BSF        STATUS, 6
0x012C	0x0810      	MOVF       FARG_PWM1_Set_Duty_new_duty, 0
0x012D	0x00F4      	MOVWF      R4
0x012E	0x01F5      	CLRF       R4+1
0x012F	0x2057      	CALL       _Mul_16X16_U
0x0130	0x3006      	MOVLW      6
0x0131	0x00F2      	MOVWF      R2
0x0132	0x0870      	MOVF       R0, 0
0x0133	0x00F4      	MOVWF      R4
0x0134	0x0871      	MOVF       R0+1, 0
0x0135	0x00F5      	MOVWF      R4+1
0x0136	0x0872      	MOVF       R2, 0
L__PWM1_Set_Duty10:
0x0137	0x1903      	BTFSC      STATUS, 2
0x0138	0x293E      	GOTO       L__PWM1_Set_Duty11
0x0139	0x0CF5      	RRF        R4+1, 1
0x013A	0x0CF4      	RRF        R4, 1
0x013B	0x13F5      	BCF        R4+1, 7
0x013C	0x3EFF      	ADDLW      255
0x013D	0x2937      	GOTO       L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,44 :: 		
0x013E	0x3004      	MOVLW      4
0x013F	0x00F1      	MOVWF      R1
0x0140	0x0874      	MOVF       R4, 0
0x0141	0x00F0      	MOVWF      R0
0x0142	0x0871      	MOVF       R1, 0
L__PWM1_Set_Duty12:
0x0143	0x1903      	BTFSC      STATUS, 2
0x0144	0x2949      	GOTO       L__PWM1_Set_Duty13
0x0145	0x0DF0      	RLF        R0, 1
0x0146	0x1070      	BCF        R0, 0
0x0147	0x3EFF      	ADDLW      255
0x0148	0x2943      	GOTO       L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x0149	0x3030      	MOVLW      48
0x014A	0x0570      	ANDWF      R0, 0
0x014B	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,45 :: 		
0x014C	0x0874      	MOVF       R4, 0
0x014D	0x00F0      	MOVWF      R0
0x014E	0x0875      	MOVF       R4+1, 0
0x014F	0x00F1      	MOVWF      R0+1
0x0150	0x0CF1      	RRF        R0+1, 1
0x0151	0x0CF0      	RRF        R0, 1
0x0152	0x13F1      	BCF        R0+1, 7
0x0153	0x0CF1      	RRF        R0+1, 1
0x0154	0x0CF0      	RRF        R0, 1
0x0155	0x13F1      	BCF        R0+1, 7
0x0156	0x0870      	MOVF       R0, 0
0x0157	0x0095      	MOVWF      CCPR1L
;__Lib_PWM_c21.c,46 :: 		
0x0158	0x300F      	MOVLW      15
0x0159	0x0597      	ANDWF      CCP1CON, 1
;__Lib_PWM_c21.c,47 :: 		
0x015A	0x0873      	MOVF       R3, 0
0x015B	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,48 :: 		
L_end_PWM1_Set_Duty:
0x015C	0x0008      	RETURN
; end of _PWM1_Set_Duty
_NRM3232:
;__Lib_MathDouble.c,167 :: 		
;__Lib_MathDouble.c,173 :: 		
;__Lib_MathDouble.c,175 :: 		
0x015D	0x01A0      	CLRF       __math_tempbD
;__Lib_MathDouble.c,176 :: 		
0x015E	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,177 :: 		
0x015F	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,178 :: 		
0x0160	0x2972      	GOTO       NORM3232
;__Lib_MathDouble.c,179 :: 		
0x0161	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,180 :: 		
0x0162	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,181 :: 		
0x0163	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,182 :: 		
0x0164	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,183 :: 		
0x0165	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,184 :: 		
0x0166	0x15A0      	BSF        __math_tempbD, 3
;__Lib_MathDouble.c,186 :: 		
0x0167	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,187 :: 		
0x0168	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,188 :: 		
0x0169	0x2972      	GOTO       NORM3232
;__Lib_MathDouble.c,189 :: 		
0x016A	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,190 :: 		
0x016B	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,191 :: 		
0x016C	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,192 :: 		
0x016D	0x11A0      	BCF        __math_tempbD, 3
;__Lib_MathDouble.c,193 :: 		
0x016E	0x1620      	BSF        __math_tempbD, 4
;__Lib_MathDouble.c,195 :: 		
0x016F	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,196 :: 		
0x0170	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,197 :: 		
0x0171	0x2980      	GOTO       JPNRES032
;__Lib_MathDouble.c,198 :: 		
NORM3232:
;__Lib_MathDouble.c,199 :: 		
0x0172	0x0820      	MOVF       __math_tempbD, 0
;__Lib_MathDouble.c,200 :: 		
0x0173	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,201 :: 		
0x0174	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,202 :: 		
0x0175	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,203 :: 		
0x0176	0x2984      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,204 :: 		
0x0177	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,205 :: 		
NORM3232A:
;__Lib_MathDouble.c,206 :: 		
0x0178	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,207 :: 		
0x0179	0x2988      	GOTO       JMPNFIXSIGN32
;__Lib_MathDouble.c,208 :: 		
0x017A	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,209 :: 		
0x017B	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,210 :: 		
0x017C	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,211 :: 		
0x017D	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,212 :: 		
0x017E	0x2978      	GOTO       NORM3232A
;__Lib_MathDouble.c,213 :: 		
0x017F	0x2984      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,214 :: 		
JPNRES032:
;__Lib_MathDouble.c,215 :: 		
0x0180	0x3001      	MOVLW      1
;__Lib_MathDouble.c,216 :: 		
0x0181	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,218 :: 		
0x0182	0x2082      	CALL       _RES032
;__Lib_MathDouble.c,220 :: 		
0x0183	0x298B      	GOTO       NORM32EEE
;__Lib_MathDouble.c,221 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,222 :: 		
0x0184	0x3002      	MOVLW      2
;__Lib_MathDouble.c,223 :: 		
0x0185	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,225 :: 		
0x0186	0x2047      	CALL       _SETFUN32
;__Lib_MathDouble.c,227 :: 		
0x0187	0x298B      	GOTO       NORM32EEE
;__Lib_MathDouble.c,228 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,229 :: 		
0x0188	0x3004      	MOVLW      4
;__Lib_MathDouble.c,230 :: 		
0x0189	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,232 :: 		
0x018A	0x2053      	CALL       _FIXSIGN32
;__Lib_MathDouble.c,234 :: 		
NORM32EEE:
;__Lib_MathDouble.c,236 :: 		
L_end_NRM3232:
0x018B	0x0008      	RETURN
; end of _NRM3232
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x018C	0x301D      	MOVLW      29
0x018D	0x1283      	BCF        STATUS, 5
0x018E	0x1303      	BCF        STATUS, 6
0x018F	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x0190	0x0BFD      	DECFSZ     R13, 1
0x0191	0x2990      	GOTO       L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0192	0x0008      	RETURN
; end of _Delay_22us
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0193	0x1683      	BSF        STATUS, 5
0x0194	0x1303      	BCF        STATUS, 6
0x0195	0x1087      	BCF        TRISC1_bit, BitPos(TRISC1_bit+0)
;__Lib_PWM_c21.c,21 :: 		
0x0196	0x1283      	BCF        STATUS, 5
0x0197	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,22 :: 		
0x0198	0x300C      	MOVLW      12
0x0199	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,23 :: 		
L_end_PWM2_Start:
0x019A	0x0008      	RETURN
; end of _PWM2_Start
_ADC_Init:
;__Lib_ADC_A_C.c,19 :: 		
;__Lib_ADC_A_C.c,20 :: 		
0x019B	0x30FF      	MOVLW      _ADC_Get_Sample
0x019C	0x1683      	BSF        STATUS, 5
0x019D	0x1303      	BCF        STATUS, 6
0x019E	0x00E3      	MOVWF      _ADC_Get_Sample_Ptr
0x019F	0x30FF      	MOVLW      hi_addr(_ADC_Get_Sample)
0x01A0	0x00E4      	MOVWF      _ADC_Get_Sample_Ptr+1
0x01A1	0x30FF      	MOVLW      FARG_ADC_Get_Sample_channel
0x01A2	0x00E5      	MOVWF      _ADC_Get_Sample_Ptr+2
0x01A3	0x30FF      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
;__Lib_ADC_A_C.c,22 :: 		
0x01A4	0x1283      	BCF        STATUS, 5
0x01A5	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,23 :: 		
0x01A6	0x30C0      	MOVLW      192
0x01A7	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,24 :: 		
0x01A8	0x0959      	COMF       _vref_mask, 0
0x01A9	0x00F0      	MOVWF      R0
0x01AA	0x0870      	MOVF       R0, 0
0x01AB	0x1683      	BSF        STATUS, 5
0x01AC	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,25 :: 		
0x01AD	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,26 :: 		
0x01AE	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,29 :: 		
0x01AF	0x1283      	BCF        STATUS, 5
0x01B0	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,30 :: 		
L_end_ADC_Init:
0x01B1	0x0008      	RETURN
; end of _ADC_Init
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x01B2	0x1683      	BSF        STATUS, 5
0x01B3	0x1303      	BCF        STATUS, 6
0x01B4	0x0867      	MOVF       ___DoICPAddr+1, 0
0x01B5	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x01B6	0x0866      	MOVF       ___DoICPAddr, 0
0x01B7	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x01B8	0x0008      	RETURN
; end of _____DoICP
_ADC_Read:
;__Lib_ADC_A_C.c,68 :: 		
;__Lib_ADC_A_C.c,70 :: 		
0x01B9	0x1283      	BCF        STATUS, 5
0x01BA	0x1303      	BCF        STATUS, 6
0x01BB	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,71 :: 		
0x01BC	0x30C0      	MOVLW      192
0x01BD	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,72 :: 		
0x01BE	0x0959      	COMF       _vref_mask, 0
0x01BF	0x00F0      	MOVWF      R0
0x01C0	0x0870      	MOVF       R0, 0
0x01C1	0x1683      	BSF        STATUS, 5
0x01C2	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,73 :: 		
0x01C3	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,74 :: 		
0x01C4	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,75 :: 		
0x01C5	0x086C      	MOVF       FARG_ADC_Read_channel, 0
0x01C6	0x00F0      	MOVWF      R0
0x01C7	0x0DF0      	RLF        R0, 1
0x01C8	0x1070      	BCF        R0, 0
0x01C9	0x0DF0      	RLF        R0, 1
0x01CA	0x1070      	BCF        R0, 0
0x01CB	0x0DF0      	RLF        R0, 1
0x01CC	0x1070      	BCF        R0, 0
0x01CD	0x0870      	MOVF       R0, 0
0x01CE	0x1283      	BCF        STATUS, 5
0x01CF	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,78 :: 		
0x01D0	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,81 :: 		
0x01D1	0x218C      	CALL       _Delay_22us
;__Lib_ADC_A_C.c,84 :: 		
0x01D2	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_C.c,87 :: 		
L_ADC_Read2:
0x01D3	0x1D1F      	BTFSS      ADCON0, 2
0x01D4	0x29D7      	GOTO       L_ADC_Read3
;__Lib_ADC_A_C.c,88 :: 		
0x01D5	0x0000      	NOP
0x01D6	0x29D3      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,91 :: 		
0x01D7	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_C.c,94 :: 		
0x01D8	0x081E      	MOVF       ADRESH, 0
0x01D9	0x00F1      	MOVWF      R0+1
0x01DA	0x01F0      	CLRF       R0
0x01DB	0x1683      	BSF        STATUS, 5
0x01DC	0x081E      	MOVF       ADRESL, 0
0x01DD	0x04F0      	IORWF      R0, 1
0x01DE	0x3000      	MOVLW      0
0x01DF	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_A_C.c,95 :: 		
L_end_ADC_Read:
0x01E0	0x0008      	RETURN
; end of _ADC_Read
_word2double:
;__Lib_MathDouble.c,1862 :: 		
;__Lib_MathDouble.c,1868 :: 		
0x01E1	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.c,1869 :: 		
0x01E2	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.c,1870 :: 		
0x01E3	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1871 :: 		
0x01E4	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,1872 :: 		
0x01E5	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,1873 :: 		
0x01E6	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1874 :: 		
0x01E7	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1875 :: 		
0x01E8	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1876 :: 		
0x01E9	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,1879 :: 		
0x01EA	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,1880 :: 		
0x01EB	0x01FC      	CLRF       R12
;__Lib_MathDouble.c,1882 :: 		
0x01EC	0x3096      	MOVLW      150
;__Lib_MathDouble.c,1883 :: 		
0x01ED	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1884 :: 		
0x01EE	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,1886 :: 		
0x01EF	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1887 :: 		
0x01F0	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1888 :: 		
0x01F1	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.c,1889 :: 		
0x01F2	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1890 :: 		
0x01F3	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,1891 :: 		
0x01F4	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1893 :: 		
0x01F5	0x215D      	CALL       _NRM3232
;__Lib_MathDouble.c,1894 :: 		
L_end_word2double:
0x01F6	0x0008      	RETURN
; end of _word2double
_MOTORS_Stop:
;Motors.c,21 :: 		void MOTORS_Stop(){
;Motors.c,22 :: 		PWM1_Set_Duty(0);
0x01F7	0x1283      	BCF        STATUS, 5
0x01F8	0x1703      	BSF        STATUS, 6
0x01F9	0x0190      	CLRF       FARG_PWM1_Set_Duty_new_duty
0x01FA	0x2122      	CALL       _PWM1_Set_Duty
;Motors.c,23 :: 		PWM2_Set_Duty(0);
0x01FB	0x1703      	BSF        STATUS, 6
0x01FC	0x0190      	CLRF       FARG_PWM2_Set_Duty_new_duty
0x01FD	0x20E7      	CALL       _PWM2_Set_Duty
;Motors.c,24 :: 		RMT1 = 0;
0x01FE	0x1007      	BCF        PORTC, 0
;Motors.c,26 :: 		}
L_end_MOTORS_Stop:
0x01FF	0x0008      	RETURN
; end of _MOTORS_Stop
_PWM1_Init:
;__Lib_PWM_c21.c,32 :: 		
;__Lib_PWM_c21.c,33 :: 		
;__Lib_PWM_c21.c,34 :: 		
0x0200	0x1283      	BCF        STATUS, 5
0x0201	0x1303      	BCF        STATUS, 6
0x0202	0x0195      	CLRF       CCPR1L
;__Lib_PWM_c21.c,35 :: 		
0x0203	0x1217      	BCF        CCP1CON, 4
;__Lib_PWM_c21.c,36 :: 		
0x0204	0x1297      	BCF        CCP1CON, 5
;__Lib_PWM_c21.c,37 :: 		
L_end_PWM1_Init:
0x0205	0x0008      	RETURN
; end of _PWM1_Init
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0206	0x1683      	BSF        STATUS, 5
0x0207	0x1303      	BCF        STATUS, 6
0x0208	0x1898      	BTFSC      TXSTA, 1
0x0209	0x2A0C      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x020A	0x0000      	NOP
0x020B	0x2A06      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x020C	0x086C      	MOVF       FARG_UART1_Write_data_, 0
0x020D	0x1283      	BCF        STATUS, 5
0x020E	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x020F	0x0008      	RETURN
; end of _UART1_Write
_PWM1_Start:
;__Lib_PWM_c21.c,50 :: 		
;__Lib_PWM_c21.c,51 :: 		
0x0210	0x1683      	BSF        STATUS, 5
0x0211	0x1303      	BCF        STATUS, 6
0x0212	0x1107      	BCF        TRISC2_bit, BitPos(TRISC2_bit+0)
;__Lib_PWM_c21.c,52 :: 		
0x0213	0x1283      	BCF        STATUS, 5
0x0214	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,53 :: 		
0x0215	0x300C      	MOVLW      12
0x0216	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,54 :: 		
L_end_PWM1_Start:
0x0217	0x0008      	RETURN
; end of _PWM1_Start
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0218	0x1683      	BSF        STATUS, 5
0x0219	0x1303      	BCF        STATUS, 6
0x021A	0x1088      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x021B	0x1008      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x021C	0x1108      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x021D	0x1188      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x021E	0x1208      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x021F	0x1288      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x0220	0x1283      	BCF        STATUS, 5
0x0221	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x0222	0x1008      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x0223	0x1288      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x0224	0x1208      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x0225	0x1188      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x0226	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x0227	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0228	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0229	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x022A	0x1588      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x022B	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x022C	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x022D	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x022E	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x022F	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0230	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x0231	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0232	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x0233	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0234	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x0235	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0236	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x0237	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0238	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x0239	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x023A	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x023B	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x023C	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x023D	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x023E	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x023F	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0240	0x1188      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x0241	0x1688      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x0242	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x0243	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0244	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x0245	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0246	0x1288      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x0247	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x0248	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x0249	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x024A	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x024B	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x024C	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x024D	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x024E	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x024F	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0250	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x0251	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0252	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x0253	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0254	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x0255	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0256	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x0257	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0258	0x1108      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0259	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x025A	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x025B	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x025C	0x1688      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x025D	0x1608      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x025E	0x1588      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x025F	0x1508      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0260	0x1488      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x0261	0x202F      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0262	0x1088      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x0263	0x2034      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0264	0x1683      	BSF        STATUS, 5
0x0265	0x1462      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0266	0x0008      	RETURN
; end of _Lcd_Init
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0267	0x1683      	BSF        STATUS, 5
0x0268	0x1303      	BCF        STATUS, 6
0x0269	0x1062      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x026A	0x086C      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x026B	0x1283      	BCF        STATUS, 5
0x026C	0x1703      	BSF        STATUS, 6
0x026D	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x026E	0x2089      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x026F	0x1683      	BSF        STATUS, 5
0x0270	0x1462      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0271	0x0008      	RETURN
; end of _Lcd_Chr_CP
_EEPROM_Read:
;__Lib_EEPROM.c,4 :: 		
;__Lib_EEPROM.c,5 :: 		
0x0272	0x1683      	BSF        STATUS, 5
0x0273	0x1303      	BCF        STATUS, 6
0x0274	0x086C      	MOVF       FARG_EEPROM_Read_Address, 0
0x0275	0x1283      	BCF        STATUS, 5
0x0276	0x1703      	BSF        STATUS, 6
0x0277	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,6 :: 		
0x0278	0x1683      	BSF        STATUS, 5
0x0279	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,12 :: 		
0x027A	0x140C      	BSF        EECON1, 0
;__Lib_EEPROM.c,13 :: 		
0x027B	0x1283      	BCF        STATUS, 5
0x027C	0x080C      	MOVF       EEDATA, 0
0x027D	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,14 :: 		
L_end_EEPROM_Read:
0x027E	0x0008      	RETURN
; end of _EEPROM_Read
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x027F	0x1283      	BCF        STATUS, 5
0x0280	0x1303      	BCF        STATUS, 6
0x0281	0x019B      	CLRF       CCPR2L
;__Lib_PWM_c21.c,4 :: 		
0x0282	0x121D      	BCF        CCP2CON, 4
;__Lib_PWM_c21.c,5 :: 		
0x0283	0x129D      	BCF        CCP2CON, 5
;__Lib_PWM_c21.c,6 :: 		
L_end_PWM2_Init:
0x0284	0x0008      	RETURN
; end of _PWM2_Init
_UART1_Write_Text:
;__Lib_UART_c67.c,47 :: 		
;__Lib_UART_c67.c,48 :: 		
0x0285	0x1683      	BSF        STATUS, 5
0x0286	0x1303      	BCF        STATUS, 6
0x0287	0x01EA      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_c67.c,50 :: 		
0x0288	0x0868      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x0289	0x0084      	MOVWF      FSR
0x028A	0x0800      	MOVF       INDF, 0
0x028B	0x00E9      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,51 :: 		
L_UART1_Write_Text5:
0x028C	0x0869      	MOVF       UART1_Write_Text_data__L0, 0
0x028D	0x3A00      	XORLW      0
0x028E	0x1903      	BTFSC      STATUS, 2
0x028F	0x2A9B      	GOTO       L_UART1_Write_Text6
;__Lib_UART_c67.c,52 :: 		
0x0290	0x0869      	MOVF       UART1_Write_Text_data__L0, 0
0x0291	0x00EC      	MOVWF      FARG_UART1_Write_data_
0x0292	0x2206      	CALL       _UART1_Write
;__Lib_UART_c67.c,53 :: 		
0x0293	0x1683      	BSF        STATUS, 5
0x0294	0x0AEA      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,54 :: 		
0x0295	0x086A      	MOVF       UART1_Write_Text_counter_L0, 0
0x0296	0x0768      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x0297	0x0084      	MOVWF      FSR
0x0298	0x0800      	MOVF       INDF, 0
0x0299	0x00E9      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,55 :: 		
0x029A	0x2A8C      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,56 :: 		
L_end_UART1_Write_Text:
0x029B	0x0008      	RETURN
; end of _UART1_Write_Text
_DIRECTION_Read:
;EEPROM.c,7 :: 		unsigned short DIRECTION_Read(){
;EEPROM.c,9 :: 		return EEPROM_Read(DIRECTION);
0x029C	0x3020      	MOVLW      32
0x029D	0x1683      	BSF        STATUS, 5
0x029E	0x1303      	BCF        STATUS, 6
0x029F	0x00EC      	MOVWF      FARG_EEPROM_Read_Address
0x02A0	0x2272      	CALL       _EEPROM_Read
;EEPROM.c,10 :: 		}
L_end_DIRECTION_Read:
0x02A1	0x0008      	RETURN
; end of _DIRECTION_Read
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x02A2	0x1283      	BCF        STATUS, 5
0x02A3	0x1303      	BCF        STATUS, 6
0x02A4	0x081A      	MOVF       RCREG, 0
0x02A5	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x02A6	0x1C98      	BTFSS      RCSTA, 1
0x02A7	0x2AAA      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x02A8	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x02A9	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x02AA	0x0871      	MOVF       R1, 0
0x02AB	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x02AC	0x0008      	RETURN
; end of _UART1_Read
_Compare_Double:
;__Lib_MathDouble.c,2053 :: 		
;__Lib_MathDouble.c,2062 :: 		
;__Lib_MathDouble.c,2064 :: 		
0x02AD	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.c,2065 :: 		
0x02AE	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.c,2067 :: 		
0x02AF	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,2068 :: 		
0x02B0	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,2069 :: 		
0x02B1	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,2070 :: 		
0x02B2	0x147A      	BSF        R10, 0
;__Lib_MathDouble.c,2071 :: 		
0x02B3	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,2072 :: 		
0x02B4	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,2073 :: 		
0x02B5	0x14FA      	BSF        R10, 1
;__Lib_MathDouble.c,2075 :: 		
0x02B6	0x087A      	MOVF       R10, 0
;__Lib_MathDouble.c,2076 :: 		
0x02B7	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2077 :: 		
0x02B8	0x2AF9      	GOTO       COMPARE_EQU
;__Lib_MathDouble.c,2078 :: 		
0x02B9	0x3A03      	XORLW      3
;__Lib_MathDouble.c,2079 :: 		
0x02BA	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2080 :: 		
0x02BB	0x2AC4      	GOTO       COMPARE_NOTZERO
;__Lib_MathDouble.c,2082 :: 		
0x02BC	0x187A      	BTFSC      R10, 0
;__Lib_MathDouble.c,2083 :: 		
0x02BD	0x2AC1      	GOTO       COMPARE_XNOTZERO
;__Lib_MathDouble.c,2085 :: 		
0x02BE	0x1FF6      	BTFSS      R6, 7
;__Lib_MathDouble.c,2086 :: 		
0x02BF	0x2AF7      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2087 :: 		
0x02C0	0x2AF5      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2088 :: 		
COMPARE_XNOTZERO:
;__Lib_MathDouble.c,2089 :: 		
0x02C1	0x1FF2      	BTFSS      R2, 7
;__Lib_MathDouble.c,2090 :: 		
0x02C2	0x2AF5      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2091 :: 		
0x02C3	0x2AF7      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2093 :: 		
COMPARE_NOTZERO:
;__Lib_MathDouble.c,2094 :: 		
0x02C4	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,2095 :: 		
0x02C5	0x3980      	ANDLW      128
;__Lib_MathDouble.c,2096 :: 		
0x02C6	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,2097 :: 		
0x02C7	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,2099 :: 		
0x02C8	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,2100 :: 		
0x02C9	0x3980      	ANDLW      128
;__Lib_MathDouble.c,2101 :: 		
0x02CA	0x13F6      	BCF        R6, 7
;__Lib_MathDouble.c,2103 :: 		
0x02CB	0x067A      	XORWF      R10, 0
;__Lib_MathDouble.c,2104 :: 		
0x02CC	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2105 :: 		
0x02CD	0x2AD2      	GOTO       COMPARE_TESTALL
;__Lib_MathDouble.c,2107 :: 		
0x02CE	0x087A      	MOVF       R10, 0
;__Lib_MathDouble.c,2108 :: 		
0x02CF	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2109 :: 		
0x02D0	0x2AF5      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2110 :: 		
0x02D1	0x2AF7      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2112 :: 		
COMPARE_TESTALL:
;__Lib_MathDouble.c,2113 :: 		
0x02D2	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,2114 :: 		
0x02D3	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,2115 :: 		
0x02D4	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2116 :: 		
0x02D5	0x2AD9      	GOTO       COMPARE_C1
;__Lib_MathDouble.c,2117 :: 		
0x02D6	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2118 :: 		
0x02D7	0x2AED      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2119 :: 		
0x02D8	0x2AF1      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2120 :: 		
COMPARE_C1:
;__Lib_MathDouble.c,2121 :: 		
0x02D9	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,2122 :: 		
0x02DA	0x0272      	SUBWF      R2, 0
;__Lib_MathDouble.c,2123 :: 		
0x02DB	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2124 :: 		
0x02DC	0x2AE0      	GOTO       COMPARE_C2
;__Lib_MathDouble.c,2125 :: 		
0x02DD	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2126 :: 		
0x02DE	0x2AED      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2127 :: 		
0x02DF	0x2AF1      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2128 :: 		
COMPARE_C2:
;__Lib_MathDouble.c,2129 :: 		
0x02E0	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,2130 :: 		
0x02E1	0x0271      	SUBWF      R1, 0
;__Lib_MathDouble.c,2131 :: 		
0x02E2	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2132 :: 		
0x02E3	0x2AE7      	GOTO       COMPARE_C3
;__Lib_MathDouble.c,2133 :: 		
0x02E4	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2134 :: 		
0x02E5	0x2AED      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2135 :: 		
0x02E6	0x2AF1      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2136 :: 		
COMPARE_C3:
;__Lib_MathDouble.c,2137 :: 		
0x02E7	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,2138 :: 		
0x02E8	0x0270      	SUBWF      R0, 0
;__Lib_MathDouble.c,2139 :: 		
0x02E9	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2140 :: 		
0x02EA	0x2AF9      	GOTO       COMPARE_EQU
;__Lib_MathDouble.c,2141 :: 		
0x02EB	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,2142 :: 		
0x02EC	0x2AF1      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2144 :: 		
GT_FALSE:
;__Lib_MathDouble.c,2145 :: 		
0x02ED	0x08FA      	MOVF       R10, 1
;__Lib_MathDouble.c,2146 :: 		
0x02EE	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2147 :: 		
0x02EF	0x2AF7      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2148 :: 		
0x02F0	0x2AF5      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2149 :: 		
GT_TRUE:
;__Lib_MathDouble.c,2150 :: 		
0x02F1	0x08FA      	MOVF       R10, 1
;__Lib_MathDouble.c,2151 :: 		
0x02F2	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2152 :: 		
0x02F3	0x2AF5      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2153 :: 		
0x02F4	0x2AF7      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2155 :: 		
COMPARE_GT:
;__Lib_MathDouble.c,2158 :: 		
0x02F5	0x1403      	BSF        STATUS, 0
;__Lib_MathDouble.c,2159 :: 		
0x02F6	0x0008      	RETURN
;__Lib_MathDouble.c,2160 :: 		
COMPARE_LT:
;__Lib_MathDouble.c,2163 :: 		
0x02F7	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,2164 :: 		
0x02F8	0x0008      	RETURN
;__Lib_MathDouble.c,2165 :: 		
COMPARE_EQU:
;__Lib_MathDouble.c,2168 :: 		
0x02F9	0x1403      	BSF        STATUS, 0
;__Lib_MathDouble.c,2169 :: 		
0x02FA	0x1503      	BSF        STATUS, 2
;__Lib_MathDouble.c,2170 :: 		
0x02FB	0x0008      	RETURN
;__Lib_MathDouble.c,2172 :: 		
L_end_Compare_Double:
0x02FC	0x0008      	RETURN
; end of _Compare_Double
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x02FD	0x2B0F      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x02FE	0x3080      	MOVLW      128
0x02FF	0x1683      	BSF        STATUS, 5
0x0300	0x1303      	BCF        STATUS, 6
0x0301	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0302	0x2B22      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0303	0x30C0      	MOVLW      192
0x0304	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0305	0x2B22      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0306	0x3094      	MOVLW      148
0x0307	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0308	0x2B22      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0309	0x30D4      	MOVLW      212
0x030A	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x030B	0x2B22      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x030C	0x3080      	MOVLW      128
0x030D	0x00E8      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x030E	0x2B22      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x030F	0x1683      	BSF        STATUS, 5
0x0310	0x1303      	BCF        STATUS, 6
0x0311	0x0868      	MOVF       FARG_Lcd_Out_row, 0
0x0312	0x3A01      	XORLW      1
0x0313	0x1903      	BTFSC      STATUS, 2
0x0314	0x2AFE      	GOTO       L_Lcd_Out13
0x0315	0x0868      	MOVF       FARG_Lcd_Out_row, 0
0x0316	0x3A02      	XORLW      2
0x0317	0x1903      	BTFSC      STATUS, 2
0x0318	0x2B03      	GOTO       L_Lcd_Out14
0x0319	0x0868      	MOVF       FARG_Lcd_Out_row, 0
0x031A	0x3A03      	XORLW      3
0x031B	0x1903      	BTFSC      STATUS, 2
0x031C	0x2B06      	GOTO       L_Lcd_Out15
0x031D	0x0868      	MOVF       FARG_Lcd_Out_row, 0
0x031E	0x3A04      	XORLW      4
0x031F	0x1903      	BTFSC      STATUS, 2
0x0320	0x2B09      	GOTO       L_Lcd_Out16
0x0321	0x2B0C      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0322	0x0369      	DECF       FARG_Lcd_Out_column, 0
0x0323	0x00F0      	MOVWF      R0
0x0324	0x0868      	MOVF       FARG_Lcd_Out_row, 0
0x0325	0x07F0      	ADDWF      R0, 1
0x0326	0x0870      	MOVF       R0, 0
0x0327	0x00E8      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0328	0x0870      	MOVF       R0, 0
0x0329	0x1283      	BCF        STATUS, 5
0x032A	0x1703      	BSF        STATUS, 6
0x032B	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x032C	0x2089      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x032D	0x1683      	BSF        STATUS, 5
0x032E	0x1062      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x032F	0x01EB      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0330	0x086B      	MOVF       Lcd_Out_i_L0, 0
0x0331	0x076A      	ADDWF      FARG_Lcd_Out_text, 0
0x0332	0x0084      	MOVWF      FSR
0x0333	0x0800      	MOVF       INDF, 0
0x0334	0x1903      	BTFSC      STATUS, 2
0x0335	0x2B3E      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0336	0x086B      	MOVF       Lcd_Out_i_L0, 0
0x0337	0x076A      	ADDWF      FARG_Lcd_Out_text, 0
0x0338	0x0084      	MOVWF      FSR
0x0339	0x0800      	MOVF       INDF, 0
0x033A	0x00EC      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x033B	0x2267      	CALL       _Lcd_Chr_CP
0x033C	0x0AEB      	INCF       Lcd_Out_i_L0, 1
0x033D	0x2B30      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x033E	0x1462      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x033F	0x0008      	RETURN
; end of _Lcd_Out
_SENSOR_R2:
;Sensor.c,23 :: 		float SENSOR_R2(){
;Sensor.c,24 :: 		return ADC_Read(1);
0x0340	0x3001      	MOVLW      1
0x0341	0x1683      	BSF        STATUS, 5
0x0342	0x1303      	BCF        STATUS, 6
0x0343	0x00EC      	MOVWF      FARG_ADC_Read_channel
0x0344	0x21B9      	CALL       _ADC_Read
0x0345	0x21E1      	CALL       _word2double
;Sensor.c,25 :: 		}
L_end_SENSOR_R2:
0x0346	0x0008      	RETURN
; end of _SENSOR_R2
_SENSOR_R1:
;Sensor.c,20 :: 		float SENSOR_R1(){
;Sensor.c,21 :: 		return ADC_Read(0);
0x0347	0x1683      	BSF        STATUS, 5
0x0348	0x1303      	BCF        STATUS, 6
0x0349	0x01EC      	CLRF       FARG_ADC_Read_channel
0x034A	0x21B9      	CALL       _ADC_Read
0x034B	0x21E1      	CALL       _word2double
;Sensor.c,22 :: 		}
L_end_SENSOR_R1:
0x034C	0x0008      	RETURN
; end of _SENSOR_R1
_SENSOR_R3:
;Sensor.c,26 :: 		float SENSOR_R3(){
;Sensor.c,27 :: 		return ADC_Read(2);
0x034D	0x3002      	MOVLW      2
0x034E	0x1683      	BSF        STATUS, 5
0x034F	0x1303      	BCF        STATUS, 6
0x0350	0x00EC      	MOVWF      FARG_ADC_Read_channel
0x0351	0x21B9      	CALL       _ADC_Read
0x0352	0x21E1      	CALL       _word2double
;Sensor.c,28 :: 		}
L_end_SENSOR_R3:
0x0353	0x0008      	RETURN
; end of _SENSOR_R3
_SPEED_Read:
;EEPROM.c,3 :: 		unsigned short SPEED_Read(){
;EEPROM.c,5 :: 		return EEPROM_Read(SPEED);
0x0354	0x3010      	MOVLW      16
0x0355	0x1683      	BSF        STATUS, 5
0x0356	0x1303      	BCF        STATUS, 6
0x0357	0x00EC      	MOVWF      FARG_EEPROM_Read_Address
0x0358	0x2272      	CALL       _EEPROM_Read
;EEPROM.c,6 :: 		}
L_end_SPEED_Read:
0x0359	0x0008      	RETURN
; end of _SPEED_Read
_strcpy:
;__Lib_CString.c,126 :: 		
;__Lib_CString.c,129 :: 		
0x035A	0x1683      	BSF        STATUS, 5
0x035B	0x1303      	BCF        STATUS, 6
0x035C	0x0868      	MOVF       FARG_strcpy_to, 0
0x035D	0x00F2      	MOVWF      R2
;__Lib_CString.c,130 :: 		
L_strcpy34:
0x035E	0x0872      	MOVF       R2, 0
0x035F	0x00F1      	MOVWF      R1
0x0360	0x0AF2      	INCF       R2, 1
0x0361	0x0869      	MOVF       FARG_strcpy_from, 0
0x0362	0x00F0      	MOVWF      R0
0x0363	0x0AE9      	INCF       FARG_strcpy_from, 1
0x0364	0x0870      	MOVF       R0, 0
0x0365	0x0084      	MOVWF      FSR
0x0366	0x0800      	MOVF       INDF, 0
0x0367	0x00F0      	MOVWF      R0
0x0368	0x0871      	MOVF       R1, 0
0x0369	0x0084      	MOVWF      FSR
0x036A	0x0870      	MOVF       R0, 0
0x036B	0x0080      	MOVWF      INDF
0x036C	0x0871      	MOVF       R1, 0
0x036D	0x0084      	MOVWF      FSR
0x036E	0x0800      	MOVF       INDF, 0
0x036F	0x1903      	BTFSC      STATUS, 2
0x0370	0x2B72      	GOTO       L_strcpy35
;__Lib_CString.c,131 :: 		
0x0371	0x2B5E      	GOTO       L_strcpy34
L_strcpy35:
;__Lib_CString.c,132 :: 		
0x0372	0x0868      	MOVF       FARG_strcpy_to, 0
0x0373	0x00F0      	MOVWF      R0
;__Lib_CString.c,133 :: 		
L_end_strcpy:
0x0374	0x0008      	RETURN
; end of _strcpy
_LCD_Init_P:
;LCD.c,5 :: 		void LCD_Init_P()
;LCD.c,8 :: 		LCD_Init(); // LCD: Initialize LCD
0x0375	0x2218      	CALL       _Lcd_Init
;LCD.c,9 :: 		LCD_Cmd(_LCD_CLEAR); // LCD: Clear LCD
0x0376	0x3001      	MOVLW      1
0x0377	0x1283      	BCF        STATUS, 5
0x0378	0x1703      	BSF        STATUS, 6
0x0379	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x037A	0x2089      	CALL       _Lcd_Cmd
;LCD.c,10 :: 		LCD_Cmd(_LCD_CURSOR_OFF); // LCD: Disable Cursor LCD
0x037B	0x300C      	MOVLW      12
0x037C	0x1703      	BSF        STATUS, 6
0x037D	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x037E	0x2089      	CALL       _Lcd_Cmd
;LCD.c,12 :: 		}
L_end_LCD_Init_P:
0x037F	0x0008      	RETURN
; end of _LCD_Init_P
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0380	0x1683      	BSF        STATUS, 5
0x0381	0x1303      	BCF        STATUS, 6
0x0382	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0383	0x3090      	MOVLW      144
0x0384	0x1283      	BCF        STATUS, 5
0x0385	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0386	0x1683      	BSF        STATUS, 5
0x0387	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0388	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0389	0x1283      	BCF        STATUS, 5
0x038A	0x1E8C      	BTFSS      PIR1, 5
0x038B	0x2B8F      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x038C	0x081A      	MOVF       RCREG, 0
0x038D	0x00F0      	MOVWF      R0
0x038E	0x2B89      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x038F	0x0008      	RETURN
; end of _UART1_Init
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0390	0x21B2      	CALL       _____DoICP
0x0391	0x118A      	BCF        PCLATH, 3
0x0392	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0393	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0394	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0395	0x0AE6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0396	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0397	0x0AE7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0398	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0399	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x039A	0x2B90      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x039B	0x0008      	RETURN
; end of ___CC2DW
_SENSOR_Init:
;Sensor.c,4 :: 		void SENSOR_Init()
;Sensor.c,6 :: 		INTCON = 0b10011000; //  RB0 & RB4-7 interruption
0x039C	0x3098      	MOVLW      152
0x039D	0x008B      	MOVWF      INTCON
;Sensor.c,7 :: 		OPTION_REG.INTEDG = 1;  // Falling Edge
0x039E	0x1683      	BSF        STATUS, 5
0x039F	0x1303      	BCF        STATUS, 6
0x03A0	0x1701      	BSF        OPTION_REG, 6
;Sensor.c,9 :: 		TRISA = 0xFF;    // TRISA AS INPUT
0x03A1	0x30FF      	MOVLW      255
0x03A2	0x0085      	MOVWF      TRISA
;Sensor.c,10 :: 		TRISB = 0xFF;    // TRISB AS INPUT
0x03A3	0x30FF      	MOVLW      255
0x03A4	0x0086      	MOVWF      TRISB
;Sensor.c,11 :: 		TRISC.RC0 = 0;
0x03A5	0x1007      	BCF        TRISC, 0
;Sensor.c,12 :: 		TRISC.RC3 = 1;
0x03A6	0x1587      	BSF        TRISC, 3
;Sensor.c,13 :: 		TRISC.RC4 = 1;
0x03A7	0x1607      	BSF        TRISC, 4
;Sensor.c,14 :: 		TRISC.RC5 = 1;
0x03A8	0x1687      	BSF        TRISC, 5
;Sensor.c,15 :: 		ADCON1 = 0x00;   //TRISA AS ANALOG
0x03A9	0x019F      	CLRF       ADCON1
;Sensor.c,16 :: 		ADC_Init();
0x03AA	0x219B      	CALL       _ADC_Init
;Sensor.c,18 :: 		}
L_end_SENSOR_Init:
0x03AB	0x0008      	RETURN
; end of _SENSOR_Init
_MOTORS_Init:
;Motors.c,40 :: 		void MOTORS_Init(){
;Motors.c,42 :: 		PWM1_Init(5000);                    // Initialize PWM1 module at 5KHz
0x03AC	0x1283      	BCF        STATUS, 5
0x03AD	0x1303      	BCF        STATUS, 6
0x03AE	0x1412      	BSF        T2CON, 0
0x03AF	0x1092      	BCF        T2CON, 1
0x03B0	0x30C7      	MOVLW      199
0x03B1	0x1683      	BSF        STATUS, 5
0x03B2	0x0092      	MOVWF      PR2
0x03B3	0x2200      	CALL       _PWM1_Init
;Motors.c,43 :: 		PWM2_Init(5000);
0x03B4	0x1412      	BSF        T2CON, 0
0x03B5	0x1092      	BCF        T2CON, 1
0x03B6	0x30C7      	MOVLW      199
0x03B7	0x1683      	BSF        STATUS, 5
0x03B8	0x0092      	MOVWF      PR2
0x03B9	0x227F      	CALL       _PWM2_Init
;Motors.c,44 :: 		PWM1_Start();
0x03BA	0x2210      	CALL       _PWM1_Start
;Motors.c,45 :: 		PWM2_Start();
0x03BB	0x2193      	CALL       _PWM2_Start
;Motors.c,46 :: 		MOTORS_Stop();
0x03BC	0x21F7      	CALL       _MOTORS_Stop
;Motors.c,47 :: 		}
L_end_MOTORS_Init:
0x03BD	0x0008      	RETURN
; end of _MOTORS_Init
_MOTROS_Start:
;Motors.c,4 :: 		void MOTROS_Start(unsigned short v)
;Motors.c,6 :: 		PWM1_Set_Duty(v);
0x03BE	0x1683      	BSF        STATUS, 5
0x03BF	0x1303      	BCF        STATUS, 6
0x03C0	0x0868      	MOVF       FARG_MOTROS_Start_v, 0
0x03C1	0x1283      	BCF        STATUS, 5
0x03C2	0x1703      	BSF        STATUS, 6
0x03C3	0x0090      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x03C4	0x2122      	CALL       _PWM1_Set_Duty
;Motors.c,7 :: 		PWM2_Set_Duty(v);
0x03C5	0x1683      	BSF        STATUS, 5
0x03C6	0x0868      	MOVF       FARG_MOTROS_Start_v, 0
0x03C7	0x1283      	BCF        STATUS, 5
0x03C8	0x1703      	BSF        STATUS, 6
0x03C9	0x0090      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x03CA	0x20E7      	CALL       _PWM2_Set_Duty
;Motors.c,8 :: 		}
L_end_MOTROS_Start:
0x03CB	0x0008      	RETURN
; end of _MOTROS_Start
_MOTORS_Mill_Around:
;Motors.c,29 :: 		void MOTORS_Mill_Around(){
;Motors.c,31 :: 		MOTORS_Stop();
0x03CC	0x21F7      	CALL       _MOTORS_Stop
;Motors.c,32 :: 		PWM1_Set_Duty(255);
0x03CD	0x30FF      	MOVLW      255
0x03CE	0x1703      	BSF        STATUS, 6
0x03CF	0x0090      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x03D0	0x2122      	CALL       _PWM1_Set_Duty
;Motors.c,33 :: 		PWM2_Set_Duty(0);
0x03D1	0x1703      	BSF        STATUS, 6
0x03D2	0x0190      	CLRF       FARG_PWM2_Set_Duty_new_duty
0x03D3	0x20E7      	CALL       _PWM2_Set_Duty
;Motors.c,34 :: 		RMT1 = 1;
0x03D4	0x1407      	BSF        PORTC, 0
;Motors.c,35 :: 		Delay_ms(800);
0x03D5	0x3011      	MOVLW      17
0x03D6	0x00FB      	MOVWF      R11
0x03D7	0x303C      	MOVLW      60
0x03D8	0x00FC      	MOVWF      R12
0x03D9	0x30CB      	MOVLW      203
0x03DA	0x00FD      	MOVWF      R13
L_MOTORS_Mill_Around0:
0x03DB	0x0BFD      	DECFSZ     R13, 1
0x03DC	0x2BDB      	GOTO       L_MOTORS_Mill_Around0
0x03DD	0x0BFC      	DECFSZ     R12, 1
0x03DE	0x2BDB      	GOTO       L_MOTORS_Mill_Around0
0x03DF	0x0BFB      	DECFSZ     R11, 1
0x03E0	0x2BDB      	GOTO       L_MOTORS_Mill_Around0
;Motors.c,36 :: 		MOTORS_Stop();
0x03E1	0x21F7      	CALL       _MOTORS_Stop
;Motors.c,37 :: 		}
L_end_MOTORS_Mill_Around:
0x03E2	0x0008      	RETURN
; end of _MOTORS_Mill_Around
_EEPROM_Write:
;__Lib_EEPROM.c,16 :: 		
;__Lib_EEPROM.c,20 :: 		
L_EEPROM_Write0:
0x03E3	0x1683      	BSF        STATUS, 5
0x03E4	0x1703      	BSF        STATUS, 6
0x03E5	0x1C8C      	BTFSS      EECON1, 1
0x03E6	0x2BE9      	GOTO       L_EEPROM_Write1
0x03E7	0x0000      	NOP
0x03E8	0x2BE3      	GOTO       L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM.c,21 :: 		
0x03E9	0x1303      	BCF        STATUS, 6
0x03EA	0x0868      	MOVF       FARG_EEPROM_Write_Address, 0
0x03EB	0x1283      	BCF        STATUS, 5
0x03EC	0x1703      	BSF        STATUS, 6
0x03ED	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,22 :: 		
0x03EE	0x1683      	BSF        STATUS, 5
0x03EF	0x1303      	BCF        STATUS, 6
0x03F0	0x0869      	MOVF       FARG_EEPROM_Write_data_, 0
0x03F1	0x1283      	BCF        STATUS, 5
0x03F2	0x1703      	BSF        STATUS, 6
0x03F3	0x008C      	MOVWF      EEDATA
;__Lib_EEPROM.c,23 :: 		
0x03F4	0x1683      	BSF        STATUS, 5
0x03F5	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,24 :: 		
0x03F6	0x150C      	BSF        EECON1, 2
;__Lib_EEPROM.c,26 :: 		
0x03F7	0x080B      	MOVF       INTCON, 0
0x03F8	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,29 :: 		
0x03F9	0x138B      	BCF        INTCON, 7
;__Lib_EEPROM.c,30 :: 		
0x03FA	0x3055      	MOVLW      85
0x03FB	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,31 :: 		
0x03FC	0x30AA      	MOVLW      170
0x03FD	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,32 :: 		
0x03FE	0x148C      	BSF        EECON1, 1
;__Lib_EEPROM.c,36 :: 		
0x03FF	0x1BF0      	BTFSC      R0, 7
0x0400	0x2C03      	GOTO       L__EEPROM_Write4
0x0401	0x138B      	BCF        INTCON, 7
0x0402	0x2C04      	GOTO       L__EEPROM_Write5
L__EEPROM_Write4:
0x0403	0x178B      	BSF        INTCON, 7
L__EEPROM_Write5:
;__Lib_EEPROM.c,37 :: 		
0x0404	0x110C      	BCF        EECON1, 2
;__Lib_EEPROM.c,38 :: 		
L_end_EEPROM_Write:
0x0405	0x0008      	RETURN
; end of _EEPROM_Write
_MOTORS_Left:
;Motors.c,11 :: 		void MOTORS_Left(unsigned short v){
;Motors.c,12 :: 		PWM1_Set_Duty(v);;
0x0406	0x1683      	BSF        STATUS, 5
0x0407	0x1303      	BCF        STATUS, 6
0x0408	0x0868      	MOVF       FARG_MOTORS_Left_v, 0
0x0409	0x1283      	BCF        STATUS, 5
0x040A	0x1703      	BSF        STATUS, 6
0x040B	0x0090      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x040C	0x2122      	CALL       _PWM1_Set_Duty
;Motors.c,13 :: 		PWM2_Set_Duty(0);
0x040D	0x1703      	BSF        STATUS, 6
0x040E	0x0190      	CLRF       FARG_PWM2_Set_Duty_new_duty
0x040F	0x20E7      	CALL       _PWM2_Set_Duty
;Motors.c,14 :: 		}
L_end_MOTORS_Left:
0x0410	0x0008      	RETURN
; end of _MOTORS_Left
_MOTORS_Right:
;Motors.c,16 :: 		void MOTORS_Right(unsigned short v){
;Motors.c,17 :: 		PWM1_Set_Duty(0);
0x0411	0x1283      	BCF        STATUS, 5
0x0412	0x1703      	BSF        STATUS, 6
0x0413	0x0190      	CLRF       FARG_PWM1_Set_Duty_new_duty
0x0414	0x2122      	CALL       _PWM1_Set_Duty
;Motors.c,18 :: 		PWM2_Set_Duty(v);
0x0415	0x1683      	BSF        STATUS, 5
0x0416	0x0868      	MOVF       FARG_MOTORS_Right_v, 0
0x0417	0x1283      	BCF        STATUS, 5
0x0418	0x1703      	BSF        STATUS, 6
0x0419	0x0090      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x041A	0x20E7      	CALL       _PWM2_Set_Duty
;Motors.c,19 :: 		}
L_end_MOTORS_Right:
0x041B	0x0008      	RETURN
; end of _MOTORS_Right
0x0494	0x3021      	MOVLW      33
0x0495	0x0084      	MOVWF      FSR
0x0496	0x3049      	MOVLW      73
0x0497	0x1283      	BCF        STATUS, 5
0x0498	0x1303      	BCF        STATUS, 6
0x0499	0x00F0      	MOVWF      R0
0x049A	0x301C      	MOVLW      28
0x049B	0x1683      	BSF        STATUS, 5
0x049C	0x00E6      	MOVWF      ___DoICPAddr
0x049D	0x3004      	MOVLW      4
0x049E	0x00E7      	MOVWF      231
0x049F	0x2390      	CALL       912
0x04A0	0x30A0      	MOVLW      160
0x04A1	0x0084      	MOVWF      FSR
0x04A2	0x3007      	MOVLW      7
0x04A3	0x00F0      	MOVWF      R0
0x04A4	0x3089      	MOVLW      137
0x04A5	0x1683      	BSF        STATUS, 5
0x04A6	0x00E6      	MOVWF      ___DoICPAddr
0x04A7	0x3004      	MOVLW      4
0x04A8	0x00E7      	MOVWF      231
0x04A9	0x2390      	CALL       912
0x04AA	0x306A      	MOVLW      106
0x04AB	0x0084      	MOVWF      FSR
0x04AC	0x3004      	MOVLW      4
0x04AD	0x00F0      	MOVWF      R0
0x04AE	0x3090      	MOVLW      144
0x04AF	0x1683      	BSF        STATUS, 5
0x04B0	0x00E6      	MOVWF      ___DoICPAddr
0x04B1	0x3004      	MOVLW      4
0x04B2	0x00E7      	MOVWF      231
0x04B3	0x2390      	CALL       912
0x04B4	0x30A7      	MOVLW      167
0x04B5	0x0084      	MOVWF      FSR
0x04B6	0x3024      	MOVLW      36
0x04B7	0x00F0      	MOVWF      R0
0x04B8	0x3065      	MOVLW      101
0x04B9	0x1683      	BSF        STATUS, 5
0x04BA	0x00E6      	MOVWF      ___DoICPAddr
0x04BB	0x3004      	MOVLW      4
0x04BC	0x00E7      	MOVWF      231
0x04BD	0x2390      	CALL       912
0x04BE	0x0008      	RETURN
_main:
0x0800	0x118A      	BCF        PCLATH, 3
0x0801	0x2494      	CALL       1172
0x0802	0x158A      	BSF        PCLATH, 3
;Robot.c,31 :: 		void main() {
;Robot.c,33 :: 		MOTORS_Init();
0x0803	0x118A      	BCF        PCLATH, 3
0x0804	0x23AC      	CALL       _MOTORS_Init
0x0805	0x158A      	BSF        PCLATH, 3
;Robot.c,34 :: 		LCD_Init_P();
0x0806	0x118A      	BCF        PCLATH, 3
0x0807	0x2375      	CALL       _LCD_Init_P
0x0808	0x158A      	BSF        PCLATH, 3
;Robot.c,35 :: 		SENSOR_Init();
0x0809	0x118A      	BCF        PCLATH, 3
0x080A	0x239C      	CALL       _SENSOR_Init
0x080B	0x158A      	BSF        PCLATH, 3
;Robot.c,37 :: 		UART1_Init(9600);
0x080C	0x3067      	MOVLW      103
0x080D	0x1683      	BSF        STATUS, 5
0x080E	0x0099      	MOVWF      SPBRG
0x080F	0x1518      	BSF        TXSTA, 2
0x0810	0x118A      	BCF        PCLATH, 3
0x0811	0x2380      	CALL       _UART1_Init
0x0812	0x158A      	BSF        PCLATH, 3
;Robot.c,39 :: 		Speed = SPEED_Read();
0x0813	0x118A      	BCF        PCLATH, 3
0x0814	0x2354      	CALL       _SPEED_Read
0x0815	0x158A      	BSF        PCLATH, 3
0x0816	0x0870      	MOVF       R0, 0
0x0817	0x1303      	BCF        STATUS, 6
0x0818	0x00AE      	MOVWF      _Speed
;Robot.c,40 :: 		Direction = DIRECTION_Read();
0x0819	0x118A      	BCF        PCLATH, 3
0x081A	0x229C      	CALL       _DIRECTION_Read
0x081B	0x158A      	BSF        PCLATH, 3
0x081C	0x0870      	MOVF       R0, 0
0x081D	0x1303      	BCF        STATUS, 6
0x081E	0x00AF      	MOVWF      _Direction
;Robot.c,43 :: 		UART1_Write_Text("Start");
0x081F	0x303B      	MOVLW      ?lstr1_Robot
0x0820	0x1683      	BSF        STATUS, 5
0x0821	0x00E8      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0822	0x118A      	BCF        PCLATH, 3
0x0823	0x2285      	CALL       _UART1_Write_Text
0x0824	0x158A      	BSF        PCLATH, 3
;Robot.c,44 :: 		UART1_Write(10);
0x0825	0x300A      	MOVLW      10
0x0826	0x00EC      	MOVWF      FARG_UART1_Write_data_
0x0827	0x118A      	BCF        PCLATH, 3
0x0828	0x2206      	CALL       _UART1_Write
0x0829	0x158A      	BSF        PCLATH, 3
;Robot.c,45 :: 		UART1_Write(13);
0x082A	0x300D      	MOVLW      13
0x082B	0x1683      	BSF        STATUS, 5
0x082C	0x00EC      	MOVWF      FARG_UART1_Write_data_
0x082D	0x118A      	BCF        PCLATH, 3
0x082E	0x2206      	CALL       _UART1_Write
0x082F	0x158A      	BSF        PCLATH, 3
;Robot.c,49 :: 		if (Direction == 1)
0x0830	0x082F      	MOVF       _Direction, 0
0x0831	0x3A01      	XORLW      1
0x0832	0x1D03      	BTFSS      STATUS, 2
0x0833	0x283D      	GOTO       L_main0
;Robot.c,51 :: 		strcpy(TXT1,"LEFT");   // LEFT
0x0834	0x30DD      	MOVLW      _TXT1
0x0835	0x1683      	BSF        STATUS, 5
0x0836	0x00E8      	MOVWF      FARG_strcpy_to
0x0837	0x3030      	MOVLW      ?lstr2_Robot
0x0838	0x00E9      	MOVWF      FARG_strcpy_from
0x0839	0x118A      	BCF        PCLATH, 3
0x083A	0x235A      	CALL       _strcpy
0x083B	0x158A      	BSF        PCLATH, 3
;Robot.c,53 :: 		}else{
0x083C	0x2845      	GOTO       L_main1
L_main0:
0x083D	0x1683      	BSF        STATUS, 5
;Robot.c,54 :: 		strcpy(TXT1,"RIGHT");  // RIGHT
0x083E	0x30DD      	MOVLW      _TXT1
0x083F	0x00E8      	MOVWF      FARG_strcpy_to
0x0840	0x3035      	MOVLW      ?lstr3_Robot
0x0841	0x00E9      	MOVWF      FARG_strcpy_from
0x0842	0x118A      	BCF        PCLATH, 3
0x0843	0x235A      	CALL       _strcpy
0x0844	0x158A      	BSF        PCLATH, 3
;Robot.c,55 :: 		}
L_main1:
;Robot.c,57 :: 		if (Speed == 1)
0x0845	0x1283      	BCF        STATUS, 5
0x0846	0x082E      	MOVF       _Speed, 0
0x0847	0x3A01      	XORLW      1
0x0848	0x1D03      	BTFSS      STATUS, 2
0x0849	0x2856      	GOTO       L_main2
;Robot.c,59 :: 		strcpy(TXT2,"MIN");
0x084A	0x30D7      	MOVLW      _TXT2
0x084B	0x1683      	BSF        STATUS, 5
0x084C	0x00E8      	MOVWF      FARG_strcpy_to
0x084D	0x3029      	MOVLW      ?lstr4_Robot
0x084E	0x00E9      	MOVWF      FARG_strcpy_from
0x084F	0x118A      	BCF        PCLATH, 3
0x0850	0x235A      	CALL       _strcpy
0x0851	0x158A      	BSF        PCLATH, 3
;Robot.c,60 :: 		Sd = 80;
0x0852	0x3050      	MOVLW      80
0x0853	0x1283      	BCF        STATUS, 5
0x0854	0x00AD      	MOVWF      _Sd
;Robot.c,62 :: 		}else if (Speed == 2){
0x0855	0x2871      	GOTO       L_main3
L_main2:
0x0856	0x082E      	MOVF       _Speed, 0
0x0857	0x3A02      	XORLW      2
0x0858	0x1D03      	BTFSS      STATUS, 2
0x0859	0x2866      	GOTO       L_main4
;Robot.c,64 :: 		strcpy(TXT2,"MOY");
0x085A	0x30D7      	MOVLW      _TXT2
0x085B	0x1683      	BSF        STATUS, 5
0x085C	0x00E8      	MOVWF      FARG_strcpy_to
0x085D	0x3021      	MOVLW      ?lstr5_Robot
0x085E	0x00E9      	MOVWF      FARG_strcpy_from
0x085F	0x118A      	BCF        PCLATH, 3
0x0860	0x235A      	CALL       _strcpy
0x0861	0x158A      	BSF        PCLATH, 3
;Robot.c,65 :: 		Sd = 160;
0x0862	0x30A0      	MOVLW      160
0x0863	0x1283      	BCF        STATUS, 5
0x0864	0x00AD      	MOVWF      _Sd
;Robot.c,67 :: 		}else{
0x0865	0x2871      	GOTO       L_main5
L_main4:
;Robot.c,68 :: 		strcpy(TXT2,"MAX");
0x0866	0x30D7      	MOVLW      _TXT2
0x0867	0x1683      	BSF        STATUS, 5
0x0868	0x00E8      	MOVWF      FARG_strcpy_to
0x0869	0x3025      	MOVLW      ?lstr6_Robot
0x086A	0x00E9      	MOVWF      FARG_strcpy_from
0x086B	0x118A      	BCF        PCLATH, 3
0x086C	0x235A      	CALL       _strcpy
0x086D	0x158A      	BSF        PCLATH, 3
;Robot.c,69 :: 		Sd = 255;
0x086E	0x30FF      	MOVLW      255
0x086F	0x1283      	BCF        STATUS, 5
0x0870	0x00AD      	MOVWF      _Sd
;Robot.c,70 :: 		}
L_main5:
L_main3:
;Robot.c,72 :: 		while(1){
L_main6:
;Robot.c,73 :: 		IR1 =  SENSOR_R1();
0x0871	0x118A      	BCF        PCLATH, 3
0x0872	0x2347      	CALL       _SENSOR_R1
0x0873	0x158A      	BSF        PCLATH, 3
0x0874	0x0870      	MOVF       R0, 0
0x0875	0x1683      	BSF        STATUS, 5
0x0876	0x00CF      	MOVWF      _IR1
0x0877	0x0871      	MOVF       R0+1, 0
0x0878	0x00D0      	MOVWF      _IR1+1
0x0879	0x0872      	MOVF       R0+2, 0
0x087A	0x00D1      	MOVWF      _IR1+2
0x087B	0x0873      	MOVF       R0+3, 0
0x087C	0x00D2      	MOVWF      _IR1+3
;Robot.c,74 :: 		IR2 =  SENSOR_R2();
0x087D	0x118A      	BCF        PCLATH, 3
0x087E	0x2340      	CALL       _SENSOR_R2
0x087F	0x158A      	BSF        PCLATH, 3
0x0880	0x0870      	MOVF       R0, 0
0x0881	0x1683      	BSF        STATUS, 5
0x0882	0x00D3      	MOVWF      _IR2
0x0883	0x0871      	MOVF       R0+1, 0
0x0884	0x00D4      	MOVWF      _IR2+1
0x0885	0x0872      	MOVF       R0+2, 0
0x0886	0x00D5      	MOVWF      _IR2+2
0x0887	0x0873      	MOVF       R0+3, 0
0x0888	0x00D6      	MOVWF      _IR2+3
;Robot.c,75 :: 		IR3 =  SENSOR_R3();
0x0889	0x118A      	BCF        PCLATH, 3
0x088A	0x234D      	CALL       _SENSOR_R3
0x088B	0x158A      	BSF        PCLATH, 3
0x088C	0x0870      	MOVF       R0, 0
0x088D	0x1683      	BSF        STATUS, 5
0x088E	0x00CB      	MOVWF      _IR3
0x088F	0x0871      	MOVF       R0+1, 0
0x0890	0x00CC      	MOVWF      _IR3+1
0x0891	0x0872      	MOVF       R0+2, 0
0x0892	0x00CD      	MOVWF      _IR3+2
0x0893	0x0873      	MOVF       R0+3, 0
0x0894	0x00CE      	MOVWF      _IR3+3
;Robot.c,77 :: 		uart_rd = UART1_Read();
0x0895	0x118A      	BCF        PCLATH, 3
0x0896	0x22A2      	CALL       _UART1_Read
0x0897	0x158A      	BSF        PCLATH, 3
0x0898	0x0870      	MOVF       R0, 0
0x0899	0x00EE      	MOVWF      _uart_rd
;Robot.c,78 :: 		switch(uart_rd)
0x089A	0x28CC      	GOTO       L_main8
;Robot.c,80 :: 		case '1':
L_main10:
;Robot.c,81 :: 		EEPROM_WRITE(DIRECTION,1);
0x089B	0x3020      	MOVLW      32
0x089C	0x1683      	BSF        STATUS, 5
0x089D	0x00E8      	MOVWF      FARG_EEPROM_Write_Address
0x089E	0x3001      	MOVLW      1
0x089F	0x00E9      	MOVWF      FARG_EEPROM_Write_data_
0x08A0	0x118A      	BCF        PCLATH, 3
0x08A1	0x23E3      	CALL       _EEPROM_Write
0x08A2	0x158A      	BSF        PCLATH, 3
;Robot.c,82 :: 		break;
0x08A3	0x28E2      	GOTO       L_main9
;Robot.c,83 :: 		case '2':
L_main11:
0x08A4	0x1683      	BSF        STATUS, 5
;Robot.c,84 :: 		EEPROM_WRITE(DIRECTION,2);
0x08A5	0x3020      	MOVLW      32
0x08A6	0x1303      	BCF        STATUS, 6
0x08A7	0x00E8      	MOVWF      FARG_EEPROM_Write_Address
0x08A8	0x3002      	MOVLW      2
0x08A9	0x00E9      	MOVWF      FARG_EEPROM_Write_data_
0x08AA	0x118A      	BCF        PCLATH, 3
0x08AB	0x23E3      	CALL       _EEPROM_Write
0x08AC	0x158A      	BSF        PCLATH, 3
;Robot.c,85 :: 		break;
0x08AD	0x28E2      	GOTO       L_main9
;Robot.c,86 :: 		case '3':
L_main12:
0x08AE	0x1683      	BSF        STATUS, 5
;Robot.c,87 :: 		EEPROM_WRITE(SPEED,1);
0x08AF	0x3010      	MOVLW      16
0x08B0	0x1303      	BCF        STATUS, 6
0x08B1	0x00E8      	MOVWF      FARG_EEPROM_Write_Address
0x08B2	0x3001      	MOVLW      1
0x08B3	0x00E9      	MOVWF      FARG_EEPROM_Write_data_
0x08B4	0x118A      	BCF        PCLATH, 3
0x08B5	0x23E3      	CALL       _EEPROM_Write
0x08B6	0x158A      	BSF        PCLATH, 3
;Robot.c,88 :: 		break;
0x08B7	0x28E2      	GOTO       L_main9
;Robot.c,89 :: 		case '4':
L_main13:
0x08B8	0x1683      	BSF        STATUS, 5
;Robot.c,90 :: 		EEPROM_WRITE(SPEED,2);
0x08B9	0x3010      	MOVLW      16
0x08BA	0x1303      	BCF        STATUS, 6
0x08BB	0x00E8      	MOVWF      FARG_EEPROM_Write_Address
0x08BC	0x3002      	MOVLW      2
0x08BD	0x00E9      	MOVWF      FARG_EEPROM_Write_data_
0x08BE	0x118A      	BCF        PCLATH, 3
0x08BF	0x23E3      	CALL       _EEPROM_Write
0x08C0	0x158A      	BSF        PCLATH, 3
;Robot.c,91 :: 		break;
0x08C1	0x28E2      	GOTO       L_main9
;Robot.c,92 :: 		case '5':
L_main14:
0x08C2	0x1683      	BSF        STATUS, 5
;Robot.c,93 :: 		EEPROM_WRITE(SPEED,3);
0x08C3	0x3010      	MOVLW      16
0x08C4	0x1303      	BCF        STATUS, 6
0x08C5	0x00E8      	MOVWF      FARG_EEPROM_Write_Address
0x08C6	0x3003      	MOVLW      3
0x08C7	0x00E9      	MOVWF      FARG_EEPROM_Write_data_
0x08C8	0x118A      	BCF        PCLATH, 3
0x08C9	0x23E3      	CALL       _EEPROM_Write
0x08CA	0x158A      	BSF        PCLATH, 3
;Robot.c,94 :: 		break;
0x08CB	0x28E2      	GOTO       L_main9
;Robot.c,96 :: 		}
L_main8:
0x08CC	0x1283      	BCF        STATUS, 5
0x08CD	0x1303      	BCF        STATUS, 6
0x08CE	0x086E      	MOVF       _uart_rd, 0
0x08CF	0x3A31      	XORLW      49
0x08D0	0x1903      	BTFSC      STATUS, 2
0x08D1	0x289B      	GOTO       L_main10
0x08D2	0x086E      	MOVF       _uart_rd, 0
0x08D3	0x3A32      	XORLW      50
0x08D4	0x1903      	BTFSC      STATUS, 2
0x08D5	0x28A4      	GOTO       L_main11
0x08D6	0x086E      	MOVF       _uart_rd, 0
0x08D7	0x3A33      	XORLW      51
0x08D8	0x1903      	BTFSC      STATUS, 2
0x08D9	0x28AE      	GOTO       L_main12
0x08DA	0x086E      	MOVF       _uart_rd, 0
0x08DB	0x3A34      	XORLW      52
0x08DC	0x1903      	BTFSC      STATUS, 2
0x08DD	0x28B8      	GOTO       L_main13
0x08DE	0x086E      	MOVF       _uart_rd, 0
0x08DF	0x3A35      	XORLW      53
0x08E0	0x1903      	BTFSC      STATUS, 2
0x08E1	0x28C2      	GOTO       L_main14
L_main9:
;Robot.c,98 :: 		switch(Flag)
0x08E2	0x2913      	GOTO       L_main15
;Robot.c,100 :: 		case 1:
L_main17:
0x08E3	0x1283      	BCF        STATUS, 5
0x08E4	0x1303      	BCF        STATUS, 6
;Robot.c,102 :: 		Motors_Right(sd);
0x08E5	0x082D      	MOVF       _Sd, 0
0x08E6	0x1683      	BSF        STATUS, 5
0x08E7	0x00E8      	MOVWF      FARG_MOTORS_Right_v
0x08E8	0x118A      	BCF        PCLATH, 3
0x08E9	0x2411      	CALL       _MOTORS_Right
0x08EA	0x158A      	BSF        PCLATH, 3
;Robot.c,103 :: 		Delay_ms(800);
0x08EB	0x3011      	MOVLW      17
0x08EC	0x00FB      	MOVWF      R11
0x08ED	0x303C      	MOVLW      60
0x08EE	0x00FC      	MOVWF      R12
0x08EF	0x30CB      	MOVLW      203
0x08F0	0x00FD      	MOVWF      R13
L_main18:
0x08F1	0x0BFD      	DECFSZ     R13, 1
0x08F2	0x28F1      	GOTO       L_main18
0x08F3	0x0BFC      	DECFSZ     R12, 1
0x08F4	0x28F1      	GOTO       L_main18
0x08F5	0x0BFB      	DECFSZ     R11, 1
0x08F6	0x28F1      	GOTO       L_main18
;Robot.c,104 :: 		Etat = 0;
0x08F7	0x01ED      	CLRF       _Etat
;Robot.c,105 :: 		Flag = 0;
0x08F8	0x01C1      	CLRF       _Flag
;Robot.c,106 :: 		break;
0x08F9	0x2921      	GOTO       L_main16
;Robot.c,108 :: 		case 2:
L_main19:
;Robot.c,110 :: 		Motors_Left(sd);
0x08FA	0x082D      	MOVF       _Sd, 0
0x08FB	0x1683      	BSF        STATUS, 5
0x08FC	0x00E8      	MOVWF      FARG_MOTORS_Left_v
0x08FD	0x118A      	BCF        PCLATH, 3
0x08FE	0x2406      	CALL       _MOTORS_Left
0x08FF	0x158A      	BSF        PCLATH, 3
;Robot.c,111 :: 		Delay_ms(800);
0x0900	0x3011      	MOVLW      17
0x0901	0x00FB      	MOVWF      R11
0x0902	0x303C      	MOVLW      60
0x0903	0x00FC      	MOVWF      R12
0x0904	0x30CB      	MOVLW      203
0x0905	0x00FD      	MOVWF      R13
L_main20:
0x0906	0x0BFD      	DECFSZ     R13, 1
0x0907	0x2906      	GOTO       L_main20
0x0908	0x0BFC      	DECFSZ     R12, 1
0x0909	0x2906      	GOTO       L_main20
0x090A	0x0BFB      	DECFSZ     R11, 1
0x090B	0x2906      	GOTO       L_main20
;Robot.c,112 :: 		Etat = 0;
0x090C	0x01ED      	CLRF       _Etat
;Robot.c,113 :: 		Flag = 0;
0x090D	0x01C1      	CLRF       _Flag
;Robot.c,114 :: 		break;
0x090E	0x2921      	GOTO       L_main16
;Robot.c,117 :: 		case 3:
L_main21:
;Robot.c,119 :: 		Etat = 4;
0x090F	0x3004      	MOVLW      4
0x0910	0x00ED      	MOVWF      _Etat
;Robot.c,120 :: 		Flag = 0;
0x0911	0x01C1      	CLRF       _Flag
;Robot.c,121 :: 		break;
0x0912	0x2921      	GOTO       L_main16
;Robot.c,123 :: 		}
L_main15:
0x0913	0x1283      	BCF        STATUS, 5
0x0914	0x1303      	BCF        STATUS, 6
0x0915	0x0841      	MOVF       _Flag, 0
0x0916	0x3A01      	XORLW      1
0x0917	0x1903      	BTFSC      STATUS, 2
0x0918	0x28E3      	GOTO       L_main17
0x0919	0x0841      	MOVF       _Flag, 0
0x091A	0x3A02      	XORLW      2
0x091B	0x1903      	BTFSC      STATUS, 2
0x091C	0x28FA      	GOTO       L_main19
0x091D	0x0841      	MOVF       _Flag, 0
0x091E	0x3A03      	XORLW      3
0x091F	0x1903      	BTFSC      STATUS, 2
0x0920	0x290F      	GOTO       L_main21
L_main16:
;Robot.c,125 :: 		switch (Etat) {
0x0921	0x2CF4      	GOTO       L_main22
;Robot.c,127 :: 		case 0:     // ETAT 0  // INIT
L_main24:
;Robot.c,129 :: 		MOTROS_Start(sd);
0x0922	0x082D      	MOVF       _Sd, 0
0x0923	0x1683      	BSF        STATUS, 5
0x0924	0x00E8      	MOVWF      FARG_MOTROS_Start_v
0x0925	0x118A      	BCF        PCLATH, 3
0x0926	0x23BE      	CALL       _MOTROS_Start
0x0927	0x158A      	BSF        PCLATH, 3
;Robot.c,131 :: 		LCD_Out(1,1,TXT1);
0x0928	0x3001      	MOVLW      1
0x0929	0x1683      	BSF        STATUS, 5
0x092A	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x092B	0x3001      	MOVLW      1
0x092C	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x092D	0x30DD      	MOVLW      _TXT1
0x092E	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x092F	0x118A      	BCF        PCLATH, 3
0x0930	0x22FD      	CALL       _Lcd_Out
0x0931	0x158A      	BSF        PCLATH, 3
;Robot.c,132 :: 		LCD_Out(2,1,TXT2);
0x0932	0x3002      	MOVLW      2
0x0933	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0934	0x3001      	MOVLW      1
0x0935	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0936	0x30D7      	MOVLW      _TXT2
0x0937	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0938	0x118A      	BCF        PCLATH, 3
0x0939	0x22FD      	CALL       _Lcd_Out
0x093A	0x158A      	BSF        PCLATH, 3
;Robot.c,135 :: 		if ( IR1 > 600 ){
0x093B	0x084F      	MOVF       _IR1, 0
0x093C	0x00F4      	MOVWF      R4
0x093D	0x0850      	MOVF       _IR1+1, 0
0x093E	0x00F5      	MOVWF      R4+1
0x093F	0x0851      	MOVF       _IR1+2, 0
0x0940	0x00F6      	MOVWF      R4+2
0x0941	0x0852      	MOVF       _IR1+3, 0
0x0942	0x00F7      	MOVWF      R4+3
0x0943	0x3000      	MOVLW      0
0x0944	0x00F0      	MOVWF      R0
0x0945	0x3000      	MOVLW      0
0x0946	0x00F1      	MOVWF      R0+1
0x0947	0x3016      	MOVLW      22
0x0948	0x00F2      	MOVWF      R0+2
0x0949	0x3088      	MOVLW      136
0x094A	0x00F3      	MOVWF      R0+3
0x094B	0x118A      	BCF        PCLATH, 3
0x094C	0x22AD      	CALL       _Compare_Double
0x094D	0x158A      	BSF        PCLATH, 3
0x094E	0x3001      	MOVLW      1
0x094F	0x1803      	BTFSC      STATUS, 0
0x0950	0x3000      	MOVLW      0
0x0951	0x00F0      	MOVWF      R0
0x0952	0x0870      	MOVF       R0, 0
0x0953	0x1903      	BTFSC      STATUS, 2
0x0954	0x29D3      	GOTO       L_main25
;Robot.c,137 :: 		if ((IR2 < 512) && (IR3 < 512)) Etat = 3;
0x0955	0x3000      	MOVLW      0
0x0956	0x00F4      	MOVWF      R4
0x0957	0x3000      	MOVLW      0
0x0958	0x00F5      	MOVWF      R4+1
0x0959	0x3000      	MOVLW      0
0x095A	0x00F6      	MOVWF      R4+2
0x095B	0x3088      	MOVLW      136
0x095C	0x00F7      	MOVWF      R4+3
0x095D	0x1683      	BSF        STATUS, 5
0x095E	0x0853      	MOVF       _IR2, 0
0x095F	0x00F0      	MOVWF      R0
0x0960	0x0854      	MOVF       _IR2+1, 0
0x0961	0x00F1      	MOVWF      R0+1
0x0962	0x0855      	MOVF       _IR2+2, 0
0x0963	0x00F2      	MOVWF      R0+2
0x0964	0x0856      	MOVF       _IR2+3, 0
0x0965	0x00F3      	MOVWF      R0+3
0x0966	0x118A      	BCF        PCLATH, 3
0x0967	0x22AD      	CALL       _Compare_Double
0x0968	0x158A      	BSF        PCLATH, 3
0x0969	0x3001      	MOVLW      1
0x096A	0x1803      	BTFSC      STATUS, 0
0x096B	0x3000      	MOVLW      0
0x096C	0x00F0      	MOVWF      R0
0x096D	0x0870      	MOVF       R0, 0
0x096E	0x1903      	BTFSC      STATUS, 2
0x096F	0x298E      	GOTO       L_main28
0x0970	0x3000      	MOVLW      0
0x0971	0x00F4      	MOVWF      R4
0x0972	0x3000      	MOVLW      0
0x0973	0x00F5      	MOVWF      R4+1
0x0974	0x3000      	MOVLW      0
0x0975	0x00F6      	MOVWF      R4+2
0x0976	0x3088      	MOVLW      136
0x0977	0x00F7      	MOVWF      R4+3
0x0978	0x1683      	BSF        STATUS, 5
0x0979	0x084B      	MOVF       _IR3, 0
0x097A	0x00F0      	MOVWF      R0
0x097B	0x084C      	MOVF       _IR3+1, 0
0x097C	0x00F1      	MOVWF      R0+1
0x097D	0x084D      	MOVF       _IR3+2, 0
0x097E	0x00F2      	MOVWF      R0+2
0x097F	0x084E      	MOVF       _IR3+3, 0
0x0980	0x00F3      	MOVWF      R0+3
0x0981	0x118A      	BCF        PCLATH, 3
0x0982	0x22AD      	CALL       _Compare_Double
0x0983	0x158A      	BSF        PCLATH, 3
0x0984	0x3001      	MOVLW      1
0x0985	0x1803      	BTFSC      STATUS, 0
0x0986	0x3000      	MOVLW      0
0x0987	0x00F0      	MOVWF      R0
0x0988	0x0870      	MOVF       R0, 0
0x0989	0x1903      	BTFSC      STATUS, 2
0x098A	0x298E      	GOTO       L_main28
L__main93:
0x098B	0x3003      	MOVLW      3
0x098C	0x00ED      	MOVWF      _Etat
0x098D	0x29CC      	GOTO       L_main29
L_main28:
;Robot.c,138 :: 		else if  (IR3 < 512) Etat = 2;
0x098E	0x3000      	MOVLW      0
0x098F	0x00F4      	MOVWF      R4
0x0990	0x3000      	MOVLW      0
0x0991	0x00F5      	MOVWF      R4+1
0x0992	0x3000      	MOVLW      0
0x0993	0x00F6      	MOVWF      R4+2
0x0994	0x3088      	MOVLW      136
0x0995	0x00F7      	MOVWF      R4+3
0x0996	0x1683      	BSF        STATUS, 5
0x0997	0x084B      	MOVF       _IR3, 0
0x0998	0x00F0      	MOVWF      R0
0x0999	0x084C      	MOVF       _IR3+1, 0
0x099A	0x00F1      	MOVWF      R0+1
0x099B	0x084D      	MOVF       _IR3+2, 0
0x099C	0x00F2      	MOVWF      R0+2
0x099D	0x084E      	MOVF       _IR3+3, 0
0x099E	0x00F3      	MOVWF      R0+3
0x099F	0x118A      	BCF        PCLATH, 3
0x09A0	0x22AD      	CALL       _Compare_Double
0x09A1	0x158A      	BSF        PCLATH, 3
0x09A2	0x3001      	MOVLW      1
0x09A3	0x1803      	BTFSC      STATUS, 0
0x09A4	0x3000      	MOVLW      0
0x09A5	0x00F0      	MOVWF      R0
0x09A6	0x0870      	MOVF       R0, 0
0x09A7	0x1903      	BTFSC      STATUS, 2
0x09A8	0x29AC      	GOTO       L_main30
0x09A9	0x3002      	MOVLW      2
0x09AA	0x00ED      	MOVWF      _Etat
0x09AB	0x29CC      	GOTO       L_main31
L_main30:
;Robot.c,139 :: 		else if  (IR2 < 512) Etat = 1;
0x09AC	0x3000      	MOVLW      0
0x09AD	0x00F4      	MOVWF      R4
0x09AE	0x3000      	MOVLW      0
0x09AF	0x00F5      	MOVWF      R4+1
0x09B0	0x3000      	MOVLW      0
0x09B1	0x00F6      	MOVWF      R4+2
0x09B2	0x3088      	MOVLW      136
0x09B3	0x00F7      	MOVWF      R4+3
0x09B4	0x1683      	BSF        STATUS, 5
0x09B5	0x0853      	MOVF       _IR2, 0
0x09B6	0x00F0      	MOVWF      R0
0x09B7	0x0854      	MOVF       _IR2+1, 0
0x09B8	0x00F1      	MOVWF      R0+1
0x09B9	0x0855      	MOVF       _IR2+2, 0
0x09BA	0x00F2      	MOVWF      R0+2
0x09BB	0x0856      	MOVF       _IR2+3, 0
0x09BC	0x00F3      	MOVWF      R0+3
0x09BD	0x118A      	BCF        PCLATH, 3
0x09BE	0x22AD      	CALL       _Compare_Double
0x09BF	0x158A      	BSF        PCLATH, 3
0x09C0	0x3001      	MOVLW      1
0x09C1	0x1803      	BTFSC      STATUS, 0
0x09C2	0x3000      	MOVLW      0
0x09C3	0x00F0      	MOVWF      R0
0x09C4	0x0870      	MOVF       R0, 0
0x09C5	0x1903      	BTFSC      STATUS, 2
0x09C6	0x29CA      	GOTO       L_main32
0x09C7	0x3001      	MOVLW      1
0x09C8	0x00ED      	MOVWF      _Etat
0x09C9	0x29CC      	GOTO       L_main33
L_main32:
;Robot.c,140 :: 		else  Etat = 4;
0x09CA	0x3004      	MOVLW      4
0x09CB	0x00ED      	MOVWF      _Etat
L_main33:
L_main31:
L_main29:
;Robot.c,142 :: 		LCD_Cmd(_LCD_CLEAR);
0x09CC	0x3001      	MOVLW      1
0x09CD	0x1703      	BSF        STATUS, 6
0x09CE	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x09CF	0x118A      	BCF        PCLATH, 3
0x09D0	0x2089      	CALL       _Lcd_Cmd
0x09D1	0x158A      	BSF        PCLATH, 3
;Robot.c,143 :: 		}
0x09D2	0x2A1A      	GOTO       L_main34
L_main25:
;Robot.c,146 :: 		else if ( IR2 > 900){     //  SKIP LEFT
0x09D3	0x1683      	BSF        STATUS, 5
0x09D4	0x0853      	MOVF       _IR2, 0
0x09D5	0x00F4      	MOVWF      R4
0x09D6	0x0854      	MOVF       _IR2+1, 0
0x09D7	0x00F5      	MOVWF      R4+1
0x09D8	0x0855      	MOVF       _IR2+2, 0
0x09D9	0x00F6      	MOVWF      R4+2
0x09DA	0x0856      	MOVF       _IR2+3, 0
0x09DB	0x00F7      	MOVWF      R4+3
0x09DC	0x3000      	MOVLW      0
0x09DD	0x00F0      	MOVWF      R0
0x09DE	0x3000      	MOVLW      0
0x09DF	0x00F1      	MOVWF      R0+1
0x09E0	0x3061      	MOVLW      97
0x09E1	0x00F2      	MOVWF      R0+2
0x09E2	0x3088      	MOVLW      136
0x09E3	0x00F3      	MOVWF      R0+3
0x09E4	0x118A      	BCF        PCLATH, 3
0x09E5	0x22AD      	CALL       _Compare_Double
0x09E6	0x158A      	BSF        PCLATH, 3
0x09E7	0x3001      	MOVLW      1
0x09E8	0x1803      	BTFSC      STATUS, 0
0x09E9	0x3000      	MOVLW      0
0x09EA	0x00F0      	MOVWF      R0
0x09EB	0x0870      	MOVF       R0, 0
0x09EC	0x1903      	BTFSC      STATUS, 2
0x09ED	0x29F7      	GOTO       L_main35
;Robot.c,148 :: 		Etat = 5;
0x09EE	0x3005      	MOVLW      5
0x09EF	0x00ED      	MOVWF      _Etat
;Robot.c,149 :: 		LCD_Cmd(_LCD_CLEAR);
0x09F0	0x3001      	MOVLW      1
0x09F1	0x1703      	BSF        STATUS, 6
0x09F2	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x09F3	0x118A      	BCF        PCLATH, 3
0x09F4	0x2089      	CALL       _Lcd_Cmd
0x09F5	0x158A      	BSF        PCLATH, 3
;Robot.c,150 :: 		}
0x09F6	0x2A1A      	GOTO       L_main36
L_main35:
;Robot.c,152 :: 		else if (IR3 > 900){     // SKIP RIGHT
0x09F7	0x1683      	BSF        STATUS, 5
0x09F8	0x084B      	MOVF       _IR3, 0
0x09F9	0x00F4      	MOVWF      R4
0x09FA	0x084C      	MOVF       _IR3+1, 0
0x09FB	0x00F5      	MOVWF      R4+1
0x09FC	0x084D      	MOVF       _IR3+2, 0
0x09FD	0x00F6      	MOVWF      R4+2
0x09FE	0x084E      	MOVF       _IR3+3, 0
0x09FF	0x00F7      	MOVWF      R4+3
0x0A00	0x3000      	MOVLW      0
0x0A01	0x00F0      	MOVWF      R0
0x0A02	0x3000      	MOVLW      0
0x0A03	0x00F1      	MOVWF      R0+1
0x0A04	0x3061      	MOVLW      97
0x0A05	0x00F2      	MOVWF      R0+2
0x0A06	0x3088      	MOVLW      136
0x0A07	0x00F3      	MOVWF      R0+3
0x0A08	0x118A      	BCF        PCLATH, 3
0x0A09	0x22AD      	CALL       _Compare_Double
0x0A0A	0x158A      	BSF        PCLATH, 3
0x0A0B	0x3001      	MOVLW      1
0x0A0C	0x1803      	BTFSC      STATUS, 0
0x0A0D	0x3000      	MOVLW      0
0x0A0E	0x00F0      	MOVWF      R0
0x0A0F	0x0870      	MOVF       R0, 0
0x0A10	0x1903      	BTFSC      STATUS, 2
0x0A11	0x2A1A      	GOTO       L_main37
;Robot.c,154 :: 		Etat = 6;
0x0A12	0x3006      	MOVLW      6
0x0A13	0x00ED      	MOVWF      _Etat
;Robot.c,155 :: 		LCD_Cmd(_LCD_CLEAR);
0x0A14	0x3001      	MOVLW      1
0x0A15	0x1703      	BSF        STATUS, 6
0x0A16	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0A17	0x118A      	BCF        PCLATH, 3
0x0A18	0x2089      	CALL       _Lcd_Cmd
0x0A19	0x158A      	BSF        PCLATH, 3
;Robot.c,157 :: 		}
L_main37:
L_main36:
L_main34:
;Robot.c,158 :: 		if (CG == 1){
0x0A1A	0x1D87      	BTFSS      PORTC, 3
0x0A1B	0x2A27      	GOTO       L_main38
;Robot.c,161 :: 		MOTORS_Stop();
0x0A1C	0x118A      	BCF        PCLATH, 3
0x0A1D	0x21F7      	CALL       _MOTORS_Stop
0x0A1E	0x158A      	BSF        PCLATH, 3
;Robot.c,162 :: 		Etat = 7;
0x0A1F	0x3007      	MOVLW      7
0x0A20	0x00ED      	MOVWF      _Etat
;Robot.c,163 :: 		LCD_Cmd(_LCD_CLEAR);
0x0A21	0x3001      	MOVLW      1
0x0A22	0x1703      	BSF        STATUS, 6
0x0A23	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0A24	0x118A      	BCF        PCLATH, 3
0x0A25	0x2089      	CALL       _Lcd_Cmd
0x0A26	0x158A      	BSF        PCLATH, 3
;Robot.c,165 :: 		}
L_main38:
;Robot.c,169 :: 		break;
0x0A27	0x2D1C      	GOTO       L_main23
;Robot.c,171 :: 		case 1:   // ETAT 1   //LEFT
L_main39:
;Robot.c,172 :: 		LCD_Out(1,1,"OBST L");
0x0A28	0x3001      	MOVLW      1
0x0A29	0x1683      	BSF        STATUS, 5
0x0A2A	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0A2B	0x3001      	MOVLW      1
0x0A2C	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0A2D	0x30A7      	MOVLW      ?lstr7_Robot
0x0A2E	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0A2F	0x118A      	BCF        PCLATH, 3
0x0A30	0x22FD      	CALL       _Lcd_Out
0x0A31	0x158A      	BSF        PCLATH, 3
;Robot.c,173 :: 		if ( IR1 > 600 ) {
0x0A32	0x084F      	MOVF       _IR1, 0
0x0A33	0x00F4      	MOVWF      R4
0x0A34	0x0850      	MOVF       _IR1+1, 0
0x0A35	0x00F5      	MOVWF      R4+1
0x0A36	0x0851      	MOVF       _IR1+2, 0
0x0A37	0x00F6      	MOVWF      R4+2
0x0A38	0x0852      	MOVF       _IR1+3, 0
0x0A39	0x00F7      	MOVWF      R4+3
0x0A3A	0x3000      	MOVLW      0
0x0A3B	0x00F0      	MOVWF      R0
0x0A3C	0x3000      	MOVLW      0
0x0A3D	0x00F1      	MOVWF      R0+1
0x0A3E	0x3016      	MOVLW      22
0x0A3F	0x00F2      	MOVWF      R0+2
0x0A40	0x3088      	MOVLW      136
0x0A41	0x00F3      	MOVWF      R0+3
0x0A42	0x118A      	BCF        PCLATH, 3
0x0A43	0x22AD      	CALL       _Compare_Double
0x0A44	0x158A      	BSF        PCLATH, 3
0x0A45	0x3001      	MOVLW      1
0x0A46	0x1803      	BTFSC      STATUS, 0
0x0A47	0x3000      	MOVLW      0
0x0A48	0x00F0      	MOVWF      R0
0x0A49	0x0870      	MOVF       R0, 0
0x0A4A	0x1903      	BTFSC      STATUS, 2
0x0A4B	0x2A53      	GOTO       L_main40
;Robot.c,174 :: 		MOTORS_Left(sd);
0x0A4C	0x082D      	MOVF       _Sd, 0
0x0A4D	0x1683      	BSF        STATUS, 5
0x0A4E	0x00E8      	MOVWF      FARG_MOTORS_Left_v
0x0A4F	0x118A      	BCF        PCLATH, 3
0x0A50	0x2406      	CALL       _MOTORS_Left
0x0A51	0x158A      	BSF        PCLATH, 3
;Robot.c,176 :: 		}else{
0x0A52	0x2A5A      	GOTO       L_main41
L_main40:
;Robot.c,177 :: 		Etat = 0;
0x0A53	0x01ED      	CLRF       _Etat
;Robot.c,178 :: 		LCD_Cmd(_LCD_CLEAR);
0x0A54	0x3001      	MOVLW      1
0x0A55	0x1703      	BSF        STATUS, 6
0x0A56	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0A57	0x118A      	BCF        PCLATH, 3
0x0A58	0x2089      	CALL       _Lcd_Cmd
0x0A59	0x158A      	BSF        PCLATH, 3
;Robot.c,179 :: 		}
L_main41:
;Robot.c,181 :: 		break;
0x0A5A	0x2D1C      	GOTO       L_main23
;Robot.c,183 :: 		case 2: // ETAT 2  //RIGHT
L_main42:
;Robot.c,184 :: 		LCD_Out(1,1,"OBST R");
0x0A5B	0x3001      	MOVLW      1
0x0A5C	0x1683      	BSF        STATUS, 5
0x0A5D	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0A5E	0x3001      	MOVLW      1
0x0A5F	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0A60	0x30A0      	MOVLW      ?lstr8_Robot
0x0A61	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0A62	0x118A      	BCF        PCLATH, 3
0x0A63	0x22FD      	CALL       _Lcd_Out
0x0A64	0x158A      	BSF        PCLATH, 3
;Robot.c,185 :: 		if ( IR1 > 600 ) {
0x0A65	0x084F      	MOVF       _IR1, 0
0x0A66	0x00F4      	MOVWF      R4
0x0A67	0x0850      	MOVF       _IR1+1, 0
0x0A68	0x00F5      	MOVWF      R4+1
0x0A69	0x0851      	MOVF       _IR1+2, 0
0x0A6A	0x00F6      	MOVWF      R4+2
0x0A6B	0x0852      	MOVF       _IR1+3, 0
0x0A6C	0x00F7      	MOVWF      R4+3
0x0A6D	0x3000      	MOVLW      0
0x0A6E	0x00F0      	MOVWF      R0
0x0A6F	0x3000      	MOVLW      0
0x0A70	0x00F1      	MOVWF      R0+1
0x0A71	0x3016      	MOVLW      22
0x0A72	0x00F2      	MOVWF      R0+2
0x0A73	0x3088      	MOVLW      136
0x0A74	0x00F3      	MOVWF      R0+3
0x0A75	0x118A      	BCF        PCLATH, 3
0x0A76	0x22AD      	CALL       _Compare_Double
0x0A77	0x158A      	BSF        PCLATH, 3
0x0A78	0x3001      	MOVLW      1
0x0A79	0x1803      	BTFSC      STATUS, 0
0x0A7A	0x3000      	MOVLW      0
0x0A7B	0x00F0      	MOVWF      R0
0x0A7C	0x0870      	MOVF       R0, 0
0x0A7D	0x1903      	BTFSC      STATUS, 2
0x0A7E	0x2A86      	GOTO       L_main43
;Robot.c,186 :: 		MOTORS_Right(sd);
0x0A7F	0x082D      	MOVF       _Sd, 0
0x0A80	0x1683      	BSF        STATUS, 5
0x0A81	0x00E8      	MOVWF      FARG_MOTORS_Right_v
0x0A82	0x118A      	BCF        PCLATH, 3
0x0A83	0x2411      	CALL       _MOTORS_Right
0x0A84	0x158A      	BSF        PCLATH, 3
;Robot.c,188 :: 		}else{
0x0A85	0x2A8D      	GOTO       L_main44
L_main43:
;Robot.c,189 :: 		Etat = 0;
0x0A86	0x01ED      	CLRF       _Etat
;Robot.c,190 :: 		LCD_Cmd(_LCD_CLEAR);
0x0A87	0x3001      	MOVLW      1
0x0A88	0x1703      	BSF        STATUS, 6
0x0A89	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0A8A	0x118A      	BCF        PCLATH, 3
0x0A8B	0x2089      	CALL       _Lcd_Cmd
0x0A8C	0x158A      	BSF        PCLATH, 3
;Robot.c,191 :: 		}
L_main44:
;Robot.c,193 :: 		break;
0x0A8D	0x2D1C      	GOTO       L_main23
;Robot.c,195 :: 		case 3:  // ETAT 3  //SELECT BY USER
L_main45:
;Robot.c,197 :: 		if (Direction  == 1) Etat = 2;  //LEFT
0x0A8E	0x082F      	MOVF       _Direction, 0
0x0A8F	0x3A01      	XORLW      1
0x0A90	0x1D03      	BTFSS      STATUS, 2
0x0A91	0x2A95      	GOTO       L_main46
0x0A92	0x3002      	MOVLW      2
0x0A93	0x00ED      	MOVWF      _Etat
0x0A94	0x2A97      	GOTO       L_main47
L_main46:
;Robot.c,198 :: 		else Etat = 1;          //RIGHT
0x0A95	0x3001      	MOVLW      1
0x0A96	0x00ED      	MOVWF      _Etat
L_main47:
;Robot.c,200 :: 		break;
0x0A97	0x2D1C      	GOTO       L_main23
;Robot.c,203 :: 		case 4:  // ETAT 4 # RETURN ARROUND
L_main48:
;Robot.c,204 :: 		LCD_out(1,6,"AR");
0x0A98	0x3001      	MOVLW      1
0x0A99	0x1683      	BSF        STATUS, 5
0x0A9A	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0A9B	0x3006      	MOVLW      6
0x0A9C	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0A9D	0x306A      	MOVLW      ?lstr9_Robot
0x0A9E	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0A9F	0x118A      	BCF        PCLATH, 3
0x0AA0	0x22FD      	CALL       _Lcd_Out
0x0AA1	0x158A      	BSF        PCLATH, 3
;Robot.c,205 :: 		MOTORS_Mill_Around();
0x0AA2	0x118A      	BCF        PCLATH, 3
0x0AA3	0x23CC      	CALL       _MOTORS_Mill_Around
0x0AA4	0x158A      	BSF        PCLATH, 3
;Robot.c,206 :: 		Etat = 0;
0x0AA5	0x01ED      	CLRF       _Etat
;Robot.c,207 :: 		LCD_Cmd(_LCD_CLEAR);
0x0AA6	0x3001      	MOVLW      1
0x0AA7	0x1703      	BSF        STATUS, 6
0x0AA8	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0AA9	0x118A      	BCF        PCLATH, 3
0x0AAA	0x2089      	CALL       _Lcd_Cmd
0x0AAB	0x158A      	BSF        PCLATH, 3
;Robot.c,209 :: 		break;
0x0AAC	0x2D1C      	GOTO       L_main23
;Robot.c,212 :: 		case 5:    // ETAT 5 #SKIP LEFT
L_main49:
;Robot.c,213 :: 		LCD_Out(1,1,"SL");
0x0AAD	0x3001      	MOVLW      1
0x0AAE	0x1683      	BSF        STATUS, 5
0x0AAF	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0AB0	0x3001      	MOVLW      1
0x0AB1	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0AB2	0x30C5      	MOVLW      ?lstr10_Robot
0x0AB3	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0AB4	0x118A      	BCF        PCLATH, 3
0x0AB5	0x22FD      	CALL       _Lcd_Out
0x0AB6	0x158A      	BSF        PCLATH, 3
;Robot.c,214 :: 		MOTORS_Left(sd);
0x0AB7	0x1283      	BCF        STATUS, 5
0x0AB8	0x082D      	MOVF       _Sd, 0
0x0AB9	0x1683      	BSF        STATUS, 5
0x0ABA	0x00E8      	MOVWF      FARG_MOTORS_Left_v
0x0ABB	0x118A      	BCF        PCLATH, 3
0x0ABC	0x2406      	CALL       _MOTORS_Left
0x0ABD	0x158A      	BSF        PCLATH, 3
;Robot.c,215 :: 		if (IR2 < 700){
0x0ABE	0x3000      	MOVLW      0
0x0ABF	0x00F4      	MOVWF      R4
0x0AC0	0x3000      	MOVLW      0
0x0AC1	0x00F5      	MOVWF      R4+1
0x0AC2	0x302F      	MOVLW      47
0x0AC3	0x00F6      	MOVWF      R4+2
0x0AC4	0x3088      	MOVLW      136
0x0AC5	0x00F7      	MOVWF      R4+3
0x0AC6	0x1683      	BSF        STATUS, 5
0x0AC7	0x0853      	MOVF       _IR2, 0
0x0AC8	0x00F0      	MOVWF      R0
0x0AC9	0x0854      	MOVF       _IR2+1, 0
0x0ACA	0x00F1      	MOVWF      R0+1
0x0ACB	0x0855      	MOVF       _IR2+2, 0
0x0ACC	0x00F2      	MOVWF      R0+2
0x0ACD	0x0856      	MOVF       _IR2+3, 0
0x0ACE	0x00F3      	MOVWF      R0+3
0x0ACF	0x118A      	BCF        PCLATH, 3
0x0AD0	0x22AD      	CALL       _Compare_Double
0x0AD1	0x158A      	BSF        PCLATH, 3
0x0AD2	0x3001      	MOVLW      1
0x0AD3	0x1803      	BTFSC      STATUS, 0
0x0AD4	0x3000      	MOVLW      0
0x0AD5	0x00F0      	MOVWF      R0
0x0AD6	0x0870      	MOVF       R0, 0
0x0AD7	0x1903      	BTFSC      STATUS, 2
0x0AD8	0x2AE0      	GOTO       L_main50
;Robot.c,216 :: 		Etat = 0;
0x0AD9	0x01ED      	CLRF       _Etat
;Robot.c,217 :: 		LCD_Cmd(_LCD_CLEAR);
0x0ADA	0x3001      	MOVLW      1
0x0ADB	0x1703      	BSF        STATUS, 6
0x0ADC	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0ADD	0x118A      	BCF        PCLATH, 3
0x0ADE	0x2089      	CALL       _Lcd_Cmd
0x0ADF	0x158A      	BSF        PCLATH, 3
;Robot.c,218 :: 		}
L_main50:
;Robot.c,220 :: 		break;
0x0AE0	0x2D1C      	GOTO       L_main23
;Robot.c,224 :: 		case 6:   // ETAT 6 #SKIP RIGHT
L_main51:
;Robot.c,225 :: 		LCD_Out(1,1,"SR");
0x0AE1	0x3001      	MOVLW      1
0x0AE2	0x1683      	BSF        STATUS, 5
0x0AE3	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0AE4	0x3001      	MOVLW      1
0x0AE5	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0AE6	0x30C8      	MOVLW      ?lstr11_Robot
0x0AE7	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0AE8	0x118A      	BCF        PCLATH, 3
0x0AE9	0x22FD      	CALL       _Lcd_Out
0x0AEA	0x158A      	BSF        PCLATH, 3
;Robot.c,226 :: 		MOTORS_Right(sd);
0x0AEB	0x1283      	BCF        STATUS, 5
0x0AEC	0x082D      	MOVF       _Sd, 0
0x0AED	0x1683      	BSF        STATUS, 5
0x0AEE	0x00E8      	MOVWF      FARG_MOTORS_Right_v
0x0AEF	0x118A      	BCF        PCLATH, 3
0x0AF0	0x2411      	CALL       _MOTORS_Right
0x0AF1	0x158A      	BSF        PCLATH, 3
;Robot.c,227 :: 		if (IR3 < 700){
0x0AF2	0x3000      	MOVLW      0
0x0AF3	0x00F4      	MOVWF      R4
0x0AF4	0x3000      	MOVLW      0
0x0AF5	0x00F5      	MOVWF      R4+1
0x0AF6	0x302F      	MOVLW      47
0x0AF7	0x00F6      	MOVWF      R4+2
0x0AF8	0x3088      	MOVLW      136
0x0AF9	0x00F7      	MOVWF      R4+3
0x0AFA	0x1683      	BSF        STATUS, 5
0x0AFB	0x084B      	MOVF       _IR3, 0
0x0AFC	0x00F0      	MOVWF      R0
0x0AFD	0x084C      	MOVF       _IR3+1, 0
0x0AFE	0x00F1      	MOVWF      R0+1
0x0AFF	0x084D      	MOVF       _IR3+2, 0
0x0B00	0x00F2      	MOVWF      R0+2
0x0B01	0x084E      	MOVF       _IR3+3, 0
0x0B02	0x00F3      	MOVWF      R0+3
0x0B03	0x118A      	BCF        PCLATH, 3
0x0B04	0x22AD      	CALL       _Compare_Double
0x0B05	0x158A      	BSF        PCLATH, 3
0x0B06	0x3001      	MOVLW      1
0x0B07	0x1803      	BTFSC      STATUS, 0
0x0B08	0x3000      	MOVLW      0
0x0B09	0x00F0      	MOVWF      R0
0x0B0A	0x0870      	MOVF       R0, 0
0x0B0B	0x1903      	BTFSC      STATUS, 2
0x0B0C	0x2B14      	GOTO       L_main52
;Robot.c,228 :: 		Etat = 0;
0x0B0D	0x01ED      	CLRF       _Etat
;Robot.c,229 :: 		LCD_Cmd(_LCD_CLEAR);
0x0B0E	0x3001      	MOVLW      1
0x0B0F	0x1703      	BSF        STATUS, 6
0x0B10	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0B11	0x118A      	BCF        PCLATH, 3
0x0B12	0x2089      	CALL       _Lcd_Cmd
0x0B13	0x158A      	BSF        PCLATH, 3
;Robot.c,230 :: 		}
L_main52:
;Robot.c,232 :: 		break;
0x0B14	0x2D1C      	GOTO       L_main23
;Robot.c,236 :: 		case 7:
L_main53:
;Robot.c,238 :: 		Lcd_Out(1,1,CONFIG);
0x0B15	0x3001      	MOVLW      1
0x0B16	0x1683      	BSF        STATUS, 5
0x0B17	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0B18	0x3001      	MOVLW      1
0x0B19	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0B1A	0x30AE      	MOVLW      _CONFIG
0x0B1B	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0B1C	0x118A      	BCF        PCLATH, 3
0x0B1D	0x22FD      	CALL       _Lcd_Out
0x0B1E	0x158A      	BSF        PCLATH, 3
;Robot.c,239 :: 		Lcd_Out(2,2,OptionC);
0x0B1F	0x3002      	MOVLW      2
0x0B20	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0B21	0x3002      	MOVLW      2
0x0B22	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0B23	0x30B5      	MOVLW      _OptionC
0x0B24	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0B25	0x118A      	BCF        PCLATH, 3
0x0B26	0x22FD      	CALL       _Lcd_Out
0x0B27	0x158A      	BSF        PCLATH, 3
;Robot.c,241 :: 		if (SL){
0x0B28	0x1283      	BCF        STATUS, 5
0x0B29	0x1D06      	BTFSS      PORTB, 2
0x0B2A	0x2B39      	GOTO       L_main54
;Robot.c,242 :: 		CSD = 1;
0x0B2B	0x3001      	MOVLW      1
0x0B2C	0x00E9      	MOVWF      _CSD
;Robot.c,243 :: 		Delay_ms(200);
0x0B2D	0x3005      	MOVLW      5
0x0B2E	0x00FB      	MOVWF      R11
0x0B2F	0x300F      	MOVLW      15
0x0B30	0x00FC      	MOVWF      R12
0x0B31	0x30F1      	MOVLW      241
0x0B32	0x00FD      	MOVWF      R13
L_main55:
0x0B33	0x0BFD      	DECFSZ     R13, 1
0x0B34	0x2B33      	GOTO       L_main55
0x0B35	0x0BFC      	DECFSZ     R12, 1
0x0B36	0x2B33      	GOTO       L_main55
0x0B37	0x0BFB      	DECFSZ     R11, 1
0x0B38	0x2B33      	GOTO       L_main55
;Robot.c,244 :: 		}
L_main54:
;Robot.c,246 :: 		if (SR) {
0x0B39	0x1D86      	BTFSS      PORTB, 3
0x0B3A	0x2B49      	GOTO       L_main56
;Robot.c,247 :: 		CSD = 2;
0x0B3B	0x3002      	MOVLW      2
0x0B3C	0x00E9      	MOVWF      _CSD
;Robot.c,248 :: 		Delay_ms(200);
0x0B3D	0x3005      	MOVLW      5
0x0B3E	0x00FB      	MOVWF      R11
0x0B3F	0x300F      	MOVLW      15
0x0B40	0x00FC      	MOVWF      R12
0x0B41	0x30F1      	MOVLW      241
0x0B42	0x00FD      	MOVWF      R13
L_main57:
0x0B43	0x0BFD      	DECFSZ     R13, 1
0x0B44	0x2B43      	GOTO       L_main57
0x0B45	0x0BFC      	DECFSZ     R12, 1
0x0B46	0x2B43      	GOTO       L_main57
0x0B47	0x0BFB      	DECFSZ     R11, 1
0x0B48	0x2B43      	GOTO       L_main57
;Robot.c,249 :: 		}
L_main56:
;Robot.c,251 :: 		if (CSD == 1) {
0x0B49	0x0869      	MOVF       _CSD, 0
0x0B4A	0x3A01      	XORLW      1
0x0B4B	0x1D03      	BTFSS      STATUS, 2
0x0B4C	0x2B61      	GOTO       L_main58
;Robot.c,253 :: 		Lcd_Out(2,1,Tag);
0x0B4D	0x3002      	MOVLW      2
0x0B4E	0x1683      	BSF        STATUS, 5
0x0B4F	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0B50	0x3001      	MOVLW      1
0x0B51	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0B52	0x3055      	MOVLW      _Tag
0x0B53	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0B54	0x118A      	BCF        PCLATH, 3
0x0B55	0x22FD      	CALL       _Lcd_Out
0x0B56	0x158A      	BSF        PCLATH, 3
;Robot.c,254 :: 		Lcd_Out(2,10,Vid);
0x0B57	0x3002      	MOVLW      2
0x0B58	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0B59	0x300A      	MOVLW      10
0x0B5A	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0B5B	0x3057      	MOVLW      _Vid
0x0B5C	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0B5D	0x118A      	BCF        PCLATH, 3
0x0B5E	0x22FD      	CALL       _Lcd_Out
0x0B5F	0x158A      	BSF        PCLATH, 3
;Robot.c,256 :: 		}else{
0x0B60	0x2B74      	GOTO       L_main59
L_main58:
0x0B61	0x1683      	BSF        STATUS, 5
;Robot.c,258 :: 		Lcd_Out(2,10,Tag);
0x0B62	0x3002      	MOVLW      2
0x0B63	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0B64	0x300A      	MOVLW      10
0x0B65	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0B66	0x3055      	MOVLW      _Tag
0x0B67	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0B68	0x118A      	BCF        PCLATH, 3
0x0B69	0x22FD      	CALL       _Lcd_Out
0x0B6A	0x158A      	BSF        PCLATH, 3
;Robot.c,259 :: 		Lcd_Out(2,1,Vid);
0x0B6B	0x3002      	MOVLW      2
0x0B6C	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0B6D	0x3001      	MOVLW      1
0x0B6E	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0B6F	0x3057      	MOVLW      _Vid
0x0B70	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0B71	0x118A      	BCF        PCLATH, 3
0x0B72	0x22FD      	CALL       _Lcd_Out
0x0B73	0x158A      	BSF        PCLATH, 3
;Robot.c,261 :: 		}
L_main59:
;Robot.c,263 :: 		if (OK){
0x0B74	0x1283      	BCF        STATUS, 5
0x0B75	0x1C86      	BTFSS      PORTB, 1
0x0B76	0x2B86      	GOTO       L_main60
;Robot.c,265 :: 		if(CSD == 1) Etat = 8;
0x0B77	0x0869      	MOVF       _CSD, 0
0x0B78	0x3A01      	XORLW      1
0x0B79	0x1D03      	BTFSS      STATUS, 2
0x0B7A	0x2B7E      	GOTO       L_main61
0x0B7B	0x3008      	MOVLW      8
0x0B7C	0x00ED      	MOVWF      _Etat
0x0B7D	0x2B80      	GOTO       L_main62
L_main61:
;Robot.c,266 :: 		else Etat = 9;
0x0B7E	0x3009      	MOVLW      9
0x0B7F	0x00ED      	MOVWF      _Etat
L_main62:
;Robot.c,267 :: 		LCD_Cmd(_LCD_CLEAR);
0x0B80	0x3001      	MOVLW      1
0x0B81	0x1703      	BSF        STATUS, 6
0x0B82	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0B83	0x118A      	BCF        PCLATH, 3
0x0B84	0x2089      	CALL       _Lcd_Cmd
0x0B85	0x158A      	BSF        PCLATH, 3
;Robot.c,269 :: 		}
L_main60:
;Robot.c,272 :: 		break;
0x0B86	0x2D1C      	GOTO       L_main23
;Robot.c,274 :: 		case 8:
L_main63:
;Robot.c,277 :: 		Lcd_Out(2,2,OptionS);
0x0B87	0x3002      	MOVLW      2
0x0B88	0x1683      	BSF        STATUS, 5
0x0B89	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0B8A	0x3002      	MOVLW      2
0x0B8B	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0B8C	0x3042      	MOVLW      _OptionS
0x0B8D	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0B8E	0x118A      	BCF        PCLATH, 3
0x0B8F	0x22FD      	CALL       _Lcd_Out
0x0B90	0x158A      	BSF        PCLATH, 3
;Robot.c,278 :: 		if (Speed == 1 ){
0x0B91	0x1283      	BCF        STATUS, 5
0x0B92	0x082E      	MOVF       _Speed, 0
0x0B93	0x3A01      	XORLW      1
0x0B94	0x1D03      	BTFSS      STATUS, 2
0x0B95	0x2BC5      	GOTO       L_main64
;Robot.c,279 :: 		Lcd_Out(2,1,Tag);
0x0B96	0x3002      	MOVLW      2
0x0B97	0x1683      	BSF        STATUS, 5
0x0B98	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0B99	0x3001      	MOVLW      1
0x0B9A	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0B9B	0x3055      	MOVLW      _Tag
0x0B9C	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0B9D	0x118A      	BCF        PCLATH, 3
0x0B9E	0x22FD      	CALL       _Lcd_Out
0x0B9F	0x158A      	BSF        PCLATH, 3
;Robot.c,280 :: 		Lcd_Out(2,6,Vid);
0x0BA0	0x3002      	MOVLW      2
0x0BA1	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0BA2	0x3006      	MOVLW      6
0x0BA3	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0BA4	0x3057      	MOVLW      _Vid
0x0BA5	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0BA6	0x118A      	BCF        PCLATH, 3
0x0BA7	0x22FD      	CALL       _Lcd_Out
0x0BA8	0x158A      	BSF        PCLATH, 3
;Robot.c,281 :: 		Lcd_Out(2,11,Vid);
0x0BA9	0x3002      	MOVLW      2
0x0BAA	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0BAB	0x300B      	MOVLW      11
0x0BAC	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0BAD	0x3057      	MOVLW      _Vid
0x0BAE	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0BAF	0x118A      	BCF        PCLATH, 3
0x0BB0	0x22FD      	CALL       _Lcd_Out
0x0BB1	0x158A      	BSF        PCLATH, 3
;Robot.c,282 :: 		if (SR){
0x0BB2	0x1283      	BCF        STATUS, 5
0x0BB3	0x1D86      	BTFSS      PORTB, 3
0x0BB4	0x2BC4      	GOTO       L_main65
;Robot.c,283 :: 		Speed = 2;
0x0BB5	0x3002      	MOVLW      2
0x0BB6	0x00AE      	MOVWF      _Speed
;Robot.c,284 :: 		Delay_ms(300);
0x0BB7	0x3007      	MOVLW      7
0x0BB8	0x00FB      	MOVWF      R11
0x0BB9	0x3017      	MOVLW      23
0x0BBA	0x00FC      	MOVWF      R12
0x0BBB	0x306A      	MOVLW      106
0x0BBC	0x00FD      	MOVWF      R13
L_main66:
0x0BBD	0x0BFD      	DECFSZ     R13, 1
0x0BBE	0x2BBD      	GOTO       L_main66
0x0BBF	0x0BFC      	DECFSZ     R12, 1
0x0BC0	0x2BBD      	GOTO       L_main66
0x0BC1	0x0BFB      	DECFSZ     R11, 1
0x0BC2	0x2BBD      	GOTO       L_main66
0x0BC3	0x0000      	NOP
;Robot.c,285 :: 		}
L_main65:
;Robot.c,287 :: 		}else if (Speed == 2){
0x0BC4	0x2C37      	GOTO       L_main67
L_main64:
0x0BC5	0x082E      	MOVF       _Speed, 0
0x0BC6	0x3A02      	XORLW      2
0x0BC7	0x1D03      	BTFSS      STATUS, 2
0x0BC8	0x2C09      	GOTO       L_main68
;Robot.c,288 :: 		Lcd_Out(2,1,Vid);
0x0BC9	0x3002      	MOVLW      2
0x0BCA	0x1683      	BSF        STATUS, 5
0x0BCB	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0BCC	0x3001      	MOVLW      1
0x0BCD	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0BCE	0x3057      	MOVLW      _Vid
0x0BCF	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0BD0	0x118A      	BCF        PCLATH, 3
0x0BD1	0x22FD      	CALL       _Lcd_Out
0x0BD2	0x158A      	BSF        PCLATH, 3
;Robot.c,289 :: 		Lcd_Out(2,7,Tag);
0x0BD3	0x3002      	MOVLW      2
0x0BD4	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0BD5	0x3007      	MOVLW      7
0x0BD6	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0BD7	0x3055      	MOVLW      _Tag
0x0BD8	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0BD9	0x118A      	BCF        PCLATH, 3
0x0BDA	0x22FD      	CALL       _Lcd_Out
0x0BDB	0x158A      	BSF        PCLATH, 3
;Robot.c,290 :: 		Lcd_Out(2,13,Vid);
0x0BDC	0x3002      	MOVLW      2
0x0BDD	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0BDE	0x300D      	MOVLW      13
0x0BDF	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0BE0	0x3057      	MOVLW      _Vid
0x0BE1	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0BE2	0x118A      	BCF        PCLATH, 3
0x0BE3	0x22FD      	CALL       _Lcd_Out
0x0BE4	0x158A      	BSF        PCLATH, 3
;Robot.c,291 :: 		if (SL) {
0x0BE5	0x1283      	BCF        STATUS, 5
0x0BE6	0x1D06      	BTFSS      PORTB, 2
0x0BE7	0x2BF7      	GOTO       L_main69
;Robot.c,292 :: 		Speed = 1;
0x0BE8	0x3001      	MOVLW      1
0x0BE9	0x00AE      	MOVWF      _Speed
;Robot.c,293 :: 		Delay_ms(300); }
0x0BEA	0x3007      	MOVLW      7
0x0BEB	0x00FB      	MOVWF      R11
0x0BEC	0x3017      	MOVLW      23
0x0BED	0x00FC      	MOVWF      R12
0x0BEE	0x306A      	MOVLW      106
0x0BEF	0x00FD      	MOVWF      R13
L_main70:
0x0BF0	0x0BFD      	DECFSZ     R13, 1
0x0BF1	0x2BF0      	GOTO       L_main70
0x0BF2	0x0BFC      	DECFSZ     R12, 1
0x0BF3	0x2BF0      	GOTO       L_main70
0x0BF4	0x0BFB      	DECFSZ     R11, 1
0x0BF5	0x2BF0      	GOTO       L_main70
0x0BF6	0x0000      	NOP
L_main69:
;Robot.c,295 :: 		if (SR){
0x0BF7	0x1D86      	BTFSS      PORTB, 3
0x0BF8	0x2C08      	GOTO       L_main71
;Robot.c,296 :: 		Speed = 3;
0x0BF9	0x3003      	MOVLW      3
0x0BFA	0x00AE      	MOVWF      _Speed
;Robot.c,297 :: 		Delay_ms(300);
0x0BFB	0x3007      	MOVLW      7
0x0BFC	0x00FB      	MOVWF      R11
0x0BFD	0x3017      	MOVLW      23
0x0BFE	0x00FC      	MOVWF      R12
0x0BFF	0x306A      	MOVLW      106
0x0C00	0x00FD      	MOVWF      R13
L_main72:
0x0C01	0x0BFD      	DECFSZ     R13, 1
0x0C02	0x2C01      	GOTO       L_main72
0x0C03	0x0BFC      	DECFSZ     R12, 1
0x0C04	0x2C01      	GOTO       L_main72
0x0C05	0x0BFB      	DECFSZ     R11, 1
0x0C06	0x2C01      	GOTO       L_main72
0x0C07	0x0000      	NOP
;Robot.c,298 :: 		}
L_main71:
;Robot.c,299 :: 		}else{
0x0C08	0x2C37      	GOTO       L_main73
L_main68:
;Robot.c,301 :: 		Lcd_Out(2,1,Vid);
0x0C09	0x3002      	MOVLW      2
0x0C0A	0x1683      	BSF        STATUS, 5
0x0C0B	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0C0C	0x3001      	MOVLW      1
0x0C0D	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0C0E	0x3057      	MOVLW      _Vid
0x0C0F	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0C10	0x118A      	BCF        PCLATH, 3
0x0C11	0x22FD      	CALL       _Lcd_Out
0x0C12	0x158A      	BSF        PCLATH, 3
;Robot.c,302 :: 		Lcd_Out(2,6,Vid);
0x0C13	0x3002      	MOVLW      2
0x0C14	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0C15	0x3006      	MOVLW      6
0x0C16	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0C17	0x3057      	MOVLW      _Vid
0x0C18	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0C19	0x118A      	BCF        PCLATH, 3
0x0C1A	0x22FD      	CALL       _Lcd_Out
0x0C1B	0x158A      	BSF        PCLATH, 3
;Robot.c,303 :: 		Lcd_Out(2,12,Tag);
0x0C1C	0x3002      	MOVLW      2
0x0C1D	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0C1E	0x300C      	MOVLW      12
0x0C1F	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0C20	0x3055      	MOVLW      _Tag
0x0C21	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0C22	0x118A      	BCF        PCLATH, 3
0x0C23	0x22FD      	CALL       _Lcd_Out
0x0C24	0x158A      	BSF        PCLATH, 3
;Robot.c,304 :: 		if (SL == 1) {
0x0C25	0x1283      	BCF        STATUS, 5
0x0C26	0x1D06      	BTFSS      PORTB, 2
0x0C27	0x2C37      	GOTO       L_main74
;Robot.c,305 :: 		Speed = 2;
0x0C28	0x3002      	MOVLW      2
0x0C29	0x00AE      	MOVWF      _Speed
;Robot.c,306 :: 		Delay_ms(300); }
0x0C2A	0x3007      	MOVLW      7
0x0C2B	0x00FB      	MOVWF      R11
0x0C2C	0x3017      	MOVLW      23
0x0C2D	0x00FC      	MOVWF      R12
0x0C2E	0x306A      	MOVLW      106
0x0C2F	0x00FD      	MOVWF      R13
L_main75:
0x0C30	0x0BFD      	DECFSZ     R13, 1
0x0C31	0x2C30      	GOTO       L_main75
0x0C32	0x0BFC      	DECFSZ     R12, 1
0x0C33	0x2C30      	GOTO       L_main75
0x0C34	0x0BFB      	DECFSZ     R11, 1
0x0C35	0x2C30      	GOTO       L_main75
0x0C36	0x0000      	NOP
L_main74:
;Robot.c,307 :: 		}
L_main73:
L_main67:
;Robot.c,309 :: 		if (CG){
0x0C37	0x1D87      	BTFSS      PORTC, 3
0x0C38	0x2C68      	GOTO       L_main76
;Robot.c,310 :: 		LCD_Cmd(_LCD_CLEAR);
0x0C39	0x3001      	MOVLW      1
0x0C3A	0x1703      	BSF        STATUS, 6
0x0C3B	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0C3C	0x118A      	BCF        PCLATH, 3
0x0C3D	0x2089      	CALL       _Lcd_Cmd
0x0C3E	0x158A      	BSF        PCLATH, 3
;Robot.c,311 :: 		Lcd_Out(1,8,Done);
0x0C3F	0x3001      	MOVLW      1
0x0C40	0x1683      	BSF        STATUS, 5
0x0C41	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0C42	0x3008      	MOVLW      8
0x0C43	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0C44	0x3052      	MOVLW      _Done
0x0C45	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0C46	0x118A      	BCF        PCLATH, 3
0x0C47	0x22FD      	CALL       _Lcd_Out
0x0C48	0x158A      	BSF        PCLATH, 3
;Robot.c,312 :: 		EEPROM_WRITE(SPEED,Speed);
0x0C49	0x3010      	MOVLW      16
0x0C4A	0x00E8      	MOVWF      FARG_EEPROM_Write_Address
0x0C4B	0x1283      	BCF        STATUS, 5
0x0C4C	0x082E      	MOVF       _Speed, 0
0x0C4D	0x1683      	BSF        STATUS, 5
0x0C4E	0x00E9      	MOVWF      FARG_EEPROM_Write_data_
0x0C4F	0x118A      	BCF        PCLATH, 3
0x0C50	0x23E3      	CALL       _EEPROM_Write
0x0C51	0x158A      	BSF        PCLATH, 3
;Robot.c,313 :: 		Delay_ms(1000);
0x0C52	0x3015      	MOVLW      21
0x0C53	0x00FB      	MOVWF      R11
0x0C54	0x304B      	MOVLW      75
0x0C55	0x00FC      	MOVWF      R12
0x0C56	0x30BE      	MOVLW      190
0x0C57	0x00FD      	MOVWF      R13
L_main77:
0x0C58	0x0BFD      	DECFSZ     R13, 1
0x0C59	0x2C58      	GOTO       L_main77
0x0C5A	0x0BFC      	DECFSZ     R12, 1
0x0C5B	0x2C58      	GOTO       L_main77
0x0C5C	0x0BFB      	DECFSZ     R11, 1
0x0C5D	0x2C58      	GOTO       L_main77
0x0C5E	0x0000      	NOP
;Robot.c,314 :: 		Etat = 0;
0x0C5F	0x1283      	BCF        STATUS, 5
0x0C60	0x1303      	BCF        STATUS, 6
0x0C61	0x01ED      	CLRF       _Etat
;Robot.c,315 :: 		LCD_Cmd(_LCD_CLEAR);
0x0C62	0x3001      	MOVLW      1
0x0C63	0x1703      	BSF        STATUS, 6
0x0C64	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0C65	0x118A      	BCF        PCLATH, 3
0x0C66	0x2089      	CALL       _Lcd_Cmd
0x0C67	0x158A      	BSF        PCLATH, 3
;Robot.c,316 :: 		}
L_main76:
;Robot.c,320 :: 		break;
0x0C68	0x2D1C      	GOTO       L_main23
;Robot.c,322 :: 		case 9:
L_main78:
;Robot.c,324 :: 		Lcd_Out(2,2,OptionD);
0x0C69	0x3002      	MOVLW      2
0x0C6A	0x1683      	BSF        STATUS, 5
0x0C6B	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0C6C	0x3002      	MOVLW      2
0x0C6D	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0C6E	0x305A      	MOVLW      _OptionD
0x0C6F	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0C70	0x118A      	BCF        PCLATH, 3
0x0C71	0x22FD      	CALL       _Lcd_Out
0x0C72	0x158A      	BSF        PCLATH, 3
;Robot.c,325 :: 		if (SL) {
0x0C73	0x1283      	BCF        STATUS, 5
0x0C74	0x1D06      	BTFSS      PORTB, 2
0x0C75	0x2C85      	GOTO       L_main79
;Robot.c,326 :: 		Direction = 1;
0x0C76	0x3001      	MOVLW      1
0x0C77	0x00AF      	MOVWF      _Direction
;Robot.c,327 :: 		Delay_ms(300); }
0x0C78	0x3007      	MOVLW      7
0x0C79	0x00FB      	MOVWF      R11
0x0C7A	0x3017      	MOVLW      23
0x0C7B	0x00FC      	MOVWF      R12
0x0C7C	0x306A      	MOVLW      106
0x0C7D	0x00FD      	MOVWF      R13
L_main80:
0x0C7E	0x0BFD      	DECFSZ     R13, 1
0x0C7F	0x2C7E      	GOTO       L_main80
0x0C80	0x0BFC      	DECFSZ     R12, 1
0x0C81	0x2C7E      	GOTO       L_main80
0x0C82	0x0BFB      	DECFSZ     R11, 1
0x0C83	0x2C7E      	GOTO       L_main80
0x0C84	0x0000      	NOP
L_main79:
;Robot.c,328 :: 		if (SR) {
0x0C85	0x1D86      	BTFSS      PORTB, 3
0x0C86	0x2C96      	GOTO       L_main81
;Robot.c,329 :: 		Direction = 2;
0x0C87	0x3002      	MOVLW      2
0x0C88	0x00AF      	MOVWF      _Direction
;Robot.c,330 :: 		Delay_ms(300);
0x0C89	0x3007      	MOVLW      7
0x0C8A	0x00FB      	MOVWF      R11
0x0C8B	0x3017      	MOVLW      23
0x0C8C	0x00FC      	MOVWF      R12
0x0C8D	0x306A      	MOVLW      106
0x0C8E	0x00FD      	MOVWF      R13
L_main82:
0x0C8F	0x0BFD      	DECFSZ     R13, 1
0x0C90	0x2C8F      	GOTO       L_main82
0x0C91	0x0BFC      	DECFSZ     R12, 1
0x0C92	0x2C8F      	GOTO       L_main82
0x0C93	0x0BFB      	DECFSZ     R11, 1
0x0C94	0x2C8F      	GOTO       L_main82
0x0C95	0x0000      	NOP
;Robot.c,331 :: 		}
L_main81:
;Robot.c,333 :: 		if (Direction == 1) {
0x0C96	0x082F      	MOVF       _Direction, 0
0x0C97	0x3A01      	XORLW      1
0x0C98	0x1D03      	BTFSS      STATUS, 2
0x0C99	0x2CAE      	GOTO       L_main83
;Robot.c,334 :: 		Lcd_Out(2,1,Tag);
0x0C9A	0x3002      	MOVLW      2
0x0C9B	0x1683      	BSF        STATUS, 5
0x0C9C	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0C9D	0x3001      	MOVLW      1
0x0C9E	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0C9F	0x3055      	MOVLW      _Tag
0x0CA0	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0CA1	0x118A      	BCF        PCLATH, 3
0x0CA2	0x22FD      	CALL       _Lcd_Out
0x0CA3	0x158A      	BSF        PCLATH, 3
;Robot.c,335 :: 		Lcd_Out(2,10,Vid);
0x0CA4	0x3002      	MOVLW      2
0x0CA5	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0CA6	0x300A      	MOVLW      10
0x0CA7	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0CA8	0x3057      	MOVLW      _Vid
0x0CA9	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0CAA	0x118A      	BCF        PCLATH, 3
0x0CAB	0x22FD      	CALL       _Lcd_Out
0x0CAC	0x158A      	BSF        PCLATH, 3
;Robot.c,336 :: 		}else{
0x0CAD	0x2CC1      	GOTO       L_main84
L_main83:
0x0CAE	0x1683      	BSF        STATUS, 5
;Robot.c,337 :: 		Lcd_Out(2,10,Tag);
0x0CAF	0x3002      	MOVLW      2
0x0CB0	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0CB1	0x300A      	MOVLW      10
0x0CB2	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0CB3	0x3055      	MOVLW      _Tag
0x0CB4	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0CB5	0x118A      	BCF        PCLATH, 3
0x0CB6	0x22FD      	CALL       _Lcd_Out
0x0CB7	0x158A      	BSF        PCLATH, 3
;Robot.c,338 :: 		Lcd_Out(2,1,Vid);
0x0CB8	0x3002      	MOVLW      2
0x0CB9	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0CBA	0x3001      	MOVLW      1
0x0CBB	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0CBC	0x3057      	MOVLW      _Vid
0x0CBD	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0CBE	0x118A      	BCF        PCLATH, 3
0x0CBF	0x22FD      	CALL       _Lcd_Out
0x0CC0	0x158A      	BSF        PCLATH, 3
;Robot.c,339 :: 		}
L_main84:
;Robot.c,341 :: 		if (CG){
0x0CC1	0x1283      	BCF        STATUS, 5
0x0CC2	0x1D87      	BTFSS      PORTC, 3
0x0CC3	0x2CF3      	GOTO       L_main85
;Robot.c,342 :: 		LCD_Cmd(_LCD_CLEAR);
0x0CC4	0x3001      	MOVLW      1
0x0CC5	0x1703      	BSF        STATUS, 6
0x0CC6	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0CC7	0x118A      	BCF        PCLATH, 3
0x0CC8	0x2089      	CALL       _Lcd_Cmd
0x0CC9	0x158A      	BSF        PCLATH, 3
;Robot.c,343 :: 		Lcd_Out(1,8,Done);
0x0CCA	0x3001      	MOVLW      1
0x0CCB	0x1683      	BSF        STATUS, 5
0x0CCC	0x00E8      	MOVWF      FARG_Lcd_Out_row
0x0CCD	0x3008      	MOVLW      8
0x0CCE	0x00E9      	MOVWF      FARG_Lcd_Out_column
0x0CCF	0x3052      	MOVLW      _Done
0x0CD0	0x00EA      	MOVWF      FARG_Lcd_Out_text
0x0CD1	0x118A      	BCF        PCLATH, 3
0x0CD2	0x22FD      	CALL       _Lcd_Out
0x0CD3	0x158A      	BSF        PCLATH, 3
;Robot.c,344 :: 		EEPROM_WRITE(DIRECTION,Direction);
0x0CD4	0x3020      	MOVLW      32
0x0CD5	0x00E8      	MOVWF      FARG_EEPROM_Write_Address
0x0CD6	0x1283      	BCF        STATUS, 5
0x0CD7	0x082F      	MOVF       _Direction, 0
0x0CD8	0x1683      	BSF        STATUS, 5
0x0CD9	0x00E9      	MOVWF      FARG_EEPROM_Write_data_
0x0CDA	0x118A      	BCF        PCLATH, 3
0x0CDB	0x23E3      	CALL       _EEPROM_Write
0x0CDC	0x158A      	BSF        PCLATH, 3
;Robot.c,345 :: 		Delay_ms(1000);
0x0CDD	0x3015      	MOVLW      21
0x0CDE	0x00FB      	MOVWF      R11
0x0CDF	0x304B      	MOVLW      75
0x0CE0	0x00FC      	MOVWF      R12
0x0CE1	0x30BE      	MOVLW      190
0x0CE2	0x00FD      	MOVWF      R13
L_main86:
0x0CE3	0x0BFD      	DECFSZ     R13, 1
0x0CE4	0x2CE3      	GOTO       L_main86
0x0CE5	0x0BFC      	DECFSZ     R12, 1
0x0CE6	0x2CE3      	GOTO       L_main86
0x0CE7	0x0BFB      	DECFSZ     R11, 1
0x0CE8	0x2CE3      	GOTO       L_main86
0x0CE9	0x0000      	NOP
;Robot.c,346 :: 		Etat = 0;
0x0CEA	0x1283      	BCF        STATUS, 5
0x0CEB	0x1303      	BCF        STATUS, 6
0x0CEC	0x01ED      	CLRF       _Etat
;Robot.c,347 :: 		LCD_Cmd(_LCD_CLEAR);
0x0CED	0x3001      	MOVLW      1
0x0CEE	0x1703      	BSF        STATUS, 6
0x0CEF	0x0090      	MOVWF      FARG_Lcd_Cmd_out_char
0x0CF0	0x118A      	BCF        PCLATH, 3
0x0CF1	0x2089      	CALL       _Lcd_Cmd
0x0CF2	0x158A      	BSF        PCLATH, 3
;Robot.c,348 :: 		}
L_main85:
;Robot.c,350 :: 		break;
0x0CF3	0x2D1C      	GOTO       L_main23
;Robot.c,358 :: 		}
L_main22:
0x0CF4	0x086D      	MOVF       _Etat, 0
0x0CF5	0x3A00      	XORLW      0
0x0CF6	0x1903      	BTFSC      STATUS, 2
0x0CF7	0x2922      	GOTO       L_main24
0x0CF8	0x086D      	MOVF       _Etat, 0
0x0CF9	0x3A01      	XORLW      1
0x0CFA	0x1903      	BTFSC      STATUS, 2
0x0CFB	0x2A28      	GOTO       L_main39
0x0CFC	0x086D      	MOVF       _Etat, 0
0x0CFD	0x3A02      	XORLW      2
0x0CFE	0x1903      	BTFSC      STATUS, 2
0x0CFF	0x2A5B      	GOTO       L_main42
0x0D00	0x086D      	MOVF       _Etat, 0
0x0D01	0x3A03      	XORLW      3
0x0D02	0x1903      	BTFSC      STATUS, 2
0x0D03	0x2A8E      	GOTO       L_main45
0x0D04	0x086D      	MOVF       _Etat, 0
0x0D05	0x3A04      	XORLW      4
0x0D06	0x1903      	BTFSC      STATUS, 2
0x0D07	0x2A98      	GOTO       L_main48
0x0D08	0x086D      	MOVF       _Etat, 0
0x0D09	0x3A05      	XORLW      5
0x0D0A	0x1903      	BTFSC      STATUS, 2
0x0D0B	0x2AAD      	GOTO       L_main49
0x0D0C	0x086D      	MOVF       _Etat, 0
0x0D0D	0x3A06      	XORLW      6
0x0D0E	0x1903      	BTFSC      STATUS, 2
0x0D0F	0x2AE1      	GOTO       L_main51
0x0D10	0x086D      	MOVF       _Etat, 0
0x0D11	0x3A07      	XORLW      7
0x0D12	0x1903      	BTFSC      STATUS, 2
0x0D13	0x2B15      	GOTO       L_main53
0x0D14	0x086D      	MOVF       _Etat, 0
0x0D15	0x3A08      	XORLW      8
0x0D16	0x1903      	BTFSC      STATUS, 2
0x0D17	0x2B87      	GOTO       L_main63
0x0D18	0x086D      	MOVF       _Etat, 0
0x0D19	0x3A09      	XORLW      9
0x0D1A	0x1903      	BTFSC      STATUS, 2
0x0D1B	0x2C69      	GOTO       L_main78
L_main23:
;Robot.c,362 :: 		};
0x0D1C	0x2871      	GOTO       L_main6
;Robot.c,366 :: 		}
L_end_main:
0x0D1D	0x2D1D      	GOTO       $+0
; end of _main
;Robot.c,0 :: ?ICS?lstr5_Robot
0x041C	0x344D ;?ICS?lstr5_Robot+0
0x041D	0x344F ;?ICS?lstr5_Robot+1
0x041E	0x3459 ;?ICS?lstr5_Robot+2
0x041F	0x3400 ;?ICS?lstr5_Robot+3
; end of ?ICS?lstr5_Robot
;Robot.c,0 :: ?ICS?lstr6_Robot
0x0420	0x344D ;?ICS?lstr6_Robot+0
0x0421	0x3441 ;?ICS?lstr6_Robot+1
0x0422	0x3458 ;?ICS?lstr6_Robot+2
0x0423	0x3400 ;?ICS?lstr6_Robot+3
; end of ?ICS?lstr6_Robot
;Robot.c,0 :: ?ICS?lstr4_Robot
0x0424	0x344D ;?ICS?lstr4_Robot+0
0x0425	0x3449 ;?ICS?lstr4_Robot+1
0x0426	0x344E ;?ICS?lstr4_Robot+2
0x0427	0x3400 ;?ICS?lstr4_Robot+3
; end of ?ICS?lstr4_Robot
;Robot.c,0 :: ?ICS_Sd
0x0428	0x3400 ;?ICS_Sd+0
; end of ?ICS_Sd
;Robot.c,0 :: ?ICS_Speed
0x0429	0x3400 ;?ICS_Speed+0
; end of ?ICS_Speed
;Robot.c,0 :: ?ICS_Direction
0x042A	0x3400 ;?ICS_Direction+0
; end of ?ICS_Direction
;Robot.c,0 :: ?ICS?lstr2_Robot
0x042B	0x344C ;?ICS?lstr2_Robot+0
0x042C	0x3445 ;?ICS?lstr2_Robot+1
0x042D	0x3446 ;?ICS?lstr2_Robot+2
0x042E	0x3454 ;?ICS?lstr2_Robot+3
0x042F	0x3400 ;?ICS?lstr2_Robot+4
; end of ?ICS?lstr2_Robot
;Robot.c,0 :: ?ICS?lstr3_Robot
0x0430	0x3452 ;?ICS?lstr3_Robot+0
0x0431	0x3449 ;?ICS?lstr3_Robot+1
0x0432	0x3447 ;?ICS?lstr3_Robot+2
0x0433	0x3448 ;?ICS?lstr3_Robot+3
0x0434	0x3454 ;?ICS?lstr3_Robot+4
0x0435	0x3400 ;?ICS?lstr3_Robot+5
; end of ?ICS?lstr3_Robot
;Robot.c,0 :: ?ICS?lstr1_Robot
0x0436	0x3453 ;?ICS?lstr1_Robot+0
0x0437	0x3474 ;?ICS?lstr1_Robot+1
0x0438	0x3461 ;?ICS?lstr1_Robot+2
0x0439	0x3472 ;?ICS?lstr1_Robot+3
0x043A	0x3474 ;?ICS?lstr1_Robot+4
0x043B	0x3400 ;?ICS?lstr1_Robot+5
; end of ?ICS?lstr1_Robot
;Robot.c,0 :: ?ICS_Flag
0x043C	0x3400 ;?ICS_Flag+0
; end of ?ICS_Flag
;Robot.c,0 :: ?ICS_OptionS
0x043D	0x344D ;?ICS_OptionS+0
0x043E	0x3449 ;?ICS_OptionS+1
0x043F	0x344E ;?ICS_OptionS+2
0x0440	0x3420 ;?ICS_OptionS+3
0x0441	0x3420 ;?ICS_OptionS+4
0x0442	0x3420 ;?ICS_OptionS+5
0x0443	0x344D ;?ICS_OptionS+6
0x0444	0x344F ;?ICS_OptionS+7
0x0445	0x3459 ;?ICS_OptionS+8
0x0446	0x3420 ;?ICS_OptionS+9
0x0447	0x3420 ;?ICS_OptionS+10
0x0448	0x3420 ;?ICS_OptionS+11
0x0449	0x344D ;?ICS_OptionS+12
0x044A	0x3441 ;?ICS_OptionS+13
0x044B	0x3458 ;?ICS_OptionS+14
0x044C	0x3400 ;?ICS_OptionS+15
; end of ?ICS_OptionS
;Robot.c,0 :: ?ICS_Done
0x044D	0x344F ;?ICS_Done+0
0x044E	0x344B ;?ICS_Done+1
0x044F	0x3400 ;?ICS_Done+2
; end of ?ICS_Done
;Robot.c,0 :: ?ICS_Tag
0x0450	0x343E ;?ICS_Tag+0
0x0451	0x3400 ;?ICS_Tag+1
; end of ?ICS_Tag
;Robot.c,0 :: ?ICS_Vid
0x0452	0x3420 ;?ICS_Vid+0
0x0453	0x3400 ;?ICS_Vid+1
; end of ?ICS_Vid
;__Lib_ADC_A_C.c,0 :: ?ICS_vref_mask
0x0454	0x340F ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
;Robot.c,0 :: ?ICS_OptionD
0x0455	0x344C ;?ICS_OptionD+0
0x0456	0x3445 ;?ICS_OptionD+1
0x0457	0x3446 ;?ICS_OptionD+2
0x0458	0x3454 ;?ICS_OptionD+3
0x0459	0x3420 ;?ICS_OptionD+4
0x045A	0x3420 ;?ICS_OptionD+5
0x045B	0x3420 ;?ICS_OptionD+6
0x045C	0x3420 ;?ICS_OptionD+7
0x045D	0x3420 ;?ICS_OptionD+8
0x045E	0x3452 ;?ICS_OptionD+9
0x045F	0x3449 ;?ICS_OptionD+10
0x0460	0x3447 ;?ICS_OptionD+11
0x0461	0x3448 ;?ICS_OptionD+12
0x0462	0x3454 ;?ICS_OptionD+13
0x0463	0x3400 ;?ICS_OptionD+14
; end of ?ICS_OptionD
;Robot.c,0 :: ?ICS_CSD
0x0464	0x3401 ;?ICS_CSD+0
; end of ?ICS_CSD
;Robot.c,0 :: ?ICS?lstr7_Robot
0x0465	0x344F ;?ICS?lstr7_Robot+0
0x0466	0x3442 ;?ICS?lstr7_Robot+1
0x0467	0x3453 ;?ICS?lstr7_Robot+2
0x0468	0x3454 ;?ICS?lstr7_Robot+3
0x0469	0x3420 ;?ICS?lstr7_Robot+4
0x046A	0x344C ;?ICS?lstr7_Robot+5
0x046B	0x3400 ;?ICS?lstr7_Robot+6
; end of ?ICS?lstr7_Robot
;Robot.c,0 :: ?ICS_CONFIG
0x046C	0x342A ;?ICS_CONFIG+0
0x046D	0x3443 ;?ICS_CONFIG+1
0x046E	0x344F ;?ICS_CONFIG+2
0x046F	0x344E ;?ICS_CONFIG+3
0x0470	0x3446 ;?ICS_CONFIG+4
0x0471	0x342A ;?ICS_CONFIG+5
0x0472	0x3400 ;?ICS_CONFIG+6
; end of ?ICS_CONFIG
;Robot.c,0 :: ?ICS_OptionC
0x0473	0x3420 ;?ICS_OptionC+0
0x0474	0x3453 ;?ICS_OptionC+1
0x0475	0x3450 ;?ICS_OptionC+2
0x0476	0x3445 ;?ICS_OptionC+3
0x0477	0x3445 ;?ICS_OptionC+4
0x0478	0x3444 ;?ICS_OptionC+5
0x0479	0x3420 ;?ICS_OptionC+6
0x047A	0x3420 ;?ICS_OptionC+7
0x047B	0x3420 ;?ICS_OptionC+8
0x047C	0x3420 ;?ICS_OptionC+9
0x047D	0x3444 ;?ICS_OptionC+10
0x047E	0x3449 ;?ICS_OptionC+11
0x047F	0x3452 ;?ICS_OptionC+12
0x0480	0x3443 ;?ICS_OptionC+13
0x0481	0x3454 ;?ICS_OptionC+14
0x0482	0x3400 ;?ICS_OptionC+15
; end of ?ICS_OptionC
;Robot.c,0 :: ?ICS?lstr10_Robot
0x0483	0x3453 ;?ICS?lstr10_Robot+0
0x0484	0x344C ;?ICS?lstr10_Robot+1
0x0485	0x3400 ;?ICS?lstr10_Robot+2
; end of ?ICS?lstr10_Robot
;Robot.c,0 :: ?ICS?lstr11_Robot
0x0486	0x3453 ;?ICS?lstr11_Robot+0
0x0487	0x3452 ;?ICS?lstr11_Robot+1
0x0488	0x3400 ;?ICS?lstr11_Robot+2
; end of ?ICS?lstr11_Robot
;Robot.c,0 :: ?ICS?lstr8_Robot
0x0489	0x344F ;?ICS?lstr8_Robot+0
0x048A	0x3442 ;?ICS?lstr8_Robot+1
0x048B	0x3453 ;?ICS?lstr8_Robot+2
0x048C	0x3454 ;?ICS?lstr8_Robot+3
0x048D	0x3420 ;?ICS?lstr8_Robot+4
0x048E	0x3452 ;?ICS?lstr8_Robot+5
0x048F	0x3400 ;?ICS?lstr8_Robot+6
; end of ?ICS?lstr8_Robot
;Robot.c,0 :: ?ICS?lstr9_Robot
0x0490	0x3441 ;?ICS?lstr9_Robot+0
0x0491	0x3452 ;?ICS?lstr9_Robot+1
0x0492	0x3400 ;?ICS?lstr9_Robot+2
; end of ?ICS?lstr9_Robot
;Robot.c,0 :: ?ICS_Etat
0x0493	0x3400 ;?ICS_Etat+0
; end of ?ICS_Etat
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [43]    _interrupt
0x002F       [5]    _Delay_1us
0x0034      [11]    _Delay_5500us
0x003F       [8]    _Delay_50us
0x0047      [12]    _SETFUN32
0x0053       [4]    _FIXSIGN32
0x0057      [43]    _Mul_16X16_U
0x0082       [7]    _RES032
0x0089      [94]    _Lcd_Cmd
0x00E7      [59]    _PWM2_Set_Duty
0x0122      [59]    _PWM1_Set_Duty
0x015D      [47]    _NRM3232
0x018C       [7]    _Delay_22us
0x0193       [8]    _PWM2_Start
0x019B      [23]    _ADC_Init
0x01B2       [7]    _____DoICP
0x01B9      [40]    _ADC_Read
0x01E1      [22]    _word2double
0x01F7       [9]    _MOTORS_Stop
0x0200       [6]    _PWM1_Init
0x0206      [10]    _UART1_Write
0x0210       [8]    _PWM1_Start
0x0218      [79]    _Lcd_Init
0x0267      [11]    _Lcd_Chr_CP
0x0272      [13]    _EEPROM_Read
0x027F       [6]    _PWM2_Init
0x0285      [23]    _UART1_Write_Text
0x029C       [6]    _DIRECTION_Read
0x02A2      [11]    _UART1_Read
0x02AD      [80]    _Compare_Double
0x02FD      [67]    _Lcd_Out
0x0340       [7]    _SENSOR_R2
0x0347       [6]    _SENSOR_R1
0x034D       [7]    _SENSOR_R3
0x0354       [6]    _SPEED_Read
0x035A      [27]    _strcpy
0x0375      [11]    _LCD_Init_P
0x0380      [16]    _UART1_Init
0x0390      [12]    ___CC2DW
0x039C      [16]    _SENSOR_Init
0x03AC      [18]    _MOTORS_Init
0x03BE      [14]    _MOTROS_Start
0x03CC      [23]    _MOTORS_Mill_Around
0x03E3      [35]    _EEPROM_Write
0x0406      [11]    _MOTORS_Left
0x0411      [11]    _MOTORS_Right
0x0800    [1307]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [0]    LCD_EN
0x0008       [0]    RD1_bit
0x0008       [0]    LCD_D4
0x0008       [0]    RD5_bit
0x0008       [0]    LCD_RS
0x0008       [0]    RD0_bit
0x0008       [0]    LCD_D7
0x0008       [0]    RD4_bit
0x0008       [0]    RD2_bit
0x0008       [0]    LCD_D5
0x0008       [0]    RD3_bit
0x0008       [0]    LCD_D6
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001D       [1]    CCP2CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [1]    __math_tempbD
0x0021       [4]    ?lstr5_Robot
0x0025       [4]    ?lstr6_Robot
0x0029       [4]    ?lstr4_Robot
0x002D       [1]    _Sd
0x002E       [1]    _Speed
0x002F       [1]    _Direction
0x0030       [5]    ?lstr2_Robot
0x0035       [6]    ?lstr3_Robot
0x003B       [6]    ?lstr1_Robot
0x0041       [1]    _Flag
0x0042      [16]    _OptionS
0x0052       [3]    _Done
0x0055       [2]    _Tag
0x0057       [2]    _Vid
0x0059       [1]    _vref_mask
0x005A      [15]    _OptionD
0x0069       [1]    _CSD
0x006A       [3]    ?lstr9_Robot
0x006D       [1]    _Etat
0x006E       [1]    _uart_rd
0x006F       [1]    ___saveSTATUS
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC2_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0088       [0]    TRISD4_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    LCD_D5_Direction
0x0088       [0]    TRISD5_bit
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    LCD_D4_Direction
0x0088       [0]    LCD_EN_Direction
0x0088       [0]    LCD_RS_Direction
0x0088       [0]    LCD_D7_Direction
0x0088       [0]    LCD_D6_Direction
0x0092       [1]    PR2
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x00A0       [7]    ?lstr8_Robot
0x00A7       [7]    ?lstr7_Robot
0x00AE       [7]    _CONFIG
0x00B5      [16]    _OptionC
0x00C5       [3]    ?lstr10_Robot
0x00C8       [3]    ?lstr11_Robot
0x00CB       [4]    _IR3
0x00CF       [4]    _IR1
0x00D3       [4]    _IR2
0x00D7       [5]    _TXT2
0x00DC       [1]    ___savePCLATH
0x00DD       [5]    _TXT1
0x00E2       [0]    __Lib_Lcd_cmd_status
0x00E3       [3]    _ADC_Get_Sample_Ptr
0x00E6       [2]    ___DoICPAddr
0x00E8       [1]    FARG_Lcd_Out_row
0x00E8       [1]    FARG_UART1_Write_Text_uart_text
0x00E8       [1]    FARG_MOTROS_Start_v
0x00E8       [1]    FARG_strcpy_to
0x00E8       [1]    FARG_EEPROM_Write_Address
0x00E8       [1]    FARG_MOTORS_Left_v
0x00E8       [1]    FARG_MOTORS_Right_v
0x00E9       [1]    UART1_Write_Text_data__L0
0x00E9       [1]    FARG_strcpy_from
0x00E9       [1]    FARG_Lcd_Out_column
0x00E9       [1]    FARG_EEPROM_Write_data_
0x00EA       [1]    FARG_Lcd_Out_text
0x00EA       [1]    UART1_Write_Text_counter_L0
0x00EB       [1]    Lcd_Out_i_L0
0x00EC       [1]    FARG_EEPROM_Read_Address
0x00EC       [1]    FARG_ADC_Read_channel
0x00EC       [1]    FARG_Lcd_Chr_CP_out_char
0x00EC       [4]    FARG_PWM1_Init_PWM_Freq
0x00EC       [1]    FARG_UART1_Write_data_
0x00EC       [4]    FARG_PWM2_Init_PWM_Freq
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x0110       [1]    FARG_PWM1_Set_Duty_new_duty
0x0110       [1]    FARG_PWM2_Set_Duty_new_duty
0x0110       [1]    FARG_Lcd_Cmd_out_char
0x018C       [1]    EECON1
0x018D       [1]    EECON2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x041C       [4]    ?ICS?lstr5_Robot
0x0420       [4]    ?ICS?lstr6_Robot
0x0424       [4]    ?ICS?lstr4_Robot
0x0428       [1]    ?ICS_Sd
0x0429       [1]    ?ICS_Speed
0x042A       [1]    ?ICS_Direction
0x042B       [5]    ?ICS?lstr2_Robot
0x0430       [6]    ?ICS?lstr3_Robot
0x0436       [6]    ?ICS?lstr1_Robot
0x043C       [1]    ?ICS_Flag
0x043D      [16]    ?ICS_OptionS
0x044D       [3]    ?ICS_Done
0x0450       [2]    ?ICS_Tag
0x0452       [2]    ?ICS_Vid
0x0454       [1]    ?ICS_vref_mask
0x0455      [15]    ?ICS_OptionD
0x0464       [1]    ?ICS_CSD
0x0465       [7]    ?ICS?lstr7_Robot
0x046C       [7]    ?ICS_CONFIG
0x0473      [16]    ?ICS_OptionC
0x0483       [3]    ?ICS?lstr10_Robot
0x0486       [3]    ?ICS?lstr11_Robot
0x0489       [7]    ?ICS?lstr8_Robot
0x0490       [3]    ?ICS?lstr9_Robot
0x0493       [1]    ?ICS_Etat
